
// File generated by noodle version R-2021.03#6beb14dd34#220609, Thu Jun  8 01:41:29 2023
// Copyright 2014-2021 Synopsys, Inc. All rights reserved.
// noodle -v -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/isg -I/tools/Xilinx/new/Vitis/2022.2/aietools/include -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/. -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/./aie_kernels -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/home/siyuangao/CCF2023-NameInvalid/data -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/home/siyuangao/CCF2023-NameInvalid/src -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/tools/Xilinx/new/Vitis/2022.2/aietools/include -I/home/siyuangao/CCF2023-NameInvalid/data -I/home/siyuangao/CCF2023-NameInvalid/src -I/tools/Xilinx/new/Vitis/2022.2/aietools/include -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIEARCH__=10 -DDEPLOYMENT_ELF=1 -DAIE_OPTION_SCALAR_FLOAT_ON_VECTOR -D__tct_tgt__=220608 +Oitm -iaie_core.h +Sinl +Olbb=200 +Opmsa +Olzyinl +w../Release/chesswork ../Release/chesswork/24_0.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Q2=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Q3=+Sinl,+Olbb=1000,+Opmsa,+Olzyinl +Qfast=+Sinl,+Olbb=1000,+Opmsa,+Olzyinl,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Qz=+Sinl,+Olbb=200,+Opmsa,+Olzyinl me


/***
// unsigned main()
F_main : user_defined, called {
    fnm : "main" 'unsigned main()'; 
    arg : ( addr:i w32:r );
    loc : ( LR[0] R[0] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( l=128 );
}
****
// void filter_mac(void *, void *)
F_Z10filter_macP12input_windowIaEP13output_windowIaE : user_defined, called {
    fnm : "_Z10filter_macP12input_windowIaEP13output_windowIaE" 'void _Z10filter_macP12input_windowIaEP13output_windowIaE(void *, void *)'; 
    arg : ( addr:i addr:i addr:i );
    loc : ( LR[0] P[0] P[1] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    llv : 1 0 0 0 0 ;
}
***/

[
    0 : main typ=iword bnd=e stl=PM
   10 : _cst typ=amod val=0f bnd=m
   11 : __tmp typ=addr bnd=m
   13 : _cst typ=amod val=1f bnd=m
   14 : _cst val=1f bnd=D tref2=l6v1
   15 : _cst val=32f bnd=D tref2=l7v1
   16 : _cst val=33f bnd=D tref2=l8v1
   17 : _cst val=384f bnd=D tref2=l9v1
   18 : _cst val=384f bnd=D tref2=l10v1
   19 : _cst val=16f bnd=D tref2=l11v1
   20 : _cst val=384f bnd=D tref2=l12v1
   21 : _cst val=384f bnd=D tref2=l13v1
   22 : _cst val=1f bnd=D tref2=l14v1
   23 : _cst val=32f bnd=D tref2=l15v1
   24 : _cst val=33f bnd=D tref2=l16v1
   25 : _cst val=384f bnd=D tref2=l17v1
   26 : _cst val=384f bnd=D tref2=l18v1
   27 : _cst val=0f bnd=D tref2=l19v1
   34 : _cst val=6144f bnd=D tref2=l18v2
   35 : _cst val=6144f bnd=D tref2=l13v2
   36 : _cst val=6144f bnd=D tref2=l17v2
   37 : _cst val=6144f bnd=D tref2=l12v2
   43 : _cst val=0f bnd=D tref2=l29v1
   44 : _cst val=32f bnd=D tref2=l30v1
   45 : _cst val=48f bnd=D tref2=l31v1
   46 : _cst val=1f bnd=D tref2=l35v1
   47 : _cst val=48f bnd=D tref2=l36v1
   48 : _cst val=49f bnd=D tref2=l37v1
   49 : _cst val=128f bnd=D tref2=l38v1
   50 : _cst val=128f bnd=D tref2=l39v1
   51 : _cst val=16f bnd=D tref2=l40v1
   52 : _cst val=128f bnd=D tref2=l41v1
   53 : _cst val=128f bnd=D tref2=l42v1
   54 : _cst val=1f bnd=D tref2=l43v1
   55 : _cst val=48f bnd=D tref2=l44v1
   56 : _cst val=49f bnd=D tref2=l45v1
   57 : _cst val=128f bnd=D tref2=l46v1
   58 : _cst val=128f bnd=D tref2=l47v1
   63 : _cst val=2048f bnd=D tref2=l47v2
   64 : _cst val=2048f bnd=D tref2=l42v2
   65 : _cst val=2048f bnd=D tref2=l46v2
   66 : _cst val=2048f bnd=D tref2=l41v2
   68 : _cst typ=amod val=32f bnd=m
   69 : _cst typ=amod val=48f bnd=m
   70 : _cst val=1f bnd=D tref2=l54v1
   71 : __tmp typ=w32 bnd=m
   72 : proc_24_0_bounds typ=w32 bnd=m tref2=l55v0
   73 : __tmp typ=bool bnd=m
   77 : _cst typ=t01u val=1f bnd=m
   81 : _cst typ=amod val=33f bnd=m
   83 : _cst val=0f bnd=D tref2=l58v1
   84 : _cst typ=amod val=49f bnd=m
   86 : _cst val=0f bnd=D tref2=l64v1
   87 : index typ=w32 bnd=m tref2=l54v0
   89 : _cst typ=t02u val=2f bnd=m
   92 : __ali0 typ=w08 bnd=b stl=DMb
   93 : __ali1 typ=w08 bnd=b stl=DMb
   94 : __ali2 typ=w08 bnd=b stl=DMb
   95 : __ext typ=w08 bnd=b stl=DMb
   96 : __vola typ=iword bnd=b stl=PM
  111 : __la typ=addr bnd=p
  112 : __rt typ=w32 bnd=p
  113 : _Z10filter_macP12input_windowIaEP13output_windowIaE typ=addr val=0r bnd=m
  114 : __link typ=addr bnd=m
  119 : __M_DMs typ=w32 bnd=d stl=DMs
  170 : __R_LC typ=w32 bnd=d stl=LC
  171 : __R_LE typ=addr bnd=d stl=LE
  172 : __R_LS typ=addr bnd=d stl=LS
  193 : window_buf0_buf0d typ=w08 val=-52T0 bnd=a sz=52 algn=4 stl=DM_stack tref2=l0v0
  194 : window_buf1_buf1d typ=w08 val=-104T0 bnd=a sz=52 algn=4 stl=DM_stack tref2=l24v0
  199 : __R_SP typ=addr bnd=d stl=SP
  200 : __sp typ=addr bnd=b stl=SP
  201 : __rd___sp typ=addr bnd=m
  202 : __wr___sp typ=addr bnd=m
  203 : __rd___sp typ=addr bnd=m
  206 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  208 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  209 : __wr___sp typ=addr bnd=m
  210 : _ZL11sync_buffer typ=w08 bnd=i sz=32 algn=16 stl=DMb
  212 : __ptr__ZL11sync_buffer typ=addr val=0a bnd=m adro=210
  213 : buf0 typ=w08 bnd=e sz=6144 algn=16 stl=DMb
  215 : __ptr_buf0 typ=addr val=0a bnd=m adro=213
  216 : buf0d typ=w08 bnd=e sz=6144 algn=16 stl=DMb
  218 : __ptr_buf0d typ=addr val=0a bnd=m adro=216
  219 : buf1 typ=w08 bnd=e sz=2048 algn=16 stl=DMb
  221 : __ptr_buf1 typ=addr val=0a bnd=m adro=219
  222 : buf1d typ=w08 bnd=e sz=2048 algn=16 stl=DMb
  224 : __ptr_buf1d typ=addr val=0a bnd=m adro=222
  254 : __tmp typ=w32 bnd=m
  258 : __tmp typ=addr bnd=m
  263 : __ct_8 typ=any val=8f bnd=m
  264 : __ct_5 typ=any val=5f bnd=m
  266 : __ct_6144 typ=amod val=6144f bnd=m
  269 : __ct_2048 typ=amod val=2048f bnd=m
  276 : __shv___adr_window_buf0_buf0d typ=addr bnd=m
  280 : __shv___adr_window_buf1_buf1d typ=addr bnd=m
  281 : __shv___ptr__ZL11sync_buffer typ=addr bnd=m
  287 : __shv___ptr__ZL11sync_buffer typ=addr bnd=m
  289 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  291 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  293 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  295 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  297 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  299 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  301 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  304 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  306 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  308 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  310 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  312 : __adr_window_buf0_buf0d typ=addr bnd=m adro=193
  314 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  316 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  318 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  320 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  322 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  325 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  327 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  329 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  331 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  333 : __adr_window_buf1_buf1d typ=addr bnd=m adro=194
  380 : __ct_128s0 typ=amod val=128s0 bnd=m
  381 : __ct_m52T0 typ=amod val=-52T0 bnd=m
  382 : __ct_m104T0 typ=amod val=-104T0 bnd=m
  383 : __ct_m128S0 typ=amod val=-128S0 bnd=m
  384 : __ct_24 typ=amod val=24f bnd=m
  385 : __ct_m12 typ=amod val=-12f bnd=m
  386 : __ct_m4 typ=amod val=-4f bnd=m
  387 : __ct_m8 typ=amod val=-8f bnd=m
  388 : __ct_4 typ=amod val=4f bnd=m
  389 : __ct_m24T0 typ=amod val=-24T0 bnd=m
  390 : __ct_m76T0 typ=amod val=-76T0 bnd=m
  391 : __ct_m36T0 typ=amod val=-36T0 bnd=m
  392 : __ct_m8T0 typ=amod val=-8T0 bnd=m
  393 : __ct_m4T0 typ=amod val=-4T0 bnd=m
  394 : __ct_m20T0 typ=amod val=-20T0 bnd=m
  395 : __ct_m32T0 typ=amod val=-32T0 bnd=m
  396 : __ct_m28T0 typ=amod val=-28T0 bnd=m
  397 : __ct_m40T0 typ=amod val=-40T0 bnd=m
  398 : __ct_m16T0 typ=amod val=-16T0 bnd=m
  399 : __ct_m12T0 typ=amod val=-12T0 bnd=m
  400 : __ct_m44T0 typ=amod val=-44T0 bnd=m
  401 : __ct_m88T0 typ=amod val=-88T0 bnd=m
  402 : __ct_m60T0 typ=amod val=-60T0 bnd=m
  403 : __ct_m56T0 typ=amod val=-56T0 bnd=m
  404 : __ct_m72T0 typ=amod val=-72T0 bnd=m
  405 : __ct_m84T0 typ=amod val=-84T0 bnd=m
  406 : __ct_m80T0 typ=amod val=-80T0 bnd=m
  407 : __ct_m92T0 typ=amod val=-92T0 bnd=m
  408 : __ct_m68T0 typ=amod val=-68T0 bnd=m
  409 : __ct_m64T0 typ=amod val=-64T0 bnd=m
  410 : __ct_m96T0 typ=amod val=-96T0 bnd=m
  454 : __either typ=bool bnd=m
  455 : __trgt typ=addr val=0J bnd=m
  456 : __trgt typ=addr val=0J bnd=m
  457 : __trgt typ=addr val=0J bnd=m
  458 : __trgt typ=addr val=0J bnd=m
]
F_main {
    #824 off=0
    (_cst.10 var=10) const ()  <10>;
    (_cst.15 var=13) const ()  <15>;
    (_cst.80 var=68) const ()  <80>;
    (_cst.81 var=69) const ()  <81>;
    (_cst.134 var=77) const ()  <134>;
    (_cst.184 var=81) const ()  <184>;
    (_cst.197 var=84) const ()  <197>;
    (_cst.231 var=89) const ()  <231>;
    (__ali0.253 var=92) source ()  <256>;
    (__ali1.254 var=93) source ()  <258>;
    (__ali2.255 var=94) source ()  <260>;
    (__ext.256 var=95) source ()  <262>;
    (__vola.257 var=96) source ()  <264>;
    (__la.272 var=111 stl=LR off=0) inp ()  <281>;
    (__la.273 var=111) deassign (__la.272)  <282>;
    (_Z10filter_macP12input_windowIaEP13output_windowIaE.279 var=113) const ()  <296>;
    (__M_DMs.659 var=119) st_def ()  <600>;
    (__M_DMs.724 var=119 __ali0.725 var=92 __vola.726 var=96) store (_cst.10 __ptr__ZL11sync_buffer.890 __ali0.253 __vola.257)  <718>;
    (__M_DMs.727 var=119 __ali1.728 var=93) store (__ptr_buf0.891 __adr_window_buf0_buf0d.1196 __ali1.254)  <719>;
    (__M_DMs.729 var=119 __ali1.730 var=93) store (__ptr_buf0.891 __adr_window_buf0_buf0d.1204 __ali1.728)  <720>;
    (__M_DMs.732 var=119 __ali1.733 var=93) store (_cst.80 __adr_window_buf0_buf0d.1208 __ali1.730)  <722>;
    (__M_DMs.737 var=119 __ali1.738 var=93) store (_cst.184 __adr_window_buf0_buf0d.1212 __ali1.733)  <727>;
    (__M_DMs.739 var=119 __ali1.740 var=93) store (__ptr_buf0d.892 __adr_window_buf0_buf0d.1216 __ali1.738)  <728>;
    (__M_DMs.741 var=119 __ali1.742 var=93) store (__ptr_buf0d.892 __adr_window_buf0_buf0d.1220 __ali1.740)  <729>;
    (__M_DMs.743 var=119 __ali1.744 var=93) store (_cst.10 __adr_window_buf0_buf0d.1140 __ali1.742)  <730>;
    (__M_DMs.745 var=119 __ali1.746 var=93) store (__ptr_buf0.891 __adr_window_buf0_buf0d.1224 __ali1.744)  <731>;
    (__M_DMs.747 var=119 __ali1.748 var=93) store (__ptr_buf0.891 __adr_window_buf0_buf0d.1228 __ali1.746)  <732>;
    (__M_DMs.750 var=119 __ali1.751 var=93) store (__ct_6144.957 __adr_window_buf0_buf0d.1232 __ali1.748)  <734>;
    (__M_DMs.754 var=119 __ali1.755 var=93) store (__ct_6144.957 __adr_window_buf0_buf0d.1236 __ali1.751)  <737>;
    (__M_DMs.756 var=119 __ali2.757 var=94) store (__ptr_buf1.893 __adr_window_buf1_buf1d.1200 __ali2.255)  <738>;
    (__M_DMs.758 var=119 __ali2.759 var=94) store (__ptr_buf1.893 __adr_window_buf1_buf1d.1244 __ali2.757)  <739>;
    (__M_DMs.761 var=119 __ali2.762 var=94) store (_cst.81 __adr_window_buf1_buf1d.1248 __ali2.759)  <741>;
    (__M_DMs.765 var=119 __ali2.766 var=94) store (_cst.197 __adr_window_buf1_buf1d.1252 __ali2.762)  <744>;
    (__M_DMs.767 var=119 __ali2.768 var=94) store (__ptr_buf1d.894 __adr_window_buf1_buf1d.1256 __ali2.766)  <745>;
    (__M_DMs.769 var=119 __ali2.770 var=94) store (__ptr_buf1d.894 __adr_window_buf1_buf1d.1260 __ali2.768)  <746>;
    (__M_DMs.771 var=119 __ali2.772 var=94) store (_cst.10 __adr_window_buf1_buf1d.1144 __ali2.770)  <747>;
    (__M_DMs.773 var=119 __ali2.774 var=94) store (__ptr_buf1.893 __adr_window_buf1_buf1d.1264 __ali2.772)  <748>;
    (__M_DMs.775 var=119 __ali2.776 var=94) store (__ptr_buf1.893 __adr_window_buf1_buf1d.1268 __ali2.774)  <749>;
    (__M_DMs.778 var=119 __ali2.779 var=94) store (__ct_2048.960 __adr_window_buf1_buf1d.1272 __ali2.776)  <751>;
    (__M_DMs.782 var=119 __ali2.783 var=94) store (__ct_2048.960 __adr_window_buf1_buf1d.1276 __ali2.779)  <754>;
    (__M_DMs.784 var=119 __ali1.785 var=93) store (__ptr_buf0.891 __adr_window_buf0_buf0d.1240 __ali1.755)  <755>;
    (__M_DMs.786 var=119 __ali2.787 var=94) store (__ptr_buf1.893 __adr_window_buf1_buf1d.1280 __ali2.783)  <756>;
    (__R_SP.875 var=199) st_def ()  <784>;
    (__sp.876 var=200) source ()  <785>;
    (__rd___sp.877 var=201) rd_res_reg (__R_SP.875 __sp.876)  <786>;
    (__R_SP.879 var=199 __sp.880 var=200) wr_res_reg (__wr___sp.1136 __sp.876)  <788>;
    (__rd___sp.881 var=203) rd_res_reg (__R_SP.875 __sp.880)  <789>;
    (__ptr__ZL11sync_buffer.890 var=212) const ()  <801>;
    (__ptr_buf0.891 var=215) const ()  <803>;
    (__ptr_buf0d.892 var=218) const ()  <805>;
    (__ptr_buf1.893 var=221) const ()  <807>;
    (__ptr_buf1d.894 var=224) const ()  <809>;
    (__ct_6144.957 var=266) const ()  <1003>;
    (__ct_2048.960 var=269) const ()  <1009>;
    (__wr___sp.1136 var=202) __Pvoid_add___Pvoid_amod (__rd___sp.877 __ct_128s0.1283)  <1330>;
    (__adr_window_buf0_buf0d.1140 var=206) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m52T0.1284)  <1337>;
    (__adr_window_buf1_buf1d.1144 var=208) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m104T0.1285)  <1344>;
    (__shv___ptr__ZL11sync_buffer.1192 var=287) __Pvoid_add___Pvoid_amod (__ptr__ZL11sync_buffer.890 __ct_4.1291)  <1428>;
    (__adr_window_buf0_buf0d.1196 var=289) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m24T0.1292)  <1435>;
    (__adr_window_buf1_buf1d.1200 var=291) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m76T0.1293)  <1442>;
    (__adr_window_buf0_buf0d.1204 var=293) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m36T0.1294)  <1449>;
    (__adr_window_buf0_buf0d.1208 var=295) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m8T0.1295)  <1456>;
    (__adr_window_buf0_buf0d.1212 var=297) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m4T0.1296)  <1463>;
    (__adr_window_buf0_buf0d.1216 var=299) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m20T0.1297)  <1470>;
    (__adr_window_buf0_buf0d.1220 var=301) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m32T0.1298)  <1477>;
    (__adr_window_buf0_buf0d.1224 var=304) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m28T0.1299)  <1484>;
    (__adr_window_buf0_buf0d.1228 var=306) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m40T0.1300)  <1491>;
    (__adr_window_buf0_buf0d.1232 var=308) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m16T0.1301)  <1498>;
    (__adr_window_buf0_buf0d.1236 var=310) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m12T0.1302)  <1505>;
    (__adr_window_buf0_buf0d.1240 var=312) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m44T0.1303)  <1512>;
    (__adr_window_buf1_buf1d.1244 var=314) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m88T0.1304)  <1519>;
    (__adr_window_buf1_buf1d.1248 var=316) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m60T0.1305)  <1526>;
    (__adr_window_buf1_buf1d.1252 var=318) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m56T0.1306)  <1533>;
    (__adr_window_buf1_buf1d.1256 var=320) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m72T0.1307)  <1540>;
    (__adr_window_buf1_buf1d.1260 var=322) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m84T0.1308)  <1547>;
    (__adr_window_buf1_buf1d.1264 var=325) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m80T0.1309)  <1554>;
    (__adr_window_buf1_buf1d.1268 var=327) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m92T0.1310)  <1561>;
    (__adr_window_buf1_buf1d.1272 var=329) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m68T0.1311)  <1568>;
    (__adr_window_buf1_buf1d.1276 var=331) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m64T0.1312)  <1575>;
    (__adr_window_buf1_buf1d.1280 var=333) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m96T0.1313)  <1582>;
    (__ct_128s0.1283 var=380) const ()  <1641>;
    (__ct_m52T0.1284 var=381) const ()  <1643>;
    (__ct_m104T0.1285 var=382) const ()  <1645>;
    (__ct_24.1287 var=384) const ()  <1649>;
    (__ct_m12.1288 var=385) const ()  <1651>;
    (__ct_m4.1289 var=386) const ()  <1653>;
    (__ct_m8.1290 var=387) const ()  <1655>;
    (__ct_4.1291 var=388) const ()  <1657>;
    (__ct_m24T0.1292 var=389) const ()  <1659>;
    (__ct_m76T0.1293 var=390) const ()  <1661>;
    (__ct_m36T0.1294 var=391) const ()  <1663>;
    (__ct_m8T0.1295 var=392) const ()  <1665>;
    (__ct_m4T0.1296 var=393) const ()  <1667>;
    (__ct_m20T0.1297 var=394) const ()  <1669>;
    (__ct_m32T0.1298 var=395) const ()  <1671>;
    (__ct_m28T0.1299 var=396) const ()  <1673>;
    (__ct_m40T0.1300 var=397) const ()  <1675>;
    (__ct_m16T0.1301 var=398) const ()  <1677>;
    (__ct_m12T0.1302 var=399) const ()  <1679>;
    (__ct_m44T0.1303 var=400) const ()  <1681>;
    (__ct_m88T0.1304 var=401) const ()  <1683>;
    (__ct_m60T0.1305 var=402) const ()  <1685>;
    (__ct_m56T0.1306 var=403) const ()  <1687>;
    (__ct_m72T0.1307 var=404) const ()  <1689>;
    (__ct_m84T0.1308 var=405) const ()  <1691>;
    (__ct_m80T0.1309 var=406) const ()  <1693>;
    (__ct_m92T0.1310 var=407) const ()  <1695>;
    (__ct_m68T0.1311 var=408) const ()  <1697>;
    (__ct_m64T0.1312 var=409) const ()  <1699>;
    (__ct_m96T0.1313 var=410) const ()  <1701>;
    (__trgt.1481 var=455) const ()  <2155>;
    (__trgt.1483 var=456) const ()  <2158>;
    (__trgt.1485 var=457) const ()  <2161>;
    (__trgt.1486 var=458) const ()  <2163>;
    do {
        {
            (__tmp.248 var=71) entry (__tmp.284 _cst.15)  <248>;
            (__tmp.249 var=71) entry (__tmp.286 _cst.81)  <249>;
            (__tmp.250 var=71) entry (__tmp.288 _cst.80)  <250>;
            (__ali0.466 var=92) entry (__ali0.298 __ali0.725)  <457>;
            (__ali1.467 var=93) entry (__ali1.300 __ali1.785)  <458>;
            (__ali2.468 var=94) entry (__ali2.302 __ali2.787)  <459>;
            (__ext.469 var=95) entry (__ext.304 __ext.256)  <460>;
            (__vola.470 var=96) entry (__vola.306 __vola.726)  <461>;
            (__shv___ptr__ZL11sync_buffer.981 var=281) entry (__shv___ptr__ZL11sync_buffer.979 __shv___ptr__ZL11sync_buffer.1192)  <1032>;
        } #4
        {
            #1187 off=1
            (proc_24_0_bounds.788 var=72 __ali0.789 var=92 __vola.790 var=96) load (__M_DMs.659 __shv___ptr__ZL11sync_buffer.981 __ali0.466 __vola.470)  <757>;
            (__tmp.1058 var=73) bool_eqz___uint (proc_24_0_bounds.788)  <1135>;
            (__shv___ptr__ZL11sync_buffer.1184 var=281) __Pvoid_add___Pvoid_amod (__shv___ptr__ZL11sync_buffer.981 __ct_m4.1289)  <1414>;
            () void_ba_bool_addr (__tmp.1058 __trgt.1483)  <2159>;
            (__either.1484 var=454) undefined ()  <2160>;
            if {
                {
                    () if_expr (__either.1484)  <96>;
                } #9
                {
                } #10 off=17
                {
                    do {
                        {
                            (__tmp.215 var=71) entry (__tmp.290 __tmp.250)  <215>;
                            (__tmp.216 var=71) entry (__tmp.292 __tmp.249)  <216>;
                            (__tmp.217 var=71) entry (__tmp.294 __tmp.248)  <217>;
                            (__tmp.218 var=71) entry (__tmp.296 proc_24_0_bounds.788)  <218>;
                            (__ali0.442 var=92) entry (__ali0.352 __ali0.789)  <439>;
                            (__ali1.443 var=93) entry (__ali1.354 __ali1.467)  <440>;
                            (__ali2.444 var=94) entry (__ali2.356 __ali2.468)  <441>;
                            (__ext.445 var=95) entry (__ext.358 __ext.469)  <442>;
                            (__vola.446 var=96) entry (__vola.360 __vola.790)  <443>;
                            (__shv___adr_window_buf0_buf0d.964 var=276) entry (__shv___adr_window_buf0_buf0d.962 __adr_window_buf0_buf0d.1140)  <1014>;
                            (__shv___adr_window_buf1_buf1d.974 var=280) entry (__shv___adr_window_buf1_buf1d.972 __adr_window_buf1_buf1d.1144)  <1026>;
                        } #14
                        {
                            #45 off=3
                            (__ali0.791 var=92 __ali1.792 var=93 __ali2.793 var=94 __ext.794 var=95 __vola.795 var=96) chain_tie_fence (__ali0.442 __ali1.443 __ali2.444 __ext.445 __vola.446)  <758>;
                            call {
                                () chess_separator_scheduler ()  <290>;
                            } #46 off=4
                            #51 off=5
                            (__vola.796 var=96) void_acquire___uint_uint1_t___uint (__tmp.215 _cst.134 _cst.15 __vola.795)  <291>;
                            (__ali0.797 var=92 __ali1.798 var=93 __ali2.799 var=94 __ext.800 var=95 __vola.801 var=96) chain_tie_fence (__ali0.791 __ali1.792 __ali2.793 __ext.794 __vola.796)  <759>;
                            (__ali0.802 var=92 __ali1.803 var=93 __ali2.804 var=94 __ext.805 var=95 __vola.806 var=96) chain_tie_fence (__ali0.797 __ali1.798 __ali2.799 __ext.800 __vola.801)  <760>;
                            call {
                                () chess_separator_scheduler ()  <293>;
                            } #52 off=6
                            #55 off=7
                            (__vola.807 var=96) void_acquire___uint_uint1_t___uint (__tmp.216 _cst.134 _cst.10 __vola.806)  <294>;
                            call {
                                () chess_separator_scheduler ()  <295>;
                            } #56 off=8
                            #151 off=9
                            (__link.280 var=114) addr_jal_addr (_Z10filter_macP12input_windowIaEP13output_windowIaE.279)  <298>;
                            (__ali0.808 var=92 __ali1.809 var=93 __ali2.810 var=94 __ext.811 var=95 __vola.812 var=96) chain_tie_fence (__ali0.802 __ali1.803 __ali2.804 __ext.805 __vola.807)  <761>;
                            call {
                                (__ali0.813 var=92 __ali1.814 var=93 __ali2.815 var=94 __ext.816 var=95 __vola.817 var=96) F_Z10filter_macP12input_windowIaEP13output_windowIaE (__link.281 __tmp.282 __tmp.283 __ali0.808 __ali1.809 __ali2.810 __ext.811 __vola.812)  <299>;
                                (__link.281 var=114 stl=LR off=0) assign (__link.280)  <300>;
                                (__tmp.282 var=11 stl=P off=0) assign (__shv___adr_window_buf0_buf0d.964)  <301>;
                                (__tmp.283 var=11 stl=P off=1) assign (__shv___adr_window_buf1_buf1d.974)  <302>;
                            } #58 off=10
                            #65 off=11
                            (__vola.823 var=96) void_release___uint_uint1_t___uint (__tmp.215 _cst.134 _cst.10 __vola.822)  <304>;
                            (__ali0.818 var=92 __ali1.819 var=93 __ali2.820 var=94 __ext.821 var=95 __vola.822 var=96) chain_tie_fence (__ali0.813 __ali1.814 __ali2.815 __ext.816 __vola.817)  <762>;
                            (__ali0.824 var=92 __ali1.825 var=93 __ali2.826 var=94 __ext.827 var=95 __vola.828 var=96) chain_tie_fence (__ali0.818 __ali1.819 __ali2.820 __ext.821 __vola.823)  <763>;
                            (__ali0.829 var=92 __ali1.830 var=93 __ali2.831 var=94 __ext.832 var=95 __vola.833 var=96) chain_tie_fence (__ali0.824 __ali1.825 __ali2.826 __ext.827 __vola.828)  <764>;
                            call {
                                () chess_separator_scheduler ()  <306>;
                            } #66 off=12
                            #69 off=13
                            (__vola.834 var=96) void_release___uint_uint1_t___uint (__tmp.216 _cst.134 _cst.15 __vola.833)  <307>;
                            call {
                                () chess_separator_scheduler ()  <308>;
                            } #70 off=14
                            #1235 off=15
                            (index.207 var=87) __uint__mi___uint___uint (_cst.15 __tmp.217)  <207>;
                            (proc_24_0_bounds.211 var=72) __uint__mi___uint___uint (__tmp.218 __tmp.1129)  <211>;
                            (__ali0.835 var=92 __ali1.836 var=93 __ali2.837 var=94 __ext.838 var=95 __vola.839 var=96) chain_tie_fence (__ali0.829 __ali1.830 __ali2.831 __ext.832 __vola.834)  <765>;
                            (__M_DMs.840 var=119 __ali0.841 var=92) store (__tmp.1445 __shv___adr_window_buf0_buf0d.1152 __ali0.835)  <766>;
                            (__M_DMs.842 var=119 __ali0.843 var=92) store (__tmp.1445 __shv___adr_window_buf0_buf0d.1156 __ali0.841)  <767>;
                            (__M_DMs.844 var=119 __ali0.845 var=92) store (__tmp.1445 __shv___adr_window_buf0_buf0d.1160 __ali0.843)  <768>;
                            (__M_DMs.846 var=119 __ali1.847 var=93) store (__tmp.1447 __shv___adr_window_buf1_buf1d.1168 __ali1.836)  <769>;
                            (__M_DMs.848 var=119 __ali1.849 var=93) store (__tmp.1447 __shv___adr_window_buf1_buf1d.1172 __ali1.847)  <770>;
                            (__M_DMs.850 var=119 __ali1.851 var=93) store (__tmp.1447 __shv___adr_window_buf1_buf1d.1176 __ali1.849)  <771>;
                            (__ali0.852 var=92 __ali1.853 var=93 __ali2.854 var=94 __ext.855 var=95 __vola.856 var=96) chain_tie_fence (__ali0.845 __ali1.851 __ali2.837 __ext.838 __vola.839)  <772>;
                            (__tmp.1061 var=73) bool_eqz___uint (__tmp.217)  <1141>;
                            (__tmp.1064 var=73) bool_nez___uint (proc_24_0_bounds.211)  <1147>;
                            (__tmp.1129 var=73) bool__lt___sint___sint (_cst.10 __tmp.218)  <1317>;
                            (__shv___adr_window_buf0_buf0d.1152 var=276) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf0_buf0d.964 __ct_24.1287)  <1358>;
                            (__shv___adr_window_buf0_buf0d.1156 var=276) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf0_buf0d.1152 __ct_m12.1288)  <1365>;
                            (__shv___adr_window_buf0_buf0d.1160 var=276) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf0_buf0d.1156 __ct_m4.1289)  <1372>;
                            (__shv___adr_window_buf0_buf0d.1164 var=276) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf0_buf0d.1160 __ct_m8.1290)  <1379>;
                            (__shv___adr_window_buf1_buf1d.1168 var=280) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf1_buf1d.974 __ct_24.1287)  <1386>;
                            (__shv___adr_window_buf1_buf1d.1172 var=280) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf1_buf1d.1168 __ct_m12.1288)  <1393>;
                            (__shv___adr_window_buf1_buf1d.1176 var=280) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf1_buf1d.1172 __ct_m4.1289)  <1400>;
                            (__shv___adr_window_buf1_buf1d.1180 var=280) __Pvoid_add___Pvoid_amod (__shv___adr_window_buf1_buf1d.1176 __ct_m8.1290)  <1407>;
                            (__tmp.1444 var=254) __ulong_select_bool___ulong___ulong (__tmp.1061 _cst.80 _cst.184)  <2045>;
                            (__tmp.1445 var=258) __Pvoid_select_bool___Pvoid___Pvoid (__tmp.1061 __ptr_buf0.891 __ptr_buf0d.892)  <2046>;
                            (__tmp.1446 var=254) __ulong_select_bool___ulong___ulong (__tmp.1061 _cst.81 _cst.197)  <2047>;
                            (__tmp.1447 var=258) __Pvoid_select_bool___Pvoid___Pvoid (__tmp.1061 __ptr_buf1.893 __ptr_buf1d.894)  <2048>;
                            () void_ba_bool_addr (__tmp.1064 __trgt.1481)  <2156>;
                            (__either.1482 var=454) undefined ()  <2157>;
                        } #15
                        {
                            () while_expr (__either.1482)  <219>;
                            (__tmp.290 var=71 __tmp.291 var=71) exit (__tmp.1444)  <315>;
                            (__tmp.292 var=71 __tmp.293 var=71) exit (__tmp.1446)  <316>;
                            (__tmp.294 var=71 __tmp.295 var=71) exit (index.207)  <317>;
                            (__tmp.296 var=71 __tmp.297 var=71) exit (proc_24_0_bounds.211)  <318>;
                            (__ali0.352 var=92 __ali0.353 var=92) exit (__ali0.852)  <361>;
                            (__ali1.354 var=93 __ali1.355 var=93) exit (__ali1.853)  <362>;
                            (__ali2.356 var=94 __ali2.357 var=94) exit (__ali2.854)  <363>;
                            (__ext.358 var=95 __ext.359 var=95) exit (__ext.855)  <364>;
                            (__vola.360 var=96 __vola.361 var=96) exit (__vola.856)  <365>;
                            (__shv___adr_window_buf0_buf0d.962 var=276 __shv___adr_window_buf0_buf0d.963 var=276) exit (__shv___adr_window_buf0_buf0d.1164)  <1013>;
                            (__shv___adr_window_buf1_buf1d.972 var=280 __shv___adr_window_buf1_buf1d.973 var=280) exit (__shv___adr_window_buf1_buf1d.1180)  <1025>;
                        } #23
                    } #13
                    #1277 off=16
                    () void_ja_addr (__trgt.1485)  <2162>;
                } #1275
                {
                    (__tmp.220 var=71) merge (__tmp.248 __tmp.295)  <220>;
                    (__tmp.221 var=71) merge (__tmp.249 __tmp.293)  <221>;
                    (__tmp.222 var=71) merge (__tmp.250 __tmp.291)  <222>;
                    (__ali0.346 var=92) merge (__ali0.789 __ali0.353)  <355>;
                    (__ali1.347 var=93) merge (__ali1.467 __ali1.355)  <356>;
                    (__ali2.348 var=94) merge (__ali2.468 __ali2.357)  <357>;
                    (__ext.349 var=95) merge (__ext.469 __ext.359)  <358>;
                    (__vola.350 var=96) merge (__vola.790 __vola.361)  <359>;
                } #24
            } #8
            #72 off=18
            (__ali0.857 var=92 __ali1.858 var=93 __ali2.859 var=94 __ext.860 var=95 __vola.861 var=96) chain_tie_fence (__ali0.346 __ali1.347 __ali2.348 __ext.349 __vola.350)  <773>;
            call {
                () chess_separator_scheduler (__ct_8.954)  <309>;
                (__ct_8.954 var=263) const_inp ()  <999>;
            } #73 off=19
            #76 off=20
            (__vola.862 var=96) void_event_uint2_t (_cst.231 __vola.861)  <310>;
            call {
                () chess_separator_scheduler (__ct_5.955)  <311>;
                (__ct_5.955 var=264) const_inp ()  <1000>;
            } #77 off=21
            #480 off=22
            (__ali0.863 var=92 __ali1.864 var=93 __ali2.865 var=94 __ext.866 var=95 __vola.867 var=96) chain_tie_fence (__ali0.857 __ali1.858 __ali2.859 __ext.860 __vola.862)  <774>;
            (__tmp.868 var=71 __ali0.869 var=92 __vola.870 var=96) load (__M_DMs.659 __shv___ptr__ZL11sync_buffer.1184 __ali0.863 __vola.867)  <775>;
            (__tmp.1132 var=73) bool__ge___sint___sint (_cst.10 __tmp.868)  <1323>;
            (__shv___ptr__ZL11sync_buffer.1188 var=281) __Pvoid_add___Pvoid_amod (__shv___ptr__ZL11sync_buffer.1184 __ct_4.1291)  <1421>;
            (__tmp.1480 var=73) bool_nez_w32 (__tmp.1132)  <2154>;
            () void_ba_bool_addr (__tmp.1480 __trgt.1486)  <2164>;
            (__either.1487 var=454) undefined ()  <2165>;
        } #5
        {
            () while_expr (__either.1487)  <251>;
            (__tmp.284 var=71 __tmp.285 var=71) exit (__tmp.220)  <312>;
            (__tmp.286 var=71 __tmp.287 var=71) exit (__tmp.221)  <313>;
            (__tmp.288 var=71 __tmp.289 var=71) exit (__tmp.222)  <314>;
            (__ali0.298 var=92 __ali0.299 var=92) exit (__ali0.869)  <319>;
            (__ali1.300 var=93 __ali1.301 var=93) exit (__ali1.864)  <320>;
            (__ali2.302 var=94 __ali2.303 var=94) exit (__ali2.865)  <321>;
            (__ext.304 var=95 __ext.305 var=95) exit (__ext.866)  <322>;
            (__vola.306 var=96 __vola.307 var=96) exit (__vola.870)  <323>;
            (__shv___ptr__ZL11sync_buffer.979 var=281 __shv___ptr__ZL11sync_buffer.980 var=281) exit (__shv___ptr__ZL11sync_buffer.1188)  <1031>;
        } #32
    } #3
    #80 off=23 nxt=-2
    () sink (__ali0.299)  <257>;
    () sink (__ali1.301)  <259>;
    () sink (__ali2.303)  <261>;
    () sink (__ext.305)  <263>;
    () sink (__vola.307)  <265>;
    (__rt.274 var=112 stl=R off=0) assign (_cst.10)  <283>;
    () out (__rt.274)  <284>;
    () void_ret_addr (__la.273)  <285>;
    (__R_SP.888 var=199 __sp.889 var=200) wr_res_reg (__wr___sp.1148 __sp.880)  <799>;
    () sink (__sp.889)  <800>;
    (__wr___sp.1148 var=209) __Pvoid_add___Pvoid_amod (__rd___sp.881 __ct_m128S0.1286)  <1351>;
    (__ct_m128S0.1286 var=383) const ()  <1647>;
} #1
0 : '/tools/Xilinx/new/Vitis/2022.2/aietools/include/adf/window/window.h';
1 : '/tools/Xilinx/new/Vitis/2022.2/aietools/include/adf/window/window_internal.h';
2 : '24_0/src/24_0.cc';
3 : 'main';
----------
0 : (3,0:0,0);
1 : (2,32:0,2);
45 : (2,56:4,25);
46 : (2,56:4,25,16);
51 : (2,56:4,25);
52 : (2,57:4,26,16);
55 : (2,56:4,25);
56 : (2,57:4,26,16);
58 : (2,58:4,27,16);
65 : (2,56:4,25);
66 : (2,63:4,29,16);
69 : (2,56:4,25);
70 : (2,63:4,29,16);
72 : (2,0:0,24);
73 : (2,77:2,39,22);
76 : (2,0:0,24);
77 : (2,77:2,39,22);
80 : (2,81:0,41);
151 : (2,58:4,27,16);
480 : (2,78:21,40,22);
824 : (2,0:0,24,15);
1187 : (2,52:9,23,16);
1235 : (2,52:9,23,20);
----------
10 : (2,33:17,0);
15 : (2,34:2,0,2);
80 : (0,171:0,0,13);
81 : (0,171:0,0,13);
96 : (2,52:2,23,15);
134 : (2,56:4,0,16);
184 : (2,64:20,0,16);
197 : (2,66:29,0,18);
207 : (2,70:14,36,20);
211 : (2,74:7,38,20);
219 : (2,52:2,23,21);
220 : (2,52:2,23,21);
221 : (2,52:2,23,21);
222 : (2,52:2,23,21);
231 : (2,77:2,0,22);
284 : (2,81:0,41,21);
285 : (2,81:0,41,21);
290 : (2,56:4,25,16);
291 : (2,56:4,25,16);
293 : (2,57:4,26,16);
294 : (2,57:4,26,16);
295 : (2,57:4,26,16);
296 : (2,58:4,0,16);
298 : (2,58:4,27,16);
299 : (2,58:4,27,16);
304 : (2,62:4,28,16);
306 : (2,63:4,29,16);
307 : (2,63:4,29,16);
308 : (2,63:4,29,16);
309 : (2,77:2,39,22);
310 : (2,77:2,39,22);
311 : (2,77:2,39,22);
718 : (2,33:17,1);
719 : (1,57:24,4,4);
720 : (1,58:22,5,4);
722 : (1,62:21,6,4);
727 : (1,62:21,6,4);
728 : (1,71:21,9,5);
729 : (1,72:19,10,5);
730 : (1,78:20,11,6);
731 : (1,79:20,12,6);
732 : (1,80:20,13,6);
734 : (1,82:20,15,6);
737 : (1,82:20,15,6);
738 : (1,57:24,4,9);
739 : (1,58:22,5,9);
741 : (1,62:21,6,9);
744 : (1,62:21,6,9);
745 : (1,71:21,9,10);
746 : (1,72:19,10,10);
747 : (1,78:20,11,11);
748 : (1,79:20,12,11);
749 : (1,80:20,13,11);
751 : (1,82:20,15,11);
754 : (1,82:20,15,11);
755 : (0,161:0,17,12);
756 : (0,171:0,18,13);
757 : (2,50:27,22,16);
758 : (2,56:4,25,16);
759 : (2,56:4,25,16);
760 : (2,57:4,26,16);
761 : (2,57:4,26,16);
762 : (2,62:4,28,16);
763 : (2,62:4,28,16);
764 : (2,63:4,29,16);
765 : (2,63:4,29,16);
766 : (0,1130:14,31,17);
767 : (0,1131:12,32,17);
768 : (2,66:29,33,18);
769 : (0,1130:14,31,19);
770 : (0,1131:12,32,19);
771 : (2,69:30,35,20);
772 : (2,72:4,37,20);
773 : (2,77:2,39,22);
774 : (2,77:2,39,22);
775 : (2,78:6,40,22);
788 : (2,32:0,0);
799 : (2,81:0,41,21);
801 : (2,33:17,0);
803 : (1,57:24,0,3);
805 : (1,71:21,0,4);
807 : (1,57:24,0,8);
809 : (1,71:21,0,9);
999 : (2,77:2,39,22);
1000 : (2,77:2,39,22);
1003 : (1,82:13,0,6);
1009 : (1,82:13,0,11);
1135 : (2,52:9,23,16);
1141 : (2,64:20,30,16);
1147 : (2,52:9,23,20);
1317 : (2,74:24,38,20);
1323 : (2,78:21,40,22);
1330 : (2,32:0,0);
1351 : (2,81:0,0,21);
1358 : (1,79:13,0,6);
1365 : (1,80:13,0,6);
1372 : (1,81:13,0,6);
1386 : (1,79:13,0,11);
1393 : (1,80:13,0,11);
1400 : (1,81:13,0,11);
1414 : (2,33:17,0);
1428 : (2,42:6,0,15);
1435 : (1,57:13,4,3);
1442 : (1,57:13,4,8);
1449 : (1,58:13,0,4);
1456 : (1,62:10,0,4);
1463 : (1,62:21,0,4);
1470 : (1,64:8,0,4);
1477 : (1,65:8,0,4);
1484 : (1,79:13,0,6);
1491 : (1,80:13,0,6);
1498 : (1,82:13,0,6);
1505 : (1,82:20,0,6);
1512 : (1,81:13,0,6);
1519 : (1,58:13,0,9);
1526 : (1,62:10,0,9);
1533 : (1,62:21,0,9);
1540 : (1,64:8,0,9);
1547 : (1,65:8,0,9);
1554 : (1,79:13,0,11);
1561 : (1,80:13,0,11);
1568 : (1,82:13,0,11);
1575 : (1,82:20,0,11);
1582 : (1,81:13,0,11);
1641 : (2,32:0,0);
1647 : (2,81:0,0,21);
1649 : (1,79:13,0,6);
1651 : (1,80:13,0,6);
1653 : (1,81:13,0,6);
1659 : (1,57:13,0,3);
1661 : (1,57:13,0,8);
1663 : (1,58:13,0,4);
1665 : (1,62:10,0,4);
1667 : (1,62:21,0,4);
1669 : (1,64:8,0,4);
1671 : (1,65:8,0,4);
1673 : (1,79:13,0,6);
1675 : (1,80:13,0,6);
1677 : (1,82:13,0,6);
1679 : (1,82:20,0,6);
1681 : (1,81:13,0,6);
1683 : (1,58:13,0,9);
1685 : (1,62:10,0,9);
1687 : (1,62:21,0,9);
1689 : (1,64:8,0,9);
1691 : (1,65:8,0,9);
1693 : (1,79:13,0,11);
1695 : (1,80:13,0,11);
1697 : (1,82:13,0,11);
1699 : (1,82:20,0,11);
1701 : (1,81:13,0,11);
2045 : (2,64:20,30,16);
2046 : (0,1130:16,31,17);
2047 : (2,67:20,34,18);
2048 : (0,1130:16,31,19);
2156 : (2,52:2,23,21);
2159 : (2,52:2,23,15);
==========ranges_locs
0: ' ';
1: ' l67v0 l66v0 l65v0 l64v0 l63v0 l62v0 l61v0 l60v0 l59v0 l58v0 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v0 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v0 l17v0 l16v0 l15v0 l14v0 l13v0 l12v0 l11v0 l10v0 l9v0 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 ';
2: ' l0v0 ';
3: ' l19v1 l18v1 l17v1 l16v1 l15v1 l14v1 l13v1 l12v1 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 ';
4: ' l21v0 l20v0 l19v1 l18v1 l17v1 l16v1 l15v1 l14v1 l13v1 l12v1 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 ';
5: ' l23v0 l22v0 l21v0 l20v0 l19v1 l18v1 l17v1 l16v1 l15v1 l14v1 l13v1 l12v1 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 ';
6: ' l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 ';
7: ' l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 ';
8: ' l47v1 l46v1 l45v1 l44v1 l43v1 l42v1 l41v1 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r3 r4 r5 ';
9: ' l49v0 l48v0 l47v1 l46v1 l45v1 l44v1 l43v1 l42v1 l41v1 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r3 r4 r5 ';
10: ' l51v0 l50v0 l49v0 l48v0 l47v1 l46v1 l45v1 l44v1 l43v1 l42v1 l41v1 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r3 r4 r5 ';
11: ' l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r3 r4 r5 ';
12: ' l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r6 ';
13: ' l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r7 ';
14: ' l54v1 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v1 l30v1 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
15: ' l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
16: ' l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r10 ';
17: ' l60v0 l59v0 l58v1 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r8 r10 ';
18: ' l60v0 l59v0 l58v1 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r10 ';
19: ' l66v0 l65v0 l64v1 l63v0 l62v0 l61v0 l60v0 l59v0 l58v1 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r9 r10 ';
20: ' l66v0 l65v0 l64v1 l63v0 l62v0 l61v0 l60v0 l59v0 l58v1 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r10 ';
21: ' l67v0 l66v0 l65v0 l64v1 l63v0 l62v0 l61v0 l60v0 l59v0 l58v1 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
22: ' l67v0 l66v0 l65v0 l64v1 l63v0 l62v0 l61v0 l60v0 l59v0 l58v1 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v2 l46v2 l45v1 l44v1 l43v1 l42v2 l41v2 l40v1 l39v1 l38v1 l37v1 l36v1 l35v1 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v1 l18v2 l17v2 l16v1 l15v1 l14v1 l13v2 l12v2 l11v1 l10v1 l9v1 l8v1 l7v1 l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r10 ';

