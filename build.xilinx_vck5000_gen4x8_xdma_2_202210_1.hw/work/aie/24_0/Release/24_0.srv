
// File generated by darts version R-2021.03#6beb14dd34#220609, Thu Jun  8 01:43:48 2023
// Copyright 2014-2021 Synopsys, Inc. All rights reserved.
// darts -v -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib -d -h -I/tools/Xilinx/new/Vitis/2022.2/aietools/include -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/. -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/./aie_kernels -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/home/siyuangao/CCF2023-NameInvalid/data -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/home/siyuangao/CCF2023-NameInvalid/src -I/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/tools/Xilinx/new/Vitis/2022.2/aietools/include -I/home/siyuangao/CCF2023-NameInvalid/data -I/home/siyuangao/CCF2023-NameInvalid/src -I/tools/Xilinx/new/Vitis/2022.2/aietools/include -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/tools/Xilinx/new/Vitis/2022.2/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIEARCH__=10 -DDEPLOYMENT_ELF=1 -DAIE_OPTION_SCALAR_FLOAT_ON_VECTOR -D__tct_tgt__=220608 -L +Ihex +nanno +u ../Release/24_0 me

// Release: ipp R-2021.03-TGT-220608
.label __AIE_ARCH_MODEL_VERSION__10022200__inlined__1__me_basic___main_init_
.label _main_init
.function _main_init _main_init
.src_ref 0 "me_basic.c" 87 first
.src_ref 0 "me_basic.c" 94 4 first
.function_start
	     0      "00001011" // 	NOP;                                                                                                MOV.u20 sp, #196640 /* MW 4 */
	     1      "00000010" // /* MW 3 */
	     2      "01100100" // /* MW 2 */
	     3      "01001100" // /* MW 1 */
.src_ref 0 "me_basic.c" 88 first
	     4      "00000011" // 	NOP;                                                                  MOV.s12 r12, #0 /* MW 4 */
	     5      "11000000" // /* MW 3 */
	     6      "00000011" // /* MW 2 */
	     7      "01000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 89 first
	     8      "00100001" // 	MOV mc0, r12 /* MW 2 */
	     9      "11001010" // /* MW 1 */
.src_ref 0 "me_basic.c" 90 first
	    10      "01100001" // 	MOV mc1, r12 /* MW 2 */
	    11      "11001010" // /* MW 1 */
	    12      "11110111" // 	                                        NOP;                                                        MOV.u20 p6, #1048572;         NOP /* MW 8 */
	    13      "11000111" // /* MW 7 */
	    14      "11111111" // /* MW 6 */
	    15      "10111011" // /* MW 5 */
	    16      "01111111" // /* MW 4 */
	    17      "00000000" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "10000000" // /* MW 1 */
	    20      "11110111" // 	                                        NOP;                                                        J #112;                       NOP /* MW 8 */
	    21      "00000111" // /* MW 7 */
	    22      "00000111" // /* MW 6 */
	    23      "00000000" // /* MW 5 */
	    24      "10100000" // /* MW 4 */
	    25      "00000000" // /* MW 3 */
	    26      "00000000" // /* MW 2 */
	    27      "10000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 41
.delay_slot
	    28      "11110111" // 	                                        NOP;                                                        MOV.u20 r11, #0;              NOP /* MW 8 */
	    29      "00000111" // /* MW 7 */
	    30      "00000000" // /* MW 6 */
	    31      "11101100" // /* MW 5 */
	    32      "01000000" // /* MW 4 */
	    33      "00000000" // /* MW 3 */
	    34      "00000000" // /* MW 2 */
	    35      "10000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	    36      "11110101" // 	MOV p7, p0 /* MW 2 */
	    37      "10100010" // /* MW 1 */
.src_ref 0 "me_basic.c" 96 6
.src_ref 0 "me_basic.c" 97 6
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	    38      "01110111" // 	NOP;                                                                  MOV.s12 r12, #0;              MOV r10, r6 /* MW 8 */
	    39      "01111000" // /* MW 7 */
	    40      "00000000" // /* MW 6 */
	    41      "10001000" // /* MW 5 */
	    42      "01101110" // /* MW 4 */
	    43      "00000111" // /* MW 3 */
	    44      "00000000" // /* MW 2 */
	    45      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 96 6 first
.delay_slot
	    46      "00100001" // 	MOV md0, r12 /* MW 2 */
	    47      "11001011" // /* MW 1 */
.src_ref 0 "me_basic.c" 97 6 first
.delay_slot
	    48      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          MOV md1, r12;                 NOP;                                    NOP /* MW 16 */
	    49      "00000000" // /* MW 15 */
	    50      "00000000" // /* MW 14 */
	    51      "00000000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "01000000" // /* MW 10 */
	    55      "11001011" // /* MW 9 */
	    56      "00000010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.src_ref 0 "me_basic.c" 70 13 first
.loop_nesting 1
	    64      "00110111" // 	LDA cb0, [p6], #-4;                     NOP;                          NOP /* MW 8 */
	    65      "00000000" // /* MW 7 */
	    66      "00000000" // /* MW 6 */
	    67      "00000000" // /* MW 5 */
	    68      "00000000" // /* MW 4 */
	    69      "10000000" // /* MW 3 */
	    70      "10111111" // /* MW 2 */
	    71      "01000000" // /* MW 1 */
	    72      "00000001" // 	NOP /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOP /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOP /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOP /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOP /* MW 2 */
	    81      "00000000" // /* MW 1 */
	    82      "00000001" // 	NOP /* MW 2 */
	    83      "00000000" // /* MW 1 */
	    84      "00000001" // 	NOP /* MW 2 */
	    85      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 70 16
.no_stack_arguments
	    86      "01000001" // 	JAL cb0 /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOP /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOP /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOP /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOP /* MW 2 */
	    95      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    96      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	    97      "00000000" // /* MW 15 */
	    98      "00000000" // /* MW 14 */
	    99      "00000000" // /* MW 13 */
	   100      "00000000" // /* MW 12 */
	   101      "00000000" // /* MW 11 */
	   102      "00000000" // /* MW 10 */
	   103      "00000000" // /* MW 9 */
	   104      "00000000" // /* MW 8 */
	   105      "00000000" // /* MW 7 */
	   106      "00000000" // /* MW 6 */
	   107      "00000000" // /* MW 5 */
	   108      "00000000" // /* MW 4 */
	   109      "00000000" // /* MW 3 */
	   110      "00000000" // /* MW 2 */
	   111      "00000000" // /* MW 1 */
.label __ll1__main_init
.return_address
	   112      "00110111" // 	PADDA [p6], #4;                         NOP;                          NOP /* MW 8 */
	   113      "00000000" // /* MW 7 */
	   114      "00000000" // /* MW 6 */
	   115      "00000000" // /* MW 5 */
	   116      "00000000" // /* MW 4 */
	   117      "10000000" // /* MW 3 */
	   118      "10100011" // /* MW 2 */
	   119      "00001000" // /* MW 1 */
	   120      "00000001" // 	NOP /* MW 2 */
	   121      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 41
	   122      "11000101" // 	MOV r12, p6 /* MW 2 */
	   123      "10111011" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 41 first
	   124      "00000011" // 	NOP;                                                                  NE r12, r12, r11 /* MW 4 */
	   125      "11000000" // /* MW 3 */
	   126      "10111100" // /* MW 2 */
	   127      "00111001" // /* MW 1 */
.src_ref 0 "me_basic.c" 69 8
	   128      "11110111" // 	                                        NOP;                                                        BNEZ r12,#64;                 NOP /* MW 8 */
	   129      "00000111" // /* MW 7 */
	   130      "00000100" // /* MW 6 */
	   131      "10000000" // /* MW 5 */
	   132      "10010001" // /* MW 4 */
	   133      "00000000" // /* MW 3 */
	   134      "00000000" // /* MW 2 */
	   135      "10000000" // /* MW 1 */
.delay_slot
	   136      "00000011" // 	NOP;                                    PADDS [p6], #-4 /* MW 4 */
	   137      "11110000" // /* MW 3 */
	   138      "00010111" // /* MW 2 */
	   139      "10100000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOP /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOP /* MW 2 */
	   143      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   144      "00000001" // 	NOP /* MW 2 */
	   145      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   146      "00000001" // 	NOP /* MW 2 */
	   147      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11 first
.no_stack_arguments
.loop_nesting 0
	   148      "11110111" // 	                                        NOP;                                                        JAL #272;                     NOP /* MW 8 */
	   149      "00000111" // /* MW 7 */
	   150      "00010001" // /* MW 6 */
	   151      "00100000" // /* MW 5 */
	   152      "10100000" // /* MW 4 */
	   153      "00000000" // /* MW 3 */
	   154      "00000000" // /* MW 2 */
	   155      "10000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	   156      "01100101" // 	MOV r6, r10 /* MW 2 */
	   157      "11101011" // /* MW 1 */
.src_ref 0 "me_basic.c" 104 11
.delay_slot
	   158      "10000101" // 	MOV p0, p7 /* MW 2 */
	   159      "10111110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "00000001" // 	NOP /* MW 2 */
	   161      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   162      "00000001" // 	NOP /* MW 2 */
	   163      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   164      "00011111" // 	NOP;                NOP;                NOP;                          NOP;                          NOP /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 76 4 first
.return_address
.no_stack_arguments
	   176      "11110111" // 	                                        NOP;                                                        JAL #2944;                    NOP /* MW 8 */
	   177      "00000111" // /* MW 7 */
	   178      "10111000" // /* MW 6 */
	   179      "00100000" // /* MW 5 */
	   180      "10100000" // /* MW 4 */
	   181      "00000000" // /* MW 3 */
	   182      "00000000" // /* MW 2 */
	   183      "10000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 76 4
.delay_slot
	   184      "11110111" // 	                                        NOP;                                                        MOV.u20 p0, #0;               NOP /* MW 8 */
	   185      "00000111" // /* MW 7 */
	   186      "00000000" // /* MW 6 */
	   187      "10100000" // /* MW 5 */
	   188      "01000000" // /* MW 4 */
	   189      "00000000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   192      "00000001" // 	NOP /* MW 2 */
	   193      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   194      "00000001" // 	NOP /* MW 2 */
	   195      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   196      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   197      "00000000" // /* MW 3 */
	   198      "00000000" // /* MW 2 */
	   199      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   200      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   201      "00000000" // /* MW 7 */
	   202      "00000000" // /* MW 6 */
	   203      "00000000" // /* MW 5 */
	   204      "00000000" // /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   208      "00000001" // 	NOP /* MW 2 */
	   209      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   210      "00000001" // 	NOP /* MW 2 */
	   211      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   212      "00000001" // 	NOP /* MW 2 */
	   213      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   214      "00000001" // 	NOP /* MW 2 */
	   215      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   216      "00000001" // 	NOP /* MW 2 */
	   217      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   218      "00000001" // 	NOP /* MW 2 */
	   219      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   220      "00000001" // 	NOP /* MW 2 */
	   221      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   222      "00000001" // 	NOP /* MW 2 */
	   223      "00000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 61 4 first
	   224      "00000011" // 	NOP;                                                                  EVENT #2 /* MW 4 */
	   225      "00100000" // /* MW 3 */
	   226      "00000000" // /* MW 2 */
	   227      "00000100" // /* MW 1 */
.swstall chess_separator_scheduler
	   228      "00000001" // 	NOP /* MW 2 */
	   229      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   230      "00000001" // 	NOP /* MW 2 */
	   231      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   232      "00000001" // 	NOP /* MW 2 */
	   233      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   234      "00000001" // 	NOP /* MW 2 */
	   235      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   236      "00000001" // 	NOP /* MW 2 */
	   237      "00000000" // /* MW 1 */
.src_ref 1 "stdlib.h" 62 4 first
.swstall for_chess_exit
.exit
	   238      "00000001" // 	NOP /* MW 2 */
	   239      "00000000" // /* MW 1 */
.label TGT_F_main_init_240
.src_ref 1 "stdlib.h" 63 4 first
.loop_nesting 1
	   240      "11110111" // 	                                        NOP;                                                        J #240;                       NOP /* MW 8 */
	   241      "00000111" // /* MW 7 */
	   242      "00001111" // /* MW 6 */
	   243      "00000000" // /* MW 5 */
	   244      "10100000" // /* MW 4 */
	   245      "00000000" // /* MW 3 */
	   246      "00000000" // /* MW 2 */
	   247      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   248      "00000001" // 	NOP /* MW 2 */
	   249      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   250      "00000001" // 	NOP /* MW 2 */
	   251      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   252      "00000001" // 	NOP /* MW 2 */
	   253      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   254      "00000001" // 	NOP /* MW 2 */
	   255      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   256      "00000001" // 	NOP /* MW 2 */
.label _main_init__end
	   257      "00000000" // /* MW 1 */
.label _main___func_begin0
.label _main
.function main
.src_ref 2 "window.h" 161
.src_ref 2 "window_internal.h" 57 13
.src_ref 2 "window_internal.h" 57 24
.src_ref 2 "window_internal.h" 58 22
.src_ref 2 "window_internal.h" 62 21
.src_ref 2 "window_internal.h" 62 21
.src_ref 2 "window_internal.h" 79 20
.src_ref 2 "window_internal.h" 80 20
.src_ref 3 "24_0.cc" 32
.src_ref 3 "24_0.cc" 32 first
.src_ref 3 "24_0.cc" 56 4
.src_ref 3 "24_0.cc" 62 4
.function_start
	   272      "00111111" // 	MOV.s10 m1, #33;    MOV.s9 r7, #32;                                   MOV.s12 m0, #160;             MOV.u20 r12, #212992;         NOP /* MW 12 */
	   273      "00000000" // /* MW 11 */
	   274      "00000000" // /* MW 10 */
	   275      "11011111" // /* MW 9 */
	   276      "00000100" // /* MW 8 */
	   277      "01000000" // /* MW 7 */
	   278      "01010000" // /* MW 6 */
	   279      "00001000" // /* MW 5 */
	   280      "11000100" // /* MW 4 */
	   281      "01010111" // /* MW 3 */
	   282      "00001000" // /* MW 2 */
	   283      "00110001" // /* MW 1 */
.src_ref 2 "window.h" 171
.src_ref 2 "window.h" 1130 16
.src_ref 2 "window_internal.h" 57 13
.src_ref 2 "window_internal.h" 57 24
.src_ref 2 "window_internal.h" 58 22
.src_ref 2 "window_internal.h" 62 21
.src_ref 2 "window_internal.h" 62 21
.src_ref 2 "window_internal.h" 79 20
.src_ref 2 "window_internal.h" 80 20
.src_ref 3 "24_0.cc" 32
.src_ref 3 "24_0.cc" 57 4
.src_ref 3 "24_0.cc" 63 4
.src_ref 3 "24_0.cc" 64 20
	   284      "00111111" // 	PADDA [sp], m0;     MOV.s9 r13, #49;                                  MOV.s12 r6, #48;              MOV.u20 r15, #245760;         NOP /* MW 12 */
	   285      "00000000" // /* MW 11 */
	   286      "11000000" // /* MW 10 */
	   287      "11111111" // /* MW 9 */
	   288      "00000100" // /* MW 8 */
	   289      "01101100" // /* MW 7 */
	   290      "00011000" // /* MW 6 */
	   291      "00101000" // /* MW 5 */
	   292      "11000110" // /* MW 4 */
	   293      "00011101" // /* MW 3 */
	   294      "10010000" // /* MW 2 */
	   295      "00001000" // /* MW 1 */
.src_ref 2 "window_internal.h" 71 21
.src_ref 2 "window_internal.h" 72 19
.src_ref 2 "window_internal.h" 78 20
.src_ref 2 "window_internal.h" 78 20
.src_ref 3 "24_0.cc" 33 17
	   296      "00111111" // 	MOV.s10 m0, #0;     MOV.s9 r1, #0;                                    MOV.s12 m3, #-84;             MOV.u20 cl0, #221184;         NOP /* MW 12 */
	   297      "00000000" // /* MW 11 */
	   298      "00100000" // /* MW 10 */
	   299      "11010010" // /* MW 9 */
	   300      "00000100" // /* MW 8 */
	   301      "01000110" // /* MW 7 */
	   302      "11010110" // /* MW 6 */
	   303      "00001111" // /* MW 5 */
	   304      "11000000" // /* MW 4 */
	   305      "00010001" // /* MW 3 */
	   306      "00000000" // /* MW 2 */
	   307      "00110000" // /* MW 1 */
.src_ref 2 "window_internal.h" 57 13 first
.src_ref 2 "window_internal.h" 57 24 first
.src_ref 3 "24_0.cc" 56 4
.src_ref 3 "24_0.cc" 63 4
.src_ref 3 "24_0.cc" 70 14
	   308      "00111111" // 	NOP;                MOV.s9 r3, #1;                                    MOV.s12 m2, #-136;            ST.SPIL r12, [sp, #-56];      NOP /* MW 12 */
	   309      "10000100" // /* MW 11 */
	   310      "11111100" // /* MW 10 */
	   311      "11001111" // /* MW 9 */
	   312      "00001111" // /* MW 8 */
	   313      "01000100" // /* MW 7 */
	   314      "10111100" // /* MW 6 */
	   315      "00101111" // /* MW 5 */
	   316      "11000000" // /* MW 4 */
	   317      "00010011" // /* MW 3 */
	   318      "00000000" // /* MW 2 */
	   319      "00000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 57 13
.src_ref 2 "window_internal.h" 57 24
	   320      "11110111" // 	                                        NOP;                                                        ST.SPIL r15, [sp, #-108];     NOP /* MW 8 */
	   321      "01000111" // /* MW 7 */
	   322      "10010100" // /* MW 6 */
	   323      "11111111" // /* MW 5 */
	   324      "11111111" // /* MW 4 */
	   325      "00000000" // /* MW 3 */
	   326      "00000000" // /* MW 2 */
	   327      "10000000" // /* MW 1 */
	   328      "11101001" // 	MOV r14, sp /* MW 2 */
	   329      "00000101" // /* MW 1 */
.src_ref 2 "window_internal.h" 58 22 first
	   330      "11110111" // 	                                        NOP;                                                        ST.SPIL r12, [sp, #-68];      NOP /* MW 8 */
	   331      "01000111" // /* MW 7 */
	   332      "10111100" // /* MW 6 */
	   333      "11111111" // /* MW 5 */
	   334      "11111100" // /* MW 4 */
	   335      "00000000" // /* MW 3 */
	   336      "00000000" // /* MW 2 */
	   337      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 58 22
	   338      "11110111" // 	                                        NOP;                                                        ST.SPIL r15, [sp, #-120];     NOP /* MW 8 */
	   339      "01000111" // /* MW 7 */
	   340      "10001000" // /* MW 6 */
	   341      "11111111" // /* MW 5 */
	   342      "11111111" // /* MW 4 */
	   343      "00000000" // /* MW 3 */
	   344      "00000000" // /* MW 2 */
	   345      "10000000" // /* MW 1 */
	   346      "11110111" // 	                                        ST p6, [sp, #-4];             NOP;                          MOV p0, r14 /* MW 8 */
	   347      "01010000" // /* MW 7 */
	   348      "00111111" // /* MW 6 */
	   349      "00000000" // /* MW 5 */
	   350      "00000000" // /* MW 4 */
	   351      "11110000" // /* MW 3 */
	   352      "10111111" // /* MW 2 */
	   353      "01011011" // /* MW 1 */
.src_ref 2 "window_internal.h" 62 21 first
.noswbrkpt
	   354      "00111111" // 	PADDA [p0], m3;     NOP;                NOP;                                                        ST.SPIL r7, [sp, #-40];       NOP /* MW 12 */
	   355      "10000100" // /* MW 11 */
	   356      "11111101" // /* MW 10 */
	   357      "01111111" // /* MW 9 */
	   358      "00001111" // /* MW 8 */
	   359      "00000000" // /* MW 7 */
	   360      "00000000" // /* MW 6 */
	   361      "00010000" // /* MW 5 */
	   362      "00000000" // /* MW 4 */
	   363      "00000000" // /* MW 3 */
	   364      "10000110" // /* MW 2 */
	   365      "00001000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	   366      "11100101" // 	MOV p6, p0 /* MW 2 */
	   367      "10100010" // /* MW 1 */
.src_ref 2 "window_internal.h" 62 21
	   368      "00111111" // 	PADDA [p6], m2;     NOP;                NOP;                                                        ST.SPIL r6, [sp, #-92];       NOP /* MW 12 */
	   369      "01000100" // /* MW 11 */
	   370      "11111010" // /* MW 10 */
	   371      "01101111" // /* MW 9 */
	   372      "00001111" // /* MW 8 */
	   373      "00000000" // /* MW 7 */
	   374      "00000000" // /* MW 6 */
	   375      "00010000" // /* MW 5 */
	   376      "00000000" // /* MW 4 */
	   377      "10000000" // /* MW 3 */
	   378      "10000101" // /* MW 2 */
	   379      "00001000" // /* MW 1 */
.src_ref 2 "window_internal.h" 62 21
	   380      "11110111" // 	                                        NOP;                                                        ST.SPIL r13, [sp, #-88];      NOP /* MW 8 */
	   381      "01000111" // /* MW 7 */
	   382      "10101000" // /* MW 6 */
	   383      "11111111" // /* MW 5 */
	   384      "11111101" // /* MW 4 */
	   385      "00000000" // /* MW 3 */
	   386      "00000000" // /* MW 2 */
	   387      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 62 21
	   388      "11110111" // 	                                        NOP;                                                        ST.SPIL m1, [sp, #-36];       NOP /* MW 8 */
	   389      "01000111" // /* MW 7 */
	   390      "11011100" // /* MW 6 */
	   391      "11111111" // /* MW 5 */
	   392      "11100001" // /* MW 4 */
	   393      "00000000" // /* MW 3 */
	   394      "00000000" // /* MW 2 */
	   395      "10000000" // /* MW 1 */
.src_ref 2 "window.h" 1130 16
.src_ref 2 "window_internal.h" 71 21
.src_ref 2 "window_internal.h" 72 19
.src_ref 3 "24_0.cc" 64 20
	   396      "11110111" // 	                                        NOP;                                                        MOV.u20 r5, #229376;          NOP /* MW 8 */
	   397      "00000111" // /* MW 7 */
	   398      "00000000" // /* MW 6 */
	   399      "11010100" // /* MW 5 */
	   400      "01001110" // /* MW 4 */
	   401      "00000000" // /* MW 3 */
	   402      "00000000" // /* MW 2 */
	   403      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 71 21 first
	   404      "11110111" // 	                                        NOP;                                                        ST.SPIL cl0, [sp, #-52];      NOP /* MW 8 */
	   405      "01000111" // /* MW 7 */
	   406      "11001100" // /* MW 6 */
	   407      "11111111" // /* MW 5 */
	   408      "11011000" // /* MW 4 */
	   409      "00000000" // /* MW 3 */
	   410      "00000000" // /* MW 2 */
	   411      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 71 21
	   412      "11110111" // 	                                        NOP;                                                        ST.SPIL r5, [sp, #-104];      NOP /* MW 8 */
	   413      "01000111" // /* MW 7 */
	   414      "10011000" // /* MW 6 */
	   415      "11111111" // /* MW 5 */
	   416      "11110101" // /* MW 4 */
	   417      "00000000" // /* MW 3 */
	   418      "00000000" // /* MW 2 */
	   419      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 72 19 first
	   420      "11110111" // 	                                        NOP;                                                        ST.SPIL cl0, [sp, #-64];      NOP /* MW 8 */
	   421      "01000111" // /* MW 7 */
	   422      "11000000" // /* MW 6 */
	   423      "11111111" // /* MW 5 */
	   424      "11011000" // /* MW 4 */
	   425      "00000000" // /* MW 3 */
	   426      "00000000" // /* MW 2 */
	   427      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 72 19
	   428      "11110111" // 	                                        NOP;                                                        ST.SPIL r5, [sp, #-116];      NOP /* MW 8 */
	   429      "01000111" // /* MW 7 */
	   430      "10001100" // /* MW 6 */
	   431      "11111111" // /* MW 5 */
	   432      "11110101" // /* MW 4 */
	   433      "00000000" // /* MW 3 */
	   434      "00000000" // /* MW 2 */
	   435      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 78 20 first
.src_ref 2 "window_internal.h" 82 20
	   436      "11110111" // 	                                        ST m0, [p0];                                                MOV.u20 ch0, #6144;           NOP /* MW 8 */
	   437      "00000111" // /* MW 7 */
	   438      "10000000" // /* MW 6 */
	   439      "00000001" // /* MW 5 */
	   440      "01000000" // /* MW 4 */
	   441      "00000000" // /* MW 3 */
	   442      "00011010" // /* MW 2 */
	   443      "10101100" // /* MW 1 */
.src_ref 2 "window_internal.h" 78 20
.src_ref 2 "window_internal.h" 82 20
	   444      "11110111" // 	                                        ST r1, [p6];                                                MOV.u20 cl0, #2048;           NOP /* MW 8 */
	   445      "00000111" // /* MW 7 */
	   446      "10000000" // /* MW 6 */
	   447      "00100000" // /* MW 5 */
	   448      "01000000" // /* MW 4 */
	   449      "00110000" // /* MW 3 */
	   450      "00111010" // /* MW 2 */
	   451      "10101110" // /* MW 1 */
.src_ref 2 "window_internal.h" 79 20 first
	   452      "11110111" // 	                                        NOP;                                                        ST.SPIL r12, [sp, #-60];      NOP /* MW 8 */
	   453      "01000111" // /* MW 7 */
	   454      "11000100" // /* MW 6 */
	   455      "11111111" // /* MW 5 */
	   456      "11111100" // /* MW 4 */
	   457      "00000000" // /* MW 3 */
	   458      "00000000" // /* MW 2 */
	   459      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 79 20
	   460      "11110111" // 	                                        NOP;                                                        ST.SPIL r15, [sp, #-112];     NOP /* MW 8 */
	   461      "01000111" // /* MW 7 */
	   462      "10010000" // /* MW 6 */
	   463      "11111111" // /* MW 5 */
	   464      "11111111" // /* MW 4 */
	   465      "00000000" // /* MW 3 */
	   466      "00000000" // /* MW 2 */
	   467      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 80 20 first
	   468      "11110111" // 	                                        NOP;                                                        ST.SPIL r12, [sp, #-72];      NOP /* MW 8 */
	   469      "01000111" // /* MW 7 */
	   470      "10111000" // /* MW 6 */
	   471      "11111111" // /* MW 5 */
	   472      "11111100" // /* MW 4 */
	   473      "00000000" // /* MW 3 */
	   474      "00000000" // /* MW 2 */
	   475      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 80 20
	   476      "11110111" // 	                                        NOP;                                                        ST.SPIL r15, [sp, #-124];     NOP /* MW 8 */
	   477      "01000111" // /* MW 7 */
	   478      "10000100" // /* MW 6 */
	   479      "11111111" // /* MW 5 */
	   480      "11111111" // /* MW 4 */
	   481      "00000000" // /* MW 3 */
	   482      "00000000" // /* MW 2 */
	   483      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 82 20 first
	   484      "11110111" // 	                                        NOP;                                                        ST.SPIL ch0, [sp, #-48];      NOP /* MW 8 */
	   485      "01000111" // /* MW 7 */
	   486      "11010000" // /* MW 6 */
	   487      "11111111" // /* MW 5 */
	   488      "11010000" // /* MW 4 */
	   489      "00000000" // /* MW 3 */
	   490      "00000000" // /* MW 2 */
	   491      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 82 20
	   492      "11110111" // 	                                        NOP;                                                        ST.SPIL cl0, [sp, #-100];     NOP /* MW 8 */
	   493      "01000111" // /* MW 7 */
	   494      "10011100" // /* MW 6 */
	   495      "11111111" // /* MW 5 */
	   496      "11011000" // /* MW 4 */
	   497      "00000000" // /* MW 3 */
	   498      "00000000" // /* MW 2 */
	   499      "10000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 33 17
	   500      "11110111" // 	                                        NOP;                                                        MOV.u20 p4, #196608;          NOP /* MW 8 */
	   501      "00000111" // /* MW 7 */
	   502      "00000000" // /* MW 6 */
	   503      "10110000" // /* MW 5 */
	   504      "01001100" // /* MW 4 */
	   505      "00000000" // /* MW 3 */
	   506      "00000000" // /* MW 2 */
	   507      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 82 20
	   508      "11110111" // 	                                        NOP;                                                        ST.SPIL ch0, [sp, #-44];      NOP /* MW 8 */
	   509      "01000111" // /* MW 7 */
	   510      "11010100" // /* MW 6 */
	   511      "11111111" // /* MW 5 */
	   512      "11010000" // /* MW 4 */
	   513      "00000000" // /* MW 3 */
	   514      "00000000" // /* MW 2 */
	   515      "10000000" // /* MW 1 */
.src_ref 2 "window_internal.h" 82 20
	   516      "11110111" // 	                                        NOP;                                                        ST.SPIL cl0, [sp, #-96];      NOP /* MW 8 */
	   517      "01000111" // /* MW 7 */
	   518      "10100000" // /* MW 6 */
	   519      "11111111" // /* MW 5 */
	   520      "11011000" // /* MW 4 */
	   521      "00000000" // /* MW 3 */
	   522      "00000000" // /* MW 2 */
	   523      "10000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 33 17 first
.src_ref 3 "24_0.cc" 81
	   524      "11110111" // 	                                        ST m0, [p4], #4;              NOP;                          MOV r13, lr /* MW 8 */
	   525      "10111010" // /* MW 7 */
	   526      "00000010" // /* MW 6 */
	   527      "00000001" // /* MW 5 */
	   528      "00000000" // /* MW 4 */
	   529      "11000000" // /* MW 3 */
	   530      "00101000" // /* MW 2 */
	   531      "01011000" // /* MW 1 */
.src_ref 2 "window.h" 1130 16
.src_ref 2 "window.h" 1130 16
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 67 20
.src_ref 3 "24_0.cc" 70 14
	   532      "01110111" // 	NOP;                                                                  MOV.s12 r10, #1;              MOV cl3, r10 /* MW 8 */
	   533      "11110100" // /* MW 7 */
	   534      "00000000" // /* MW 6 */
	   535      "11001000" // /* MW 5 */
	   536      "10100010" // /* MW 4 */
	   537      "00000111" // /* MW 3 */
	   538      "00000000" // /* MW 2 */
	   539      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 57 4
.src_ref 3 "24_0.cc" 62 4
.src_ref 3 "24_0.cc" 74 24
.src_ref 3 "24_0.cc" 78 21
	   540      "01110111" // 	NOP;                                                                  MOV.s12 r4, #0;               MOV ch4, r4 /* MW 8 */
	   541      "01101000" // /* MW 7 */
	   542      "00000000" // /* MW 6 */
	   543      "00001000" // /* MW 5 */
	   544      "01000001" // /* MW 4 */
	   545      "00000111" // /* MW 3 */
	   546      "00000000" // /* MW 2 */
	   547      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 161 first
	   548      "11110111" // 	                                        NOP;                                                        ST.SPIL r12, [sp, #-76];      NOP /* MW 8 */
	   549      "01000111" // /* MW 7 */
	   550      "10110100" // /* MW 6 */
	   551      "11111111" // /* MW 5 */
	   552      "11111100" // /* MW 4 */
	   553      "00000000" // /* MW 3 */
	   554      "00000000" // /* MW 2 */
	   555      "10000000" // /* MW 1 */
.src_ref 2 "window.h" 171 first
	   556      "11110111" // 	                                        NOP;                                                        ST.SPIL r15, [sp, #-128];     NOP /* MW 8 */
	   557      "01000111" // /* MW 7 */
	   558      "10000000" // /* MW 6 */
	   559      "11111111" // /* MW 5 */
	   560      "11111111" // /* MW 4 */
	   561      "00000000" // /* MW 3 */
	   562      "00000000" // /* MW 2 */
	   563      "10000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 58 4
	   564      "01010101" // 	MOV ch5, p0 /* MW 2 */
	   565      "10100000" // /* MW 1 */
	   566      "00110101" // 	MOV ch3, r11 /* MW 2 */
	   567      "11101100" // /* MW 1 */
	   568      "00000011" // 	NOP;                                                                                                MOV cl4, p7 /* MW 4 */
	   569      "00011000" // /* MW 3 */
	   570      "11100110" // /* MW 2 */
	   571      "00001101" // /* MW 1 */
.src_ref 3 "24_0.cc" 81
	   572      "00000011" // 	NOP;                                                                                                MOV cb2, r13 /* MW 4 */
	   573      "00011000" // /* MW 3 */
	   574      "10101001" // /* MW 2 */
	   575      "00001111" // /* MW 1 */
.label TGT_F_main_304
.src_ref 3 "24_0.cc" 50 27 first
.loop_nesting 1
	   576      "00110111" // 	LDA r11, [p4], #-4;                     NOP;                          NOP /* MW 8 */
	   577      "00000000" // /* MW 7 */
	   578      "00000000" // /* MW 6 */
	   579      "00000000" // /* MW 5 */
	   580      "00000000" // /* MW 4 */
	   581      "00000000" // /* MW 3 */
	   582      "10111111" // /* MW 2 */
	   583      "01111011" // /* MW 1 */
	   584      "00000001" // 	NOP /* MW 2 */
	   585      "00000000" // /* MW 1 */
	   586      "00000001" // 	NOP /* MW 2 */
	   587      "00000000" // /* MW 1 */
	   588      "00000001" // 	NOP /* MW 2 */
	   589      "00000000" // /* MW 1 */
	   590      "00000001" // 	NOP /* MW 2 */
	   591      "00000000" // /* MW 1 */
	   592      "00000001" // 	NOP /* MW 2 */
	   593      "00000000" // /* MW 1 */
	   594      "00000001" // 	NOP /* MW 2 */
	   595      "00000000" // /* MW 1 */
	   596      "00000001" // 	NOP /* MW 2 */
	   597      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 52 2 first
.src_ref 3 "24_0.cc" 52 9 first
	   598      "11110111" // 	                                        NOP;                                                        BEQZ r11,#784;                NOP /* MW 8 */
	   599      "00000111" // /* MW 7 */
	   600      "00110001" // /* MW 6 */
	   601      "01100000" // /* MW 5 */
	   602      "10000001" // /* MW 4 */
	   603      "00000000" // /* MW 3 */
	   604      "00000000" // /* MW 2 */
	   605      "10000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 58 4
.delay_slot
	   606      "11110101" // 	MOV p7, ch5 /* MW 2 */
	   607      "00010110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   608      "00000001" // 	NOP /* MW 2 */
	   609      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   610      "00000001" // 	NOP /* MW 2 */
	   611      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   612      "00000001" // 	NOP /* MW 2 */
	   613      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   614      "00000001" // 	NOP /* MW 2 */
	   615      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 58 4
	   616      "01110111" // 	NOP;                                                                  NOP;                          MOV p5, p6 /* MW 8 */
	   617      "00000000" // /* MW 7 */
	   618      "00000000" // /* MW 6 */
	   619      "01000000" // /* MW 5 */
	   620      "11101011" // /* MW 4 */
	   621      "00000110" // /* MW 3 */
	   622      "00000000" // /* MW 2 */
	   623      "00000000" // /* MW 1 */
.label TGT_F_main_352
.src_ref 3 "24_0.cc" 56 4 first
.loop_nesting 2
	   624      "00000011" // 	NOP;                                                                  ACQ r7, #1, r3 /* MW 4 */
	   625      "00110000" // /* MW 3 */
	   626      "00110111" // /* MW 2 */
	   627      "00010100" // /* MW 1 */
	   628      "00000001" // 	NOP /* MW 2 */
	   629      "00000000" // /* MW 1 */
	   630      "00000001" // 	NOP /* MW 2 */
	   631      "00000000" // /* MW 1 */
	   632      "00000001" // 	NOP /* MW 2 */
	   633      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 57 4 first
	   634      "00000011" // 	NOP;                                                                  ACQ r6, #1, r4 /* MW 4 */
	   635      "00110000" // /* MW 3 */
	   636      "01000110" // /* MW 2 */
	   637      "00010100" // /* MW 1 */
.src_ref 3 "24_0.cc" 58 4 first
.no_stack_arguments
	   638      "11110111" // 	                                        NOP;                                                        JAL #912;                     NOP /* MW 8 */
	   639      "00000111" // /* MW 7 */
	   640      "00111001" // /* MW 6 */
	   641      "00100000" // /* MW 5 */
	   642      "10100000" // /* MW 4 */
	   643      "00000000" // /* MW 3 */
	   644      "00000000" // /* MW 2 */
	   645      "10000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 58 4
.delay_slot
	   646      "10000101" // 	MOV p0, p7 /* MW 2 */
	   647      "10111110" // /* MW 1 */
.src_ref 3 "24_0.cc" 58 4
.delay_slot
	   648      "10010101" // 	MOV p1, p5 /* MW 2 */
	   649      "10110110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   650      "00000001" // 	NOP /* MW 2 */
	   651      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   652      "00000001" // 	NOP /* MW 2 */
	   653      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   654      "00000001" // 	NOP /* MW 2 */
	   655      "00000000" // /* MW 1 */
.return_address
	   656      "00000001" // 	NOP /* MW 2 */
	   657      "00000000" // /* MW 1 */
	   658      "00000001" // 	NOP /* MW 2 */
	   659      "00000000" // /* MW 1 */
	   660      "00000001" // 	NOP /* MW 2 */
	   661      "00000000" // /* MW 1 */
	   662      "00000001" // 	NOP /* MW 2 */
	   663      "00000000" // /* MW 1 */
	   664      "00000001" // 	NOP /* MW 2 */
	   665      "00000000" // /* MW 1 */
	   666      "00000001" // 	NOP /* MW 2 */
	   667      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 62 4 first
	   668      "00000011" // 	NOP;                                                                  REL r7, #1, r4 /* MW 4 */
	   669      "00110000" // /* MW 3 */
	   670      "01000111" // /* MW 2 */
	   671      "00010110" // /* MW 1 */
	   672      "00000001" // 	NOP /* MW 2 */
	   673      "00000000" // /* MW 1 */
	   674      "00000001" // 	NOP /* MW 2 */
	   675      "00000000" // /* MW 1 */
	   676      "00000001" // 	NOP /* MW 2 */
	   677      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 63 4 first
	   678      "00000011" // 	NOP;                                                                  REL r6, #1, r3 /* MW 4 */
	   679      "00110000" // /* MW 3 */
	   680      "00110110" // /* MW 2 */
	   681      "00010110" // /* MW 1 */
.src_ref 2 "window.h" 1130 16
.src_ref 2 "window.h" 1130 16
.src_ref 2 "window_internal.h" 79 13
.src_ref 2 "window_internal.h" 79 13
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 67 20
.src_ref 3 "24_0.cc" 67 20
.src_ref 3 "24_0.cc" 67 20
	   682      "00011111" // 	PADDA [p7], #24;    MOV.s9 r14, #49;    PADDS [p5], #24;              MOV.s12 r12, #48;             MOV r0, r10 /* MW 12 */
	   683      "10101100" // /* MW 11 */
	   684      "00000111" // /* MW 10 */
	   685      "00001111" // /* MW 9 */
	   686      "00000011" // /* MW 8 */
	   687      "01101011" // /* MW 7 */
	   688      "00000101" // /* MW 6 */
	   689      "00101000" // /* MW 5 */
	   690      "11000110" // /* MW 4 */
	   691      "11011110" // /* MW 3 */
	   692      "10101101" // /* MW 2 */
	   693      "00001000" // /* MW 1 */
.src_ref 2 "window.h" 1130 16
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 64 20 first
.src_ref 3 "24_0.cc" 67 20 first
	   694      "11110111" // 	                                                                      ITE_EQZ r6, r12, r14, r0;     MOV.u20 r8, #212992;          NOP /* MW 8 */
	   695      "00000111" // /* MW 7 */
	   696      "00000000" // /* MW 6 */
	   697      "11100000" // /* MW 5 */
	   698      "01001101" // /* MW 4 */
	   699      "01100000" // /* MW 3 */
	   700      "11101100" // /* MW 2 */
	   701      "00011110" // /* MW 1 */
.src_ref 2 "window.h" 1130 16
.src_ref 2 "window.h" 1130 16 first
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 64 20
	   702      "11110111" // 	                                                                      ITE_NEZ r13, r5, r15, r0;     MOV.u20 r12, #221184;         NOP /* MW 8 */
	   703      "00000111" // /* MW 7 */
	   704      "00000000" // /* MW 6 */
	   705      "11110010" // /* MW 5 */
	   706      "01001101" // /* MW 4 */
	   707      "11010000" // /* MW 3 */
	   708      "11110101" // /* MW 2 */
	   709      "00011111" // /* MW 1 */
.src_ref 2 "window.h" 1130 14
.src_ref 2 "window.h" 1130 16
.src_ref 3 "24_0.cc" 64 20 first
	   710      "10110111" // 	NOP;                                    ST r13, [p5], #-12;           ITE_EQZ r12, r8, r12, r0 /* MW 8 */
	   711      "01110110" // /* MW 7 */
	   712      "11111011" // /* MW 6 */
	   713      "01100010" // /* MW 5 */
	   714      "01100100" // /* MW 4 */
	   715      "00001111" // /* MW 3 */
	   716      "00000000" // /* MW 2 */
	   717      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1130 14 first
.src_ref 3 "24_0.cc" 74 24 first
	   718      "10110111" // 	NOP;                                    ST r12, [p7], #-12;           LT r8, r4, r11 /* MW 8 */
	   719      "01110111" // /* MW 7 */
	   720      "11111001" // /* MW 6 */
	   721      "01000010" // /* MW 5 */
	   722      "11011010" // /* MW 4 */
	   723      "00011101" // /* MW 3 */
	   724      "00000000" // /* MW 2 */
	   725      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1131 12 first
.src_ref 3 "24_0.cc" 74 7
	   726      "10110111" // 	NOP;                                    ST r13, [p5], #-4;            SUB r11, r11, r8 /* MW 8 */
	   727      "01111110" // /* MW 7 */
	   728      "11111011" // /* MW 6 */
	   729      "11011010" // /* MW 5 */
	   730      "11000101" // /* MW 4 */
	   731      "00011000" // /* MW 3 */
	   732      "00000000" // /* MW 2 */
	   733      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1131 12
	   734      "00000011" // 	NOP;                                    ST r12, [p7], #-4 /* MW 4 */
	   735      "11111000" // /* MW 3 */
	   736      "10010111" // /* MW 2 */
	   737      "10101111" // /* MW 1 */
.src_ref 3 "24_0.cc" 52 2 first
.src_ref 3 "24_0.cc" 52 9 first
.src_ref 3 "24_0.cc" 69 30 first
	   738      "11110111" // 	                                        ST r13, [p5], #-8;                                          BNEZ r11,#624;                NOP /* MW 8 */
	   739      "00000111" // /* MW 7 */
	   740      "00100111" // /* MW 6 */
	   741      "01100000" // /* MW 5 */
	   742      "10010001" // /* MW 4 */
	   743      "10101000" // /* MW 3 */
	   744      "10110111" // /* MW 2 */
	   745      "10101111" // /* MW 1 */
.src_ref 3 "24_0.cc" 66 29 first
.delay_slot
	   746      "00000011" // 	NOP;                                    ST r12, [p7], #-8 /* MW 4 */
	   747      "10111000" // /* MW 3 */
	   748      "10010111" // /* MW 2 */
	   749      "10101111" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   750      "00000001" // 	NOP /* MW 2 */
	   751      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   752      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   753      "00000000" // /* MW 3 */
	   754      "00000000" // /* MW 2 */
	   755      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 64 20
.src_ref 3 "24_0.cc" 70 14 first
.delay_slot
	   756      "01011111" // 	NOP;                MOV.s9 r14, #33;    NOP;                          SUB r10, r3, r10;             MOV.s8 r9, #32 /* MW 12 */
	   757      "00001110" // /* MW 11 */
	   758      "10110010" // /* MW 10 */
	   759      "10001110" // /* MW 9 */
	   760      "11000110" // /* MW 8 */
	   761      "00000000" // /* MW 7 */
	   762      "00000000" // /* MW 6 */
	   763      "00100000" // /* MW 5 */
	   764      "11000100" // /* MW 4 */
	   765      "00011110" // /* MW 3 */
	   766      "00000000" // /* MW 2 */
	   767      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 64 20 first
.delay_slot
	   768      "00000010" // 	NOP;                NOP;                NOP;                          ITE_NEZ r7, r14, r9, r0;      NOP;                          NOP;                                    NOP /* MW 16 */
	   769      "00000000" // /* MW 15 */
	   770      "00000000" // /* MW 14 */
	   771      "00111000" // /* MW 13 */
	   772      "11001111" // /* MW 12 */
	   773      "00001111" // /* MW 11 */
	   774      "00000000" // /* MW 10 */
	   775      "00000000" // /* MW 9 */
	   776      "00000000" // /* MW 8 */
	   777      "00000000" // /* MW 7 */
	   778      "00000000" // /* MW 6 */
	   779      "00000000" // /* MW 5 */
	   780      "00000000" // /* MW 4 */
	   781      "00000000" // /* MW 3 */
	   782      "00000000" // /* MW 2 */
	   783      "00000000" // /* MW 1 */
.label TGT_F_main_512
.swstall chess_separator_scheduler
.loop_nesting 1
	   784      "00000001" // 	NOP /* MW 2 */
	   785      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   786      "00000001" // 	NOP /* MW 2 */
	   787      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   788      "00000001" // 	NOP /* MW 2 */
	   789      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   790      "00000001" // 	NOP /* MW 2 */
	   791      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   792      "00000001" // 	NOP /* MW 2 */
	   793      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   794      "00000001" // 	NOP /* MW 2 */
	   795      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   796      "00000001" // 	NOP /* MW 2 */
	   797      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   798      "00000001" // 	NOP /* MW 2 */
	   799      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 77 2 first
	   800      "00000011" // 	NOP;                                                                  EVENT #2 /* MW 4 */
	   801      "00100000" // /* MW 3 */
	   802      "00000000" // /* MW 2 */
	   803      "00000100" // /* MW 1 */
.swstall chess_separator_scheduler
	   804      "00000001" // 	NOP /* MW 2 */
	   805      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   806      "00000001" // 	NOP /* MW 2 */
	   807      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   808      "00000001" // 	NOP /* MW 2 */
	   809      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   810      "00000001" // 	NOP /* MW 2 */
	   811      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   812      "00000001" // 	NOP /* MW 2 */
	   813      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 78 6 first
	   814      "00110111" // 	LDA r12, [p4], #4;                      NOP;                          NOP /* MW 8 */
	   815      "00000000" // /* MW 7 */
	   816      "00000000" // /* MW 6 */
	   817      "00000000" // /* MW 5 */
	   818      "00000000" // /* MW 4 */
	   819      "00000000" // /* MW 3 */
	   820      "10100011" // /* MW 2 */
	   821      "01111100" // /* MW 1 */
	   822      "00000001" // 	NOP /* MW 2 */
	   823      "00000000" // /* MW 1 */
	   824      "00000001" // 	NOP /* MW 2 */
	   825      "00000000" // /* MW 1 */
	   826      "00000001" // 	NOP /* MW 2 */
	   827      "00000000" // /* MW 1 */
	   828      "00000001" // 	NOP /* MW 2 */
	   829      "00000000" // /* MW 1 */
	   830      "00000001" // 	NOP /* MW 2 */
	   831      "00000000" // /* MW 1 */
	   832      "00000001" // 	NOP /* MW 2 */
	   833      "00000000" // /* MW 1 */
	   834      "00000001" // 	NOP /* MW 2 */
	   835      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 78 21
	   836      "00000011" // 	NOP;                                                                  GE r12, r4, r12 /* MW 4 */
	   837      "11000000" // /* MW 3 */
	   838      "11000100" // /* MW 2 */
	   839      "00111010" // /* MW 1 */
	   840      "11110111" // 	                                        NOP;                                                        BNEZ r12,#576;                NOP /* MW 8 */
	   841      "00000111" // /* MW 7 */
	   842      "00100100" // /* MW 6 */
	   843      "10000000" // /* MW 5 */
	   844      "10010001" // /* MW 4 */
	   845      "00000000" // /* MW 3 */
	   846      "00000000" // /* MW 2 */
	   847      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   848      "00000001" // 	NOP /* MW 2 */
	   849      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   850      "00000001" // 	NOP /* MW 2 */
	   851      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   852      "00000001" // 	NOP /* MW 2 */
	   853      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   854      "00000001" // 	NOP /* MW 2 */
	   855      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   856      "00000001" // 	NOP /* MW 2 */
	   857      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 81
.src_ref 3 "24_0.cc" 81
.src_ref 3 "24_0.cc" 81
.loop_nesting 0
	   858      "00011111" // 	LDA p6, [sp, #-4];  MOV.s9 r0, #0;      NOP;                          MOV.s12 m0, #-160;            MOV r12, cb2 /* MW 12 */
	   859      "00101111" // /* MW 11 */
	   860      "00000101" // /* MW 10 */
	   861      "00001000" // /* MW 9 */
	   862      "11110110" // /* MW 8 */
	   863      "00000001" // /* MW 7 */
	   864      "00000000" // /* MW 6 */
	   865      "00000000" // /* MW 5 */
	   866      "11000000" // /* MW 4 */
	   867      "11010000" // /* MW 3 */
	   868      "11111111" // /* MW 2 */
	   869      "01101110" // /* MW 1 */
.src_ref 3 "24_0.cc" 81 first
	   870      "01110111" // 	PADDA [sp], m0;                                                       NOP;                          MOV r11, ch3 /* MW 8 */
	   871      "00000000" // /* MW 7 */
	   872      "00000000" // /* MW 6 */
	   873      "11000000" // /* MW 5 */
	   874      "00111110" // /* MW 4 */
	   875      "00000100" // /* MW 3 */
	   876      "10010000" // /* MW 2 */
	   877      "00001000" // /* MW 1 */
	   878      "10100101" // 	MOV r10, cl3 /* MW 2 */
	   879      "00101111" // /* MW 1 */
	   880      "01000101" // 	MOV r4, ch4 /* MW 2 */
	   881      "00010011" // /* MW 1 */
	   882      "11110101" // 	MOV p7, cl4 /* MW 2 */
	   883      "00110010" // /* MW 1 */
.src_ref 3 "24_0.cc" 81
	   884      "01100001" // 	MOV lr, r12 /* MW 2 */
	   885      "11000001" // /* MW 1 */
	   886      "00000001" // 	NOP /* MW 2 */
	   887      "00000000" // /* MW 1 */
	   888      "00000001" // 	NOP /* MW 2 */
	   889      "00000000" // /* MW 1 */
	   890      "00000001" // 	NOP /* MW 2 */
	   891      "00000000" // /* MW 1 */
.src_ref 3 "24_0.cc" 81
.end_of_main
	   892      "00000001" // 	RET lr /* MW 2 */
	   893      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   894      "00000001" // 	NOP /* MW 2 */
	   895      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   896      "00000001" // 	NOP /* MW 2 */
	   897      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   898      "00000001" // 	NOP /* MW 2 */
	   899      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   900      "00000001" // 	NOP /* MW 2 */
	   901      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   902      "00000001" // 	NOP /* MW 2 */
.label _main__end
.label _main___func_end0
	   903      "00000000" // /* MW 1 */
.label __Z10filter_macP12input_windowIaEP13output_windowIaE___func_begin0
.label _Z10filter_macP12input_windowIaEP13output_windowIaE
.function filter_mac _Z10filter_macP12input_windowIaEP13output_windowIaE
.src_ref 4 "filter_mac.cpp" 6 first
.src_ref 2 "window.h" 735 2
.src_ref 2 "window.h" 735 2
.src_ref 2 "window.h" 735 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 1043 35
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1111 23
.src_ref 5 "vector.hpp" 1430 12
.src_ref 6 "broadcast.hpp" 111 31
.function_start
	   912      "00111111" // 	MOV.s10 m0, #32;    MOV.s9 r0, #0;      PADDS [p0], #8;                                             MOV.u20 p2, #198656;          NOP /* MW 12 */
	   913      "00000000" // /* MW 11 */
	   914      "10001000" // /* MW 10 */
	   915      "11001010" // /* MW 9 */
	   916      "00000100" // /* MW 8 */
	   917      "10010000" // /* MW 7 */
	   918      "00000010" // /* MW 6 */
	   919      "00010100" // /* MW 5 */
	   920      "11000000" // /* MW 4 */
	   921      "00010000" // /* MW 3 */
	   922      "00001000" // /* MW 2 */
	   923      "00110000" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 6
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1430 12 first
.src_ref 6 "broadcast.hpp" 111 31 first
	   924      "00000000" // 	VLDA wr2, [p2];     MOV.s9 r8, #16;     NOP;                          MOV.s12 m1, #672;             MOV.u20 cl2, #0;              NOP;                                    VSHLV.32 wc0, r0;NOP /* MW 16 */
	   925      "00100000" // /* MW 15 */
	   926      "00000100" // /* MW 14 */
	   927      "00000000" // /* MW 13 */
	   928      "10000000" // /* MW 12 */
	   929      "00000000" // /* MW 11 */
	   930      "10000000" // /* MW 10 */
	   931      "00000010" // /* MW 9 */
	   932      "00000100" // /* MW 8 */
	   933      "01000010" // /* MW 7 */
	   934      "01010000" // /* MW 6 */
	   935      "00001001" // /* MW 5 */
	   936      "11000010" // /* MW 4 */
	   937      "10011000" // /* MW 3 */
	   938      "11010000" // /* MW 2 */
	   939      "00001010" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 6
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "vector.hpp" 98 117
	   940      "00111111" // 	PADDA [sp], m1;     LDB p3, [p0], #16;                                MOV.s12 r9, #7;               MOVT.s12 cl2, #1;             NOP /* MW 12 */
	   941      "00000001" // /* MW 11 */
	   942      "10000000" // /* MW 10 */
	   943      "00010010" // /* MW 9 */
	   944      "00000000" // /* MW 8 */
	   945      "11110010" // /* MW 7 */
	   946      "00000011" // /* MW 6 */
	   947      "00001000" // /* MW 5 */
	   948      "11010100" // /* MW 4 */
	   949      "00100111" // /* MW 3 */
	   950      "10010010" // /* MW 2 */
	   951      "00001000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 1430 12
	   952      "00111111" // 	LDA cb1, [p0], #12; MOV.s9 r1, #8;                                    MOV.s12 r2, #1;               MOV.u20 ch1, #834200;         NOP /* MW 12 */
	   953      "10011000" // /* MW 11 */
	   954      "01111010" // /* MW 10 */
	   955      "00100000" // /* MW 9 */
	   956      "00000111" // /* MW 8 */
	   957      "11100100" // /* MW 7 */
	   958      "00000000" // /* MW 6 */
	   959      "00001000" // /* MW 5 */
	   960      "11000001" // /* MW 4 */
	   961      "00010001" // /* MW 3 */
	   962      "10100110" // /* MW 2 */
	   963      "01000001" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 5 "accum.hpp" 1208 65 first
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1430 12
	   964      "00000000" // 	LDA cs1, [p0];      MOV.s9 r14, #2;     NOP;                          ADD.NRM s0, r2, #0;           MOVT.s12 ch1, #-19;           NOP;                                    VSHLV.32 wc1, r1;NOP /* MW 16 */
	   965      "11100000" // /* MW 15 */
	   966      "00000100" // /* MW 14 */
	   967      "00000000" // /* MW 13 */
	   968      "10000000" // /* MW 12 */
	   969      "11101101" // /* MW 11 */
	   970      "01001111" // /* MW 10 */
	   971      "00010000" // /* MW 9 */
	   972      "00000000" // /* MW 8 */
	   973      "01000000" // /* MW 7 */
	   974      "00000000" // /* MW 6 */
	   975      "01000101" // /* MW 5 */
	   976      "11000000" // /* MW 4 */
	   977      "00011110" // /* MW 3 */
	   978      "11010000" // /* MW 2 */
	   979      "01001001" // /* MW 1 */
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 1430 12
.src_ref 5 "vector.hpp" 1430 12
.src_ref 5 "vector.hpp" 1430 12 first
	   980      "00000000" // 	MOV.s10 r1, #4;     MOV.s9 r12, #3;     VST wc1, [sp, #-96];          NOP;                          MOV.u20 cl1, #274960;         NOP;                                    VSHLV.32 wc1, r2;NOP /* MW 16 */
	   981      "01100000" // /* MW 15 */
	   982      "00000101" // /* MW 14 */
	   983      "00000000" // /* MW 13 */
	   984      "10000000" // /* MW 12 */
	   985      "00010000" // /* MW 11 */
	   986      "01110010" // /* MW 10 */
	   987      "00000010" // /* MW 9 */
	   988      "00000101" // /* MW 8 */
	   989      "11111101" // /* MW 7 */
	   990      "01101011" // /* MW 6 */
	   991      "01110111" // /* MW 5 */
	   992      "11000000" // /* MW 4 */
	   993      "00011100" // /* MW 3 */
	   994      "00000001" // /* MW 2 */
	   995      "00111001" // /* MW 1 */
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 1430 12
	   996      "00111111" // 	PADDA [p1], #24;    MOV.s9 r13, #5;     VST wc1, [sp, #-192];                                       MOVT.s12 cl1, #1893;          NOP /* MW 12 */
	   997      "01100101" // /* MW 11 */
	   998      "01000111" // /* MW 10 */
	   999      "00010010" // /* MW 9 */
	  1000      "00000000" // /* MW 8 */
	  1001      "11111010" // /* MW 7 */
	  1002      "01101011" // /* MW 6 */
	  1003      "10110111" // /* MW 5 */
	  1004      "11000000" // /* MW 4 */
	  1005      "01011101" // /* MW 3 */
	  1006      "10101100" // /* MW 2 */
	  1007      "00001000" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 39 4 first
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1043 35
	  1008      "01111111" // 	MOV.s10 lc, #59;                        VST wc0, [sp, #-160];         MOV.s12 r9, #6;               MOV ch0, r0;                  VSHL1.32 wd1, r9 /* MW 12 */
	  1009      "10010100" // /* MW 11 */
	  1010      "00111110" // /* MW 10 */
	  1011      "00110111" // /* MW 9 */
	  1012      "10000000" // /* MW 8 */
	  1013      "11111011" // /* MW 7 */
	  1014      "01100011" // /* MW 6 */
	  1015      "00000111" // /* MW 5 */
	  1016      "00000000" // /* MW 4 */
	  1017      "11000111" // /* MW 3 */
	  1018      "00001110" // /* MW 2 */
	  1019      "00100100" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117
.src_ref 5 "vector.hpp" 1043 35 first
	  1020      "01111111" // 	LDA cb0, [p1], #12;                     VST wd1, [sp, #-64];          MOV.s12 r9, #0;               VMOV vdl0, vrh2;              VSHL1.32 wr3, r9 /* MW 12 */
	  1021      "10010100" // /* MW 11 */
	  1022      "00101110" // /* MW 10 */
	  1023      "00000111" // /* MW 9 */
	  1024      "10000000" // /* MW 8 */
	  1025      "11111110" // /* MW 7 */
	  1026      "01111011" // /* MW 6 */
	  1027      "00000111" // /* MW 5 */
	  1028      "01010111" // /* MW 4 */
	  1029      "01100110" // /* MW 3 */
	  1030      "10100110" // /* MW 2 */
	  1031      "01000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1043 35
	  1032      "11110111" // 	                                        VST vdl0, [sp, #-16];         ADD.ILV.64 s1, r2, #0;        MOV ch2, ch0 /* MW 8 */
	  1033      "00000100" // /* MW 7 */
	  1034      "00100000" // /* MW 6 */
	  1035      "01000010" // /* MW 5 */
	  1036      "00000010" // /* MW 4 */
	  1037      "11110101" // /* MW 3 */
	  1038      "00111111" // /* MW 2 */
	  1039      "01101011" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1043 35
.noswbrkpt
	  1040      "01110111" // 	LDA cs0, [p1], #-28;                                                  NOP;                          MOV cl0, ch2 /* MW 8 */
	  1041      "00000000" // /* MW 7 */
	  1042      "00000000" // /* MW 6 */
	  1043      "00000000" // /* MW 5 */
	  1044      "00100010" // /* MW 4 */
	  1045      "01000100" // /* MW 3 */
	  1046      "10110010" // /* MW 2 */
	  1047      "01001000" // /* MW 1 */
.src_ref 2 "window.h" 735 2
.nohwbrkpt
.noswbrkpt
	  1048      "01110111" // 	LDA p1, [p1];                                                         NOP;                          MOV p2, p1 /* MW 8 */
	  1049      "00000000" // /* MW 7 */
	  1050      "00000000" // /* MW 6 */
	  1051      "10000000" // /* MW 5 */
	  1052      "10011010" // /* MW 4 */
	  1053      "01000110" // /* MW 3 */
	  1054      "11010000" // /* MW 2 */
	  1055      "01101001" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 39 4 first
	  1056      "11110111" // 	                                        NOP;                                                        MOV.u20 le, #2288;            NOP /* MW 8 */
	  1057      "00000111" // /* MW 7 */
	  1058      "10001111" // /* MW 6 */
	  1059      "01101100" // /* MW 5 */
	  1060      "01000000" // /* MW 4 */
	  1061      "00000000" // /* MW 3 */
	  1062      "00000000" // /* MW 2 */
	  1063      "10000000" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 39 4
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "vector.hpp" 1111 23 first
	  1064      "00111111" // 	VLDA.UNPACK.s8 xa, [p3], m0, cyc1;NOP;  NOP;                                                        MOV.u20 ls, #1824;            NOP /* MW 12 */
	  1065      "00100000" // /* MW 11 */
	  1066      "00000111" // /* MW 10 */
	  1067      "00000110" // /* MW 9 */
	  1068      "00000100" // /* MW 8 */
	  1069      "00000000" // /* MW 7 */
	  1070      "00000000" // /* MW 6 */
	  1071      "00010000" // /* MW 5 */
	  1072      "00000000" // /* MW 4 */
	  1073      "11000000" // /* MW 3 */
	  1074      "00010000" // /* MW 2 */
	  1075      "00000101" // /* MW 1 */
	  1076      "00000001" // 	NOP /* MW 2 */
	  1077      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "vector.hpp" 1111 23
.noswbrkpt
	  1078      "00000011" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1 /* MW 4 */
	  1079      "11111000" // /* MW 3 */
	  1080      "00010000" // /* MW 2 */
	  1081      "00011101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1082      "00000001" // 	NOP /* MW 2 */
	  1083      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  1084      "00110111" // 	VLDA.UNPACK.s8 xb, [p3], m0, cyc1;      NOP;                          NOP /* MW 8 */
	  1085      "00000000" // /* MW 7 */
	  1086      "00000000" // /* MW 6 */
	  1087      "00000000" // /* MW 5 */
	  1088      "00000000" // /* MW 4 */
	  1089      "11000000" // /* MW 3 */
	  1090      "00010000" // /* MW 2 */
	  1091      "00001101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1092      "00000001" // 	NOP /* MW 2 */
	  1093      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1094      "00000001" // 	NOP /* MW 2 */
	  1095      "00000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65 first
.src_ref 5 "accum.hpp" 1208 65 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "vector.hpp" 1043 35
.nohwbrkpt
.noswbrkpt
	  1096      "10101111" // 	NOP;                                    VST wr1, [sp, #-224];                                       VMOV wr1, wr2;                NOP;                                    VMAC.48.UPSB bm1, vdl0, s0, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 12 */
	  1097      "10000100" // /* MW 11 */
	  1098      "00000000" // /* MW 10 */
	  1099      "00000001" // /* MW 9 */
	  1100      "00000010" // /* MW 8 */
	  1101      "00111110" // /* MW 7 */
	  1102      "00000000" // /* MW 6 */
	  1103      "00110001" // /* MW 5 */
	  1104      "00010101" // /* MW 4 */
	  1105      "10011001" // /* MW 3 */
	  1106      "10111111" // /* MW 2 */
	  1107      "01110100" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1108      "11110111" // 	                                        VST wr0, [sp, #-128];         NOP;                          VMOV wr0, wr3 /* MW 8 */
	  1109      "10100010" // /* MW 7 */
	  1110      "00100011" // /* MW 6 */
	  1111      "00000001" // /* MW 5 */
	  1112      "00000000" // /* MW 4 */
	  1113      "11000000" // /* MW 3 */
	  1114      "00111111" // /* MW 2 */
	  1115      "01110100" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  1116      "10110100" // 	VLDA.UNPACK.s8 xa, [p3], m0, cyc1;NOP;  NOP;                          NOP;                          VST.SPIL wd1, [sp, #-352];    NOP;                                    VMAC.48 bm1, yd.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1117      "00010000" // /* MW 15 */
	  1118      "00100000" // /* MW 14 */
	  1119      "01000000" // /* MW 13 */
	  1120      "11011000" // /* MW 12 */
	  1121      "00000000" // /* MW 11 */
	  1122      "11101010" // /* MW 10 */
	  1123      "11101111" // /* MW 9 */
	  1124      "00001110" // /* MW 8 */
	  1125      "00000000" // /* MW 7 */
	  1126      "00000000" // /* MW 6 */
	  1127      "00010000" // /* MW 5 */
	  1128      "00000000" // /* MW 4 */
	  1129      "11000000" // /* MW 3 */
	  1130      "00010000" // /* MW 2 */
	  1131      "00000101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1132      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-352];   NOP /* MW 8 */
	  1133      "00100111" // /* MW 7 */
	  1134      "11010100" // /* MW 6 */
	  1135      "10111011" // /* MW 5 */
	  1136      "11000111" // /* MW 4 */
	  1137      "00000000" // /* MW 3 */
	  1138      "00000000" // /* MW 2 */
	  1139      "10000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1043 35
.nohwbrkpt
.noswbrkpt
	  1140      "11110111" // 	                                        VST wr3, [sp, #-320];         NOP;                          VMOV wr3, wr1 /* MW 8 */
	  1141      "10101110" // /* MW 7 */
	  1142      "00100001" // /* MW 6 */
	  1143      "00000001" // /* MW 5 */
	  1144      "00000000" // /* MW 4 */
	  1145      "01100000" // /* MW 3 */
	  1146      "10111111" // /* MW 2 */
	  1147      "01110101" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1148      "11110111" // 	                                        VST wr2, [sp, #-288];         NOP;                          VMOV wr2, wr0 /* MW 8 */
	  1149      "10101010" // /* MW 7 */
	  1150      "00100000" // /* MW 6 */
	  1151      "00000001" // /* MW 5 */
	  1152      "00000000" // /* MW 4 */
	  1153      "01110000" // /* MW 3 */
	  1154      "00111111" // /* MW 2 */
	  1155      "01110101" // /* MW 1 */
	  1156      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-256];    NOP /* MW 8 */
	  1157      "00000111" // /* MW 7 */
	  1158      "00000000" // /* MW 6 */
	  1159      "11111111" // /* MW 5 */
	  1160      "11101100" // /* MW 4 */
	  1161      "00000000" // /* MW 3 */
	  1162      "00000000" // /* MW 2 */
	  1163      "10000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  1164      "11110111" // 	                                        NOP;                                                        VLDA.SPIL vdl0, [sp, #-16];   NOP /* MW 8 */
	  1165      "00100111" // /* MW 7 */
	  1166      "11111110" // /* MW 6 */
	  1167      "00110011" // /* MW 5 */
	  1168      "11001111" // /* MW 4 */
	  1169      "00000000" // /* MW 3 */
	  1170      "00000000" // /* MW 2 */
	  1171      "10000000" // /* MW 1 */
.noswbrkpt
	  1172      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-224];   NOP /* MW 8 */
	  1173      "00100111" // /* MW 7 */
	  1174      "11100100" // /* MW 6 */
	  1175      "10001011" // /* MW 5 */
	  1176      "11000111" // /* MW 4 */
	  1177      "00000000" // /* MW 3 */
	  1178      "00000000" // /* MW 2 */
	  1179      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1180      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr0, [sp, #-128];   NOP /* MW 8 */
	  1181      "00100111" // /* MW 7 */
	  1182      "11110000" // /* MW 6 */
	  1183      "10000011" // /* MW 5 */
	  1184      "11000111" // /* MW 4 */
	  1185      "00000000" // /* MW 3 */
	  1186      "00000000" // /* MW 2 */
	  1187      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1188      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-320];   NOP /* MW 8 */
	  1189      "00100111" // /* MW 7 */
	  1190      "11011000" // /* MW 6 */
	  1191      "10001011" // /* MW 5 */
	  1192      "11000111" // /* MW 4 */
	  1193      "00000000" // /* MW 3 */
	  1194      "00000000" // /* MW 2 */
	  1195      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1196      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-256];   NOP /* MW 8 */
	  1197      "00100111" // /* MW 7 */
	  1198      "11100000" // /* MW 6 */
	  1199      "10110011" // /* MW 5 */
	  1200      "11000111" // /* MW 4 */
	  1201      "00000000" // /* MW 3 */
	  1202      "00000000" // /* MW 2 */
	  1203      "10000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  1204      "00111111" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;                                          VLDA.SPIL wr0, [sp, #-288];   NOP /* MW 12 */
	  1205      "11000010" // /* MW 11 */
	  1206      "00111101" // /* MW 10 */
	  1207      "01111000" // /* MW 9 */
	  1208      "00001100" // /* MW 8 */
	  1209      "00000000" // /* MW 7 */
	  1210      "00000000" // /* MW 6 */
	  1211      "01110000" // /* MW 5 */
	  1212      "10001000" // /* MW 4 */
	  1213      "00001110" // /* MW 3 */
	  1214      "00000000" // /* MW 2 */
	  1215      "00000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65 first
.src_ref 5 "accum.hpp" 1208 65 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1216      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wr1, [sp, #-416];    NOP;                                    VMAC.48.UPSB bm0, vdl0, s0, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1217      "00010000" // /* MW 15 */
	  1218      "00100000" // /* MW 14 */
	  1219      "01000000" // /* MW 13 */
	  1220      "11000000" // /* MW 12 */
	  1221      "00000000" // /* MW 11 */
	  1222      "11100110" // /* MW 10 */
	  1223      "00101111" // /* MW 9 */
	  1224      "00001110" // /* MW 8 */
	  1225      "00000000" // /* MW 7 */
	  1226      "00000000" // /* MW 6 */
	  1227      "00010000" // /* MW 5 */
	  1228      "00000000" // /* MW 4 */
	  1229      "00000000" // /* MW 3 */
	  1230      "00000000" // /* MW 2 */
	  1231      "00000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "accum.hpp" 1208 65
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1043 35
.src_ref 5 "vector.hpp" 1043 35 first
.nohwbrkpt
.noswbrkpt
	  1232      "11101111" // 	NOP;                                    VST wr0, [sp, #-384];                                       VMOV wd0, wr3;                NOP;                                    VMAC.48.UPSB bm3, vdl0, s0, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 12 */
	  1233      "10000100" // /* MW 11 */
	  1234      "00000000" // /* MW 10 */
	  1235      "00000000" // /* MW 9 */
	  1236      "00000010" // /* MW 8 */
	  1237      "00111110" // /* MW 7 */
	  1238      "00000000" // /* MW 6 */
	  1239      "11010001" // /* MW 5 */
	  1240      "00011101" // /* MW 4 */
	  1241      "01001001" // /* MW 3 */
	  1242      "00111111" // /* MW 2 */
	  1243      "01110100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1244      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wr1, [sp, #-416];   NOP /* MW 8 */
	  1245      "00100111" // /* MW 7 */
	  1246      "11001100" // /* MW 6 */
	  1247      "10001011" // /* MW 5 */
	  1248      "11000111" // /* MW 4 */
	  1249      "00000000" // /* MW 3 */
	  1250      "00000000" // /* MW 2 */
	  1251      "10000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1208 65 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1043 35
.src_ref 5 "vector.hpp" 1430 12 first
.nohwbrkpt
.noswbrkpt
	  1252      "10011000" // 	VLDA wr0, [sp, #-384];NOP;              NOP;                          NOP;                          VSHL0.32 wc0, r14;            NOP;                                    VMAC.48.UPSB bm2, vdl0, s0, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1253      "00010000" // /* MW 15 */
	  1254      "00000000" // /* MW 14 */
	  1255      "01000000" // /* MW 13 */
	  1256      "11000000" // /* MW 12 */
	  1257      "00000000" // /* MW 11 */
	  1258      "00000000" // /* MW 10 */
	  1259      "11100010" // /* MW 9 */
	  1260      "01101001" // /* MW 8 */
	  1261      "00000000" // /* MW 7 */
	  1262      "00000000" // /* MW 6 */
	  1263      "00010000" // /* MW 5 */
	  1264      "00000000" // /* MW 4 */
	  1265      "00000000" // /* MW 3 */
	  1266      "11111101" // /* MW 2 */
	  1267      "00000010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1268      "11110111" // 	                                        NOP;                                                        VST.SPIL wc0, [sp, #-288];    NOP /* MW 8 */
	  1269      "00000111" // /* MW 7 */
	  1270      "11100000" // /* MW 6 */
	  1271      "11111110" // /* MW 5 */
	  1272      "11101000" // /* MW 4 */
	  1273      "00000000" // /* MW 3 */
	  1274      "00000000" // /* MW 2 */
	  1275      "10000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  1276      "11001111" // 	VLDA.UNPACK.s8 xa, [p3], m0, cyc1;      NOP;                          NOP;                                                        NOP;                                    VMAC.48 bm2, yd.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 12 */
	  1277      "10000101" // /* MW 11 */
	  1278      "00000000" // /* MW 10 */
	  1279      "00000000" // /* MW 9 */
	  1280      "11000010" // /* MW 8 */
	  1281      "00000110" // /* MW 7 */
	  1282      "00000000" // /* MW 6 */
	  1283      "00000000" // /* MW 5 */
	  1284      "00000000" // /* MW 4 */
	  1285      "11100000" // /* MW 3 */
	  1286      "00010000" // /* MW 2 */
	  1287      "00000101" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1288      "00000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm0, yd.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  1289      "00001011" // /* MW 7 */
	  1290      "00000001" // /* MW 6 */
	  1291      "00000010" // /* MW 5 */
	  1292      "10000100" // /* MW 4 */
	  1293      "00000101" // /* MW 3 */
	  1294      "00000000" // /* MW 2 */
	  1295      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1296      "01000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  1297      "00001000" // /* MW 7 */
	  1298      "00000001" // /* MW 6 */
	  1299      "00000010" // /* MW 5 */
	  1300      "10000100" // /* MW 4 */
	  1301      "00000101" // /* MW 3 */
	  1302      "00000000" // /* MW 2 */
	  1303      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1304      "10000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  1305      "00001000" // /* MW 7 */
	  1306      "00000001" // /* MW 6 */
	  1307      "00000000" // /* MW 5 */
	  1308      "10000100" // /* MW 4 */
	  1309      "00000101" // /* MW 3 */
	  1310      "00000000" // /* MW 2 */
	  1311      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1430 12 first
.nohwbrkpt
.noswbrkpt
	  1312      "11101111" // 	NOP;                                    NOP;                                                        VSHL0.32 wc1, r12;            NOP;                                    VMAC.48 bm3, yd.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 12 */
	  1313      "10000101" // /* MW 11 */
	  1314      "00000000" // /* MW 10 */
	  1315      "00000000" // /* MW 9 */
	  1316      "11000010" // /* MW 8 */
	  1317      "00111110" // /* MW 7 */
	  1318      "00000000" // /* MW 6 */
	  1319      "10100001" // /* MW 5 */
	  1320      "01110000" // /* MW 4 */
	  1321      "00001010" // /* MW 3 */
	  1322      "00000000" // /* MW 2 */
	  1323      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1324      "10100100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wc1, [sp, #-256];    NOP;                                    VMAC.48 bm1, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1325      "00010000" // /* MW 15 */
	  1326      "00100000" // /* MW 14 */
	  1327      "01000000" // /* MW 13 */
	  1328      "11011000" // /* MW 12 */
	  1329      "00000000" // /* MW 11 */
	  1330      "11110000" // /* MW 10 */
	  1331      "10101111" // /* MW 9 */
	  1332      "00001110" // /* MW 8 */
	  1333      "00000000" // /* MW 7 */
	  1334      "00000000" // /* MW 6 */
	  1335      "00010000" // /* MW 5 */
	  1336      "00000000" // /* MW 4 */
	  1337      "00000000" // /* MW 3 */
	  1338      "00000000" // /* MW 2 */
	  1339      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1111 23 first
.src_ref 5 "vector.hpp" 1430 12 first
.nohwbrkpt
.noswbrkpt
	  1340      "10101000" // 	VLDA wc0, [sp, #-256];VLDB.UNPACK.s8 xa, [p3], m0, cyc1;NOP;          NOP;                          VSHL0.32 wc1, r1;             NOP;                                    VMAC.48 bm2, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1341      "00010000" // /* MW 15 */
	  1342      "00000000" // /* MW 14 */
	  1343      "01000000" // /* MW 13 */
	  1344      "11011000" // /* MW 12 */
	  1345      "00000000" // /* MW 11 */
	  1346      "10000000" // /* MW 10 */
	  1347      "00010010" // /* MW 9 */
	  1348      "01101001" // /* MW 8 */
	  1349      "00000000" // /* MW 7 */
	  1350      "00000000" // /* MW 6 */
	  1351      "01110000" // /* MW 5 */
	  1352      "10001000" // /* MW 4 */
	  1353      "00000010" // /* MW 3 */
	  1354      "11111110" // /* MW 2 */
	  1355      "00010010" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  1356      "10001100" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;            NOP;                          VST.SPIL wc1, [sp, #-224];    NOP;                                    VMAC.48 bm3, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1357      "00010000" // /* MW 15 */
	  1358      "00000000" // /* MW 14 */
	  1359      "01000000" // /* MW 13 */
	  1360      "11011000" // /* MW 12 */
	  1361      "00000000" // /* MW 11 */
	  1362      "11110010" // /* MW 10 */
	  1363      "10101111" // /* MW 9 */
	  1364      "00001110" // /* MW 8 */
	  1365      "00000000" // /* MW 7 */
	  1366      "00000000" // /* MW 6 */
	  1367      "01110000" // /* MW 5 */
	  1368      "10001000" // /* MW 4 */
	  1369      "00001110" // /* MW 3 */
	  1370      "00000000" // /* MW 2 */
	  1371      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1372      "10000000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wc1, [sp, #-160];   NOP;                                    VMAC.48 bm0, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1373      "00010000" // /* MW 15 */
	  1374      "00100000" // /* MW 14 */
	  1375      "01000000" // /* MW 13 */
	  1376      "11011000" // /* MW 12 */
	  1377      "11000010" // /* MW 11 */
	  1378      "10111110" // /* MW 10 */
	  1379      "01111010" // /* MW 9 */
	  1380      "00001100" // /* MW 8 */
	  1381      "00000000" // /* MW 7 */
	  1382      "00000000" // /* MW 6 */
	  1383      "00010000" // /* MW 5 */
	  1384      "00000000" // /* MW 4 */
	  1385      "00000000" // /* MW 3 */
	  1386      "00000000" // /* MW 2 */
	  1387      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1388      "01000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm1, yd.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  1389      "00001011" // /* MW 7 */
	  1390      "00000001" // /* MW 6 */
	  1391      "00000010" // /* MW 5 */
	  1392      "10000100" // /* MW 4 */
	  1393      "00000101" // /* MW 3 */
	  1394      "00000000" // /* MW 2 */
	  1395      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 98 117 first
.src_ref 5 "vector.hpp" 1430 12 first
.nohwbrkpt
.noswbrkpt
	  1396      "11001111" // 	NOP;                                    NOP;                                                        VSHL0.32 wc1, r13;            NOP;                                    VMAC.48 bm2, yd.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 12 */
	  1397      "10000101" // /* MW 11 */
	  1398      "00000000" // /* MW 10 */
	  1399      "00000000" // /* MW 9 */
	  1400      "11000010" // /* MW 8 */
	  1401      "00111110" // /* MW 7 */
	  1402      "00000000" // /* MW 6 */
	  1403      "10100001" // /* MW 5 */
	  1404      "01110100" // /* MW 4 */
	  1405      "00001010" // /* MW 3 */
	  1406      "00000000" // /* MW 2 */
	  1407      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1408      "10100100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wc1, [sp, #-128];    NOP;                                    VMAC.48 bm1, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1409      "00010000" // /* MW 15 */
	  1410      "00100000" // /* MW 14 */
	  1411      "01000000" // /* MW 13 */
	  1412      "11011000" // /* MW 12 */
	  1413      "00000000" // /* MW 11 */
	  1414      "11111000" // /* MW 10 */
	  1415      "10101111" // /* MW 9 */
	  1416      "00001110" // /* MW 8 */
	  1417      "00000000" // /* MW 7 */
	  1418      "00000000" // /* MW 6 */
	  1419      "00010000" // /* MW 5 */
	  1420      "00000000" // /* MW 4 */
	  1421      "00000000" // /* MW 3 */
	  1422      "00000000" // /* MW 2 */
	  1423      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1424      "10000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm2, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  1425      "00001010" // /* MW 7 */
	  1426      "00000001" // /* MW 6 */
	  1427      "00000000" // /* MW 5 */
	  1428      "10000100" // /* MW 4 */
	  1429      "00000101" // /* MW 3 */
	  1430      "00000000" // /* MW 2 */
	  1431      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  1432      "10000000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.hi, [sp, #-384];NOP;                                 VMAC.48 bm0, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1433      "00010000" // /* MW 15 */
	  1434      "00100000" // /* MW 14 */
	  1435      "01000000" // /* MW 13 */
	  1436      "11011000" // /* MW 12 */
	  1437      "00000000" // /* MW 11 */
	  1438      "11101000" // /* MW 10 */
	  1439      "00111111" // /* MW 9 */
	  1440      "00001101" // /* MW 8 */
	  1441      "00000000" // /* MW 7 */
	  1442      "00000000" // /* MW 6 */
	  1443      "00010000" // /* MW 5 */
	  1444      "00000000" // /* MW 4 */
	  1445      "00000000" // /* MW 3 */
	  1446      "00000000" // /* MW 2 */
	  1447      "00000000" // /* MW 1 */
	  1448      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 aml3.lo, [sp, #-416];NOP /* MW 8 */
	  1449      "00000111" // /* MW 7 */
	  1450      "01100000" // /* MW 6 */
	  1451      "11111110" // /* MW 5 */
	  1452      "11000011" // /* MW 4 */
	  1453      "00000000" // /* MW 3 */
	  1454      "00000000" // /* MW 2 */
	  1455      "10000000" // /* MW 1 */
.noswbrkpt
	  1456      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml3.lo, [sp, #-416];NOP /* MW 8 */
	  1457      "00100111" // /* MW 7 */
	  1458      "11001100" // /* MW 6 */
	  1459      "00001111" // /* MW 5 */
	  1460      "11000111" // /* MW 4 */
	  1461      "00000000" // /* MW 3 */
	  1462      "00000000" // /* MW 2 */
	  1463      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1464      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml3.hi, [sp, #-384];NOP /* MW 8 */
	  1465      "00100111" // /* MW 7 */
	  1466      "11010000" // /* MW 6 */
	  1467      "01001111" // /* MW 5 */
	  1468      "11000111" // /* MW 4 */
	  1469      "00000000" // /* MW 3 */
	  1470      "00000000" // /* MW 2 */
	  1471      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1472      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.lo, [sp, #-352];NOP /* MW 8 */
	  1473      "00000111" // /* MW 7 */
	  1474      "10100000" // /* MW 6 */
	  1475      "11111110" // /* MW 5 */
	  1476      "11000111" // /* MW 4 */
	  1477      "00000000" // /* MW 3 */
	  1478      "00000000" // /* MW 2 */
	  1479      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1480      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 amh3.lo, [sp, #-352];NOP /* MW 8 */
	  1481      "00100111" // /* MW 7 */
	  1482      "11010100" // /* MW 6 */
	  1483      "00011111" // /* MW 5 */
	  1484      "11000111" // /* MW 4 */
	  1485      "00000000" // /* MW 3 */
	  1486      "00000000" // /* MW 2 */
	  1487      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1488      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-352];    NOP /* MW 8 */
	  1489      "00000111" // /* MW 7 */
	  1490      "10100000" // /* MW 6 */
	  1491      "11111110" // /* MW 5 */
	  1492      "11101110" // /* MW 4 */
	  1493      "00000000" // /* MW 3 */
	  1494      "00000000" // /* MW 2 */
	  1495      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1496      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-352];   NOP /* MW 8 */
	  1497      "00100111" // /* MW 7 */
	  1498      "11010100" // /* MW 6 */
	  1499      "10111011" // /* MW 5 */
	  1500      "11000111" // /* MW 4 */
	  1501      "00000000" // /* MW 3 */
	  1502      "00000000" // /* MW 2 */
	  1503      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1504      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-192];   NOP /* MW 8 */
	  1505      "00100111" // /* MW 7 */
	  1506      "11101000" // /* MW 6 */
	  1507      "10100011" // /* MW 5 */
	  1508      "11000111" // /* MW 4 */
	  1509      "00000000" // /* MW 3 */
	  1510      "00000000" // /* MW 2 */
	  1511      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1512      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.hi, [sp, #-320];NOP /* MW 8 */
	  1513      "00000111" // /* MW 7 */
	  1514      "11000000" // /* MW 6 */
	  1515      "11111110" // /* MW 5 */
	  1516      "11010111" // /* MW 4 */
	  1517      "00000000" // /* MW 3 */
	  1518      "00000000" // /* MW 2 */
	  1519      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1520      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 amh3.hi, [sp, #-320];NOP /* MW 8 */
	  1521      "00100111" // /* MW 7 */
	  1522      "11011000" // /* MW 6 */
	  1523      "01011111" // /* MW 5 */
	  1524      "11000111" // /* MW 4 */
	  1525      "00000000" // /* MW 3 */
	  1526      "00000000" // /* MW 2 */
	  1527      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1528      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-320];    NOP /* MW 8 */
	  1529      "00000111" // /* MW 7 */
	  1530      "11000000" // /* MW 6 */
	  1531      "11111110" // /* MW 5 */
	  1532      "11101100" // /* MW 4 */
	  1533      "00000000" // /* MW 3 */
	  1534      "00000000" // /* MW 2 */
	  1535      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1536      "11110111" // 	                                        NOP;                                                        VLDA.SPIL vdl0, [sp, #-16];   NOP /* MW 8 */
	  1537      "00100111" // /* MW 7 */
	  1538      "11111110" // /* MW 6 */
	  1539      "00110011" // /* MW 5 */
	  1540      "11001111" // /* MW 4 */
	  1541      "00000000" // /* MW 3 */
	  1542      "00000000" // /* MW 2 */
	  1543      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1544      "11000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm3, ya.s16, r9, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  1545      "00001000" // /* MW 7 */
	  1546      "01000001" // /* MW 6 */
	  1547      "00000010" // /* MW 5 */
	  1548      "10000100" // /* MW 4 */
	  1549      "00000101" // /* MW 3 */
	  1550      "00000000" // /* MW 2 */
	  1551      "10000000" // /* MW 1 */
	  1552      "00000001" // 	NOP /* MW 2 */
	  1553      "00000000" // /* MW 1 */
.noswbrkpt
	  1554      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-320];   NOP /* MW 8 */
	  1555      "00100111" // /* MW 7 */
	  1556      "11011000" // /* MW 6 */
	  1557      "10110011" // /* MW 5 */
	  1558      "11000111" // /* MW 4 */
	  1559      "00000000" // /* MW 3 */
	  1560      "00000000" // /* MW 2 */
	  1561      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1562      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-352];   NOP /* MW 8 */
	  1563      "00100111" // /* MW 7 */
	  1564      "11010100" // /* MW 6 */
	  1565      "10111011" // /* MW 5 */
	  1566      "11000111" // /* MW 4 */
	  1567      "00000000" // /* MW 3 */
	  1568      "00000000" // /* MW 2 */
	  1569      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1570      "00000001" // 	NOP /* MW 2 */
	  1571      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1572      "00000001" // 	NOP /* MW 2 */
	  1573      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1574      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.hi, [sp, #-544];NOP /* MW 8 */
	  1575      "00000111" // /* MW 7 */
	  1576      "11100000" // /* MW 6 */
	  1577      "11111101" // /* MW 5 */
	  1578      "11010111" // /* MW 4 */
	  1579      "00000000" // /* MW 3 */
	  1580      "00000000" // /* MW 2 */
	  1581      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1582      "10111100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 amh3.lo, [sp, #-512];NOP;                                 VMAC.48.UPSB bm3, vdl0, s0, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1583      "00010000" // /* MW 15 */
	  1584      "00100000" // /* MW 14 */
	  1585      "01000000" // /* MW 13 */
	  1586      "11000000" // /* MW 12 */
	  1587      "00000000" // /* MW 11 */
	  1588      "11100000" // /* MW 10 */
	  1589      "01111111" // /* MW 9 */
	  1590      "00001100" // /* MW 8 */
	  1591      "00000000" // /* MW 7 */
	  1592      "00000000" // /* MW 6 */
	  1593      "00010000" // /* MW 5 */
	  1594      "00000000" // /* MW 4 */
	  1595      "00000000" // /* MW 3 */
	  1596      "00000000" // /* MW 2 */
	  1597      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1598      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 aml3.hi, [sp, #-480];NOP /* MW 8 */
	  1599      "00000111" // /* MW 7 */
	  1600      "00100000" // /* MW 6 */
	  1601      "11111110" // /* MW 5 */
	  1602      "11010011" // /* MW 4 */
	  1603      "00000000" // /* MW 3 */
	  1604      "00000000" // /* MW 2 */
	  1605      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1606      "11101111" // 	NOP;                                    VST.48 aml3.lo, [sp, #-448];                                VMOV wd0, wr3;                NOP;                                    VMAC.48 bm3, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 12 */
	  1607      "10000100" // /* MW 11 */
	  1608      "00000000" // /* MW 10 */
	  1609      "00000001" // /* MW 9 */
	  1610      "11000010" // /* MW 8 */
	  1611      "00111110" // /* MW 7 */
	  1612      "00000000" // /* MW 6 */
	  1613      "11010001" // /* MW 5 */
	  1614      "00011101" // /* MW 4 */
	  1615      "00101001" // /* MW 3 */
	  1616      "11111111" // /* MW 2 */
	  1617      "01111000" // /* MW 1 */
.noswbrkpt
	  1618      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-320];   NOP /* MW 8 */
	  1619      "00100111" // /* MW 7 */
	  1620      "11011000" // /* MW 6 */
	  1621      "10110011" // /* MW 5 */
	  1622      "11000111" // /* MW 4 */
	  1623      "00000000" // /* MW 3 */
	  1624      "00000000" // /* MW 2 */
	  1625      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1626      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc1, [sp, #-288];   NOP /* MW 8 */
	  1627      "00100111" // /* MW 7 */
	  1628      "11011100" // /* MW 6 */
	  1629      "10101011" // /* MW 5 */
	  1630      "11000111" // /* MW 4 */
	  1631      "00000000" // /* MW 3 */
	  1632      "00000000" // /* MW 2 */
	  1633      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1634      "00000001" // 	NOP /* MW 2 */
	  1635      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  1636      "00111111" // 	NOP;                VLDB.UNPACK.s8 xa, [p3], m0, cyc1;NOP;                                          VLDA.SPIL wc0, [sp, #-64];    NOP /* MW 12 */
	  1637      "10000010" // /* MW 11 */
	  1638      "00111111" // /* MW 10 */
	  1639      "01111010" // /* MW 9 */
	  1640      "00001100" // /* MW 8 */
	  1641      "00000000" // /* MW 7 */
	  1642      "00000000" // /* MW 6 */
	  1643      "01110000" // /* MW 5 */
	  1644      "10001000" // /* MW 4 */
	  1645      "00000010" // /* MW 3 */
	  1646      "00000000" // /* MW 2 */
	  1647      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1648      "00000001" // 	NOP /* MW 2 */
	  1649      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1650      "10111100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wc0, [sp, #-96];    NOP;                                    VMAC.48.UPSB bm3, vdl0, s0, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1651      "00010000" // /* MW 15 */
	  1652      "00000000" // /* MW 14 */
	  1653      "01000000" // /* MW 13 */
	  1654      "11000000" // /* MW 12 */
	  1655      "01000010" // /* MW 11 */
	  1656      "00111111" // /* MW 10 */
	  1657      "01111010" // /* MW 9 */
	  1658      "00001100" // /* MW 8 */
	  1659      "00000000" // /* MW 7 */
	  1660      "00000000" // /* MW 6 */
	  1661      "00010000" // /* MW 5 */
	  1662      "00000000" // /* MW 4 */
	  1663      "00000000" // /* MW 3 */
	  1664      "00000000" // /* MW 2 */
	  1665      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1666      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.hi, [sp, #-672];NOP /* MW 8 */
	  1667      "00000111" // /* MW 7 */
	  1668      "01100000" // /* MW 6 */
	  1669      "11111101" // /* MW 5 */
	  1670      "11010111" // /* MW 4 */
	  1671      "00000000" // /* MW 3 */
	  1672      "00000000" // /* MW 2 */
	  1673      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1674      "11101111" // 	NOP;                                    VST.48 amh3.lo, [sp, #-640];                                VMOV wc0, wr2;                NOP;                                    VMAC.48 bm3, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 12 */
	  1675      "10000100" // /* MW 11 */
	  1676      "00000000" // /* MW 10 */
	  1677      "00000000" // /* MW 9 */
	  1678      "11000010" // /* MW 8 */
	  1679      "00111110" // /* MW 7 */
	  1680      "00000000" // /* MW 6 */
	  1681      "10010001" // /* MW 5 */
	  1682      "00010101" // /* MW 4 */
	  1683      "11001001" // /* MW 3 */
	  1684      "11111110" // /* MW 2 */
	  1685      "01111001" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1686      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.hi, [sp, #-608];NOP;                                 VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1687      "00010000" // /* MW 15 */
	  1688      "00100000" // /* MW 14 */
	  1689      "01000000" // /* MW 13 */
	  1690      "11011000" // /* MW 12 */
	  1691      "00000000" // /* MW 11 */
	  1692      "11011010" // /* MW 10 */
	  1693      "00111111" // /* MW 9 */
	  1694      "00001101" // /* MW 8 */
	  1695      "00000000" // /* MW 7 */
	  1696      "00000000" // /* MW 6 */
	  1697      "00010000" // /* MW 5 */
	  1698      "00000000" // /* MW 4 */
	  1699      "00000000" // /* MW 3 */
	  1700      "00000000" // /* MW 2 */
	  1701      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1702      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.lo, [sp, #-576];NOP;                                 VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1703      "00010000" // /* MW 15 */
	  1704      "00000000" // /* MW 14 */
	  1705      "01000000" // /* MW 13 */
	  1706      "11011000" // /* MW 12 */
	  1707      "00000000" // /* MW 11 */
	  1708      "11011100" // /* MW 10 */
	  1709      "00111111" // /* MW 9 */
	  1710      "00001100" // /* MW 8 */
	  1711      "00000000" // /* MW 7 */
	  1712      "00000000" // /* MW 6 */
	  1713      "00010000" // /* MW 5 */
	  1714      "00000000" // /* MW 4 */
	  1715      "00000000" // /* MW 3 */
	  1716      "00000000" // /* MW 2 */
	  1717      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1718      "01000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm1, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  1719      "00001001" // /* MW 7 */
	  1720      "00000001" // /* MW 6 */
	  1721      "00000010" // /* MW 5 */
	  1722      "10000100" // /* MW 4 */
	  1723      "00000101" // /* MW 3 */
	  1724      "00000000" // /* MW 2 */
	  1725      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1726      "10000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm2, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  1727      "00001001" // /* MW 7 */
	  1728      "00000001" // /* MW 6 */
	  1729      "00000000" // /* MW 5 */
	  1730      "10000100" // /* MW 4 */
	  1731      "00000101" // /* MW 3 */
	  1732      "00000000" // /* MW 2 */
	  1733      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.noswbrkpt
	  1734      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 amh2.lo, [sp, #-512];NOP;                                VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1735      "00010000" // /* MW 15 */
	  1736      "00100000" // /* MW 14 */
	  1737      "01000000" // /* MW 13 */
	  1738      "11011000" // /* MW 12 */
	  1739      "00000010" // /* MW 11 */
	  1740      "10111100" // /* MW 10 */
	  1741      "01110001" // /* MW 9 */
	  1742      "00001100" // /* MW 8 */
	  1743      "00000000" // /* MW 7 */
	  1744      "00000000" // /* MW 6 */
	  1745      "00010000" // /* MW 5 */
	  1746      "00000000" // /* MW 4 */
	  1747      "00000000" // /* MW 3 */
	  1748      "00000000" // /* MW 2 */
	  1749      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1750      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 amh2.hi, [sp, #-544];NOP;                                VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1751      "00010000" // /* MW 15 */
	  1752      "00000000" // /* MW 14 */
	  1753      "01000000" // /* MW 13 */
	  1754      "11011000" // /* MW 12 */
	  1755      "11000010" // /* MW 11 */
	  1756      "10111011" // /* MW 10 */
	  1757      "01110101" // /* MW 9 */
	  1758      "00001100" // /* MW 8 */
	  1759      "00000000" // /* MW 7 */
	  1760      "00000000" // /* MW 6 */
	  1761      "00010000" // /* MW 5 */
	  1762      "00000000" // /* MW 4 */
	  1763      "00000000" // /* MW 3 */
	  1764      "00000000" // /* MW 2 */
	  1765      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1766      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml2.lo, [sp, #-448];NOP /* MW 8 */
	  1767      "00100111" // /* MW 7 */
	  1768      "11001000" // /* MW 6 */
	  1769      "00001011" // /* MW 5 */
	  1770      "11000111" // /* MW 4 */
	  1771      "00000000" // /* MW 3 */
	  1772      "00000000" // /* MW 2 */
	  1773      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1774      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml2.hi, [sp, #-480];NOP /* MW 8 */
	  1775      "00100111" // /* MW 7 */
	  1776      "11000100" // /* MW 6 */
	  1777      "01001011" // /* MW 5 */
	  1778      "11000111" // /* MW 4 */
	  1779      "00000000" // /* MW 3 */
	  1780      "00000000" // /* MW 2 */
	  1781      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1782      "00000001" // 	NOP /* MW 2 */
	  1783      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1784      "00000001" // 	NOP /* MW 2 */
	  1785      "00000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 908 31 first
.nohwbrkpt
.noswbrkpt
	  1786      "11000111" // 	NOP;                                    VMOVS.48.SRSB vch0, bm1, s1;                                                                                                      VMAC.48 bm3, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  1787      "00001010" // /* MW 7 */
	  1788      "00000001" // /* MW 6 */
	  1789      "00000000" // /* MW 5 */
	  1790      "10000100" // /* MW 4 */
	  1791      "01001101" // /* MW 3 */
	  1792      "00101010" // /* MW 2 */
	  1793      "10000011" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 908 31
.nohwbrkpt
.noswbrkpt
	  1794      "11110111" // 	                                        VMOVS.48.SRSB vcl0, bm2, s1;                                VLDA.SPIL wc0, [sp, #-224];   NOP /* MW 8 */
	  1795      "00100111" // /* MW 7 */
	  1796      "11100100" // /* MW 6 */
	  1797      "10100011" // /* MW 5 */
	  1798      "11000111" // /* MW 4 */
	  1799      "01000000" // /* MW 3 */
	  1800      "01001010" // /* MW 2 */
	  1801      "10000011" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1802      "00000001" // 	NOP /* MW 2 */
	  1803      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1804      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-128];   NOP /* MW 8 */
	  1805      "00100111" // /* MW 7 */
	  1806      "11110000" // /* MW 6 */
	  1807      "10100011" // /* MW 5 */
	  1808      "11000111" // /* MW 4 */
	  1809      "00000000" // /* MW 3 */
	  1810      "00000000" // /* MW 2 */
	  1811      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1812      "00000001" // 	NOP /* MW 2 */
	  1813      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1814      "00000001" // 	NOP /* MW 2 */
	  1815      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1816      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.hi, [sp, #-320];NOP /* MW 8 */
	  1817      "00000111" // /* MW 7 */
	  1818      "11000000" // /* MW 6 */
	  1819      "11111110" // /* MW 5 */
	  1820      "11010111" // /* MW 4 */
	  1821      "00000000" // /* MW 3 */
	  1822      "00000000" // /* MW 2 */
	  1823      "10000000" // /* MW 1 */
.label ZLS_F_Z10filter_macP12input_windowIaEP13output_windowIaE_912
.src_ref 2 "window.h" 735 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.begin_of_loop
.nohwbrkpt
.noswbrkpt
.loop_nesting 1
	  1824      "11110111" // 	                                        VST wc0, [p1], m0, cyc0;                                    VLDA.SPIL wc0, [sp, #-256];   NOP /* MW 8 */
	  1825      "00100111" // /* MW 7 */
	  1826      "11100000" // /* MW 6 */
	  1827      "10100011" // /* MW 5 */
	  1828      "11000111" // /* MW 4 */
	  1829      "00001000" // /* MW 3 */
	  1830      "00000000" // /* MW 2 */
	  1831      "10111011" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1832      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.lo, [sp, #-416];NOP;                                 VMAC.48 bm2, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1833      "00010000" // /* MW 15 */
	  1834      "00000000" // /* MW 14 */
	  1835      "01000000" // /* MW 13 */
	  1836      "11011000" // /* MW 12 */
	  1837      "00000000" // /* MW 11 */
	  1838      "11100110" // /* MW 10 */
	  1839      "00111111" // /* MW 9 */
	  1840      "00001100" // /* MW 8 */
	  1841      "00000000" // /* MW 7 */
	  1842      "00000000" // /* MW 6 */
	  1843      "00010000" // /* MW 5 */
	  1844      "00000000" // /* MW 4 */
	  1845      "00000000" // /* MW 3 */
	  1846      "00000000" // /* MW 2 */
	  1847      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1848      "10010100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.hi, [sp, #-384];NOP;                                 VMAC.48 bm1, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1849      "00010000" // /* MW 15 */
	  1850      "00100000" // /* MW 14 */
	  1851      "01000000" // /* MW 13 */
	  1852      "11011000" // /* MW 12 */
	  1853      "00000000" // /* MW 11 */
	  1854      "11101000" // /* MW 10 */
	  1855      "00111111" // /* MW 9 */
	  1856      "00001101" // /* MW 8 */
	  1857      "00000000" // /* MW 7 */
	  1858      "00000000" // /* MW 6 */
	  1859      "00010000" // /* MW 5 */
	  1860      "00000000" // /* MW 4 */
	  1861      "00000000" // /* MW 3 */
	  1862      "00000000" // /* MW 2 */
	  1863      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1864      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 aml0.lo, [sp, #-576];NOP;                                VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1865      "00010000" // /* MW 15 */
	  1866      "00100000" // /* MW 14 */
	  1867      "01000000" // /* MW 13 */
	  1868      "11011000" // /* MW 12 */
	  1869      "10000010" // /* MW 11 */
	  1870      "00111011" // /* MW 10 */
	  1871      "01110000" // /* MW 9 */
	  1872      "00001100" // /* MW 8 */
	  1873      "00000000" // /* MW 7 */
	  1874      "00000000" // /* MW 6 */
	  1875      "00010000" // /* MW 5 */
	  1876      "00000000" // /* MW 4 */
	  1877      "00000000" // /* MW 3 */
	  1878      "00000000" // /* MW 2 */
	  1879      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1880      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 amh0.lo, [sp, #-640];NOP;                                VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1881      "00010000" // /* MW 15 */
	  1882      "00000000" // /* MW 14 */
	  1883      "01000000" // /* MW 13 */
	  1884      "11011000" // /* MW 12 */
	  1885      "00000010" // /* MW 11 */
	  1886      "00111011" // /* MW 10 */
	  1887      "01110001" // /* MW 9 */
	  1888      "00001100" // /* MW 8 */
	  1889      "00000000" // /* MW 7 */
	  1890      "00000000" // /* MW 6 */
	  1891      "00010000" // /* MW 5 */
	  1892      "00000000" // /* MW 4 */
	  1893      "00000000" // /* MW 3 */
	  1894      "00000000" // /* MW 2 */
	  1895      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1896      "01110111" // 	VLDA.48 aml0.hi, [sp, #-608];                                         NOP;                          VMOV aml1, aml0 /* MW 8 */
	  1897      "00000000" // /* MW 7 */
	  1898      "00000000" // /* MW 6 */
	  1899      "01000000" // /* MW 5 */
	  1900      "00000000" // /* MW 4 */
	  1901      "01100001" // /* MW 3 */
	  1902      "11111011" // /* MW 2 */
	  1903      "11110000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  1904      "01010111" // 	VLDA.48 amh0.hi, [sp, #-672];VLDB.UNPACK.s8 xa, [p3], m0, cyc1;                                     VMOV amh1, amh0 /* MW 8 */
	  1905      "10100000" // /* MW 7 */
	  1906      "10100000" // /* MW 6 */
	  1907      "01110000" // /* MW 5 */
	  1908      "10001000" // /* MW 4 */
	  1909      "11000010" // /* MW 3 */
	  1910      "11111010" // /* MW 2 */
	  1911      "11110100" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  1912      "00111111" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;                                          VLDA.SPIL wc1, [sp, #-160];   NOP /* MW 12 */
	  1913      "11000010" // /* MW 11 */
	  1914      "10111110" // /* MW 10 */
	  1915      "01111010" // /* MW 9 */
	  1916      "00001100" // /* MW 8 */
	  1917      "00000000" // /* MW 7 */
	  1918      "00000000" // /* MW 6 */
	  1919      "01110000" // /* MW 5 */
	  1920      "10001000" // /* MW 4 */
	  1921      "00001110" // /* MW 3 */
	  1922      "00000000" // /* MW 2 */
	  1923      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1924      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml3.lo, [sp, #-416];NOP /* MW 8 */
	  1925      "00100111" // /* MW 7 */
	  1926      "11001100" // /* MW 6 */
	  1927      "00001111" // /* MW 5 */
	  1928      "11000111" // /* MW 4 */
	  1929      "00000000" // /* MW 3 */
	  1930      "00000000" // /* MW 2 */
	  1931      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  1932      "10100000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 aml3.hi, [sp, #-384];NOP;                                VMAC.48 bm0, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  1933      "00010000" // /* MW 15 */
	  1934      "00100000" // /* MW 14 */
	  1935      "01000000" // /* MW 13 */
	  1936      "11011000" // /* MW 12 */
	  1937      "00000010" // /* MW 11 */
	  1938      "11111101" // /* MW 10 */
	  1939      "01110100" // /* MW 9 */
	  1940      "00001100" // /* MW 8 */
	  1941      "00000000" // /* MW 7 */
	  1942      "00000000" // /* MW 6 */
	  1943      "00010000" // /* MW 5 */
	  1944      "00000000" // /* MW 4 */
	  1945      "00000000" // /* MW 3 */
	  1946      "00000000" // /* MW 2 */
	  1947      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1948      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.lo, [sp, #-352];NOP /* MW 8 */
	  1949      "00000111" // /* MW 7 */
	  1950      "10100000" // /* MW 6 */
	  1951      "11111110" // /* MW 5 */
	  1952      "11000111" // /* MW 4 */
	  1953      "00000000" // /* MW 3 */
	  1954      "00000000" // /* MW 2 */
	  1955      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1956      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 amh3.lo, [sp, #-352];NOP /* MW 8 */
	  1957      "00100111" // /* MW 7 */
	  1958      "11010100" // /* MW 6 */
	  1959      "00011111" // /* MW 5 */
	  1960      "11000111" // /* MW 4 */
	  1961      "00000000" // /* MW 3 */
	  1962      "00000000" // /* MW 2 */
	  1963      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1964      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 amh3.hi, [sp, #-320];NOP /* MW 8 */
	  1965      "00100111" // /* MW 7 */
	  1966      "11011000" // /* MW 6 */
	  1967      "01011111" // /* MW 5 */
	  1968      "11000111" // /* MW 4 */
	  1969      "00000000" // /* MW 3 */
	  1970      "00000000" // /* MW 2 */
	  1971      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1972      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-192];   NOP /* MW 8 */
	  1973      "00100111" // /* MW 7 */
	  1974      "11101000" // /* MW 6 */
	  1975      "10100011" // /* MW 5 */
	  1976      "11000111" // /* MW 4 */
	  1977      "00000000" // /* MW 3 */
	  1978      "00000000" // /* MW 2 */
	  1979      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1980      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-320];    NOP /* MW 8 */
	  1981      "00000111" // /* MW 7 */
	  1982      "11000000" // /* MW 6 */
	  1983      "11111110" // /* MW 5 */
	  1984      "11101100" // /* MW 4 */
	  1985      "00000000" // /* MW 3 */
	  1986      "00000000" // /* MW 2 */
	  1987      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1988      "11110111" // 	                                        NOP;                                                        VST.SPIL wd1, [sp, #-352];    NOP /* MW 8 */
	  1989      "00000111" // /* MW 7 */
	  1990      "10100000" // /* MW 6 */
	  1991      "11111110" // /* MW 5 */
	  1992      "11101110" // /* MW 4 */
	  1993      "00000000" // /* MW 3 */
	  1994      "00000000" // /* MW 2 */
	  1995      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  1996      "10001100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL vdl0, [sp, #-16];   NOP;                                    VMAC.48 bm3, ya.s16, r9, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  1997      "00010000" // /* MW 15 */
	  1998      "00100100" // /* MW 14 */
	  1999      "01000000" // /* MW 13 */
	  2000      "11011000" // /* MW 12 */
	  2001      "11100010" // /* MW 11 */
	  2002      "00111111" // /* MW 10 */
	  2003      "11110011" // /* MW 9 */
	  2004      "00001100" // /* MW 8 */
	  2005      "00000000" // /* MW 7 */
	  2006      "00000000" // /* MW 6 */
	  2007      "00010000" // /* MW 5 */
	  2008      "00000000" // /* MW 4 */
	  2009      "00000000" // /* MW 3 */
	  2010      "00000000" // /* MW 2 */
	  2011      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2012      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd1, [sp, #-352];   NOP /* MW 8 */
	  2013      "00100111" // /* MW 7 */
	  2014      "11010100" // /* MW 6 */
	  2015      "10111011" // /* MW 5 */
	  2016      "11000111" // /* MW 4 */
	  2017      "00000000" // /* MW 3 */
	  2018      "00000000" // /* MW 2 */
	  2019      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2020      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-320];   NOP /* MW 8 */
	  2021      "00100111" // /* MW 7 */
	  2022      "11011000" // /* MW 6 */
	  2023      "10110011" // /* MW 5 */
	  2024      "11000111" // /* MW 4 */
	  2025      "00000000" // /* MW 3 */
	  2026      "00000000" // /* MW 2 */
	  2027      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2028      "00000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm0, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  2029      "00001000" // /* MW 7 */
	  2030      "00000001" // /* MW 6 */
	  2031      "00000010" // /* MW 5 */
	  2032      "10000100" // /* MW 4 */
	  2033      "00000101" // /* MW 3 */
	  2034      "00000000" // /* MW 2 */
	  2035      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2036      "00000001" // 	NOP /* MW 2 */
	  2037      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2038      "00000001" // 	NOP /* MW 2 */
	  2039      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2040      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 aml3.lo, [sp, #-448];NOP /* MW 8 */
	  2041      "00000111" // /* MW 7 */
	  2042      "01000000" // /* MW 6 */
	  2043      "11111110" // /* MW 5 */
	  2044      "11000011" // /* MW 4 */
	  2045      "00000000" // /* MW 3 */
	  2046      "00000000" // /* MW 2 */
	  2047      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2048      "10111100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd1, [sp, #-352];   NOP;                                    VMAC.48.UPSB bm3, vdl0, s0, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  2049      "00010000" // /* MW 15 */
	  2050      "00100000" // /* MW 14 */
	  2051      "01000000" // /* MW 13 */
	  2052      "11000000" // /* MW 12 */
	  2053      "01000010" // /* MW 11 */
	  2054      "10111101" // /* MW 10 */
	  2055      "01111011" // /* MW 9 */
	  2056      "00001100" // /* MW 8 */
	  2057      "00000000" // /* MW 7 */
	  2058      "00000000" // /* MW 6 */
	  2059      "00010000" // /* MW 5 */
	  2060      "00000000" // /* MW 4 */
	  2061      "00000000" // /* MW 3 */
	  2062      "00000000" // /* MW 2 */
	  2063      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2064      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wd0, [sp, #-320];   NOP /* MW 8 */
	  2065      "00100111" // /* MW 7 */
	  2066      "11011000" // /* MW 6 */
	  2067      "10110011" // /* MW 5 */
	  2068      "11000111" // /* MW 4 */
	  2069      "00000000" // /* MW 3 */
	  2070      "00000000" // /* MW 2 */
	  2071      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2072      "10011100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.hi, [sp, #-480];NOP;                                 VMAC.48 bm3, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2073      "00010000" // /* MW 15 */
	  2074      "00100000" // /* MW 14 */
	  2075      "01000000" // /* MW 13 */
	  2076      "11011000" // /* MW 12 */
	  2077      "00000000" // /* MW 11 */
	  2078      "11100010" // /* MW 10 */
	  2079      "00111111" // /* MW 9 */
	  2080      "00001101" // /* MW 8 */
	  2081      "00000000" // /* MW 7 */
	  2082      "00000000" // /* MW 6 */
	  2083      "00010000" // /* MW 5 */
	  2084      "00000000" // /* MW 4 */
	  2085      "00000000" // /* MW 3 */
	  2086      "00000000" // /* MW 2 */
	  2087      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2088      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.lo, [sp, #-512];NOP /* MW 8 */
	  2089      "00000111" // /* MW 7 */
	  2090      "00000000" // /* MW 6 */
	  2091      "11111110" // /* MW 5 */
	  2092      "11000111" // /* MW 4 */
	  2093      "00000000" // /* MW 3 */
	  2094      "00000000" // /* MW 2 */
	  2095      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2096      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-64];    NOP /* MW 8 */
	  2097      "00100111" // /* MW 7 */
	  2098      "11111000" // /* MW 6 */
	  2099      "10100011" // /* MW 5 */
	  2100      "11000111" // /* MW 4 */
	  2101      "00000000" // /* MW 3 */
	  2102      "00000000" // /* MW 2 */
	  2103      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2104      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.hi, [sp, #-544];NOP /* MW 8 */
	  2105      "00000111" // /* MW 7 */
	  2106      "11100000" // /* MW 6 */
	  2107      "11111101" // /* MW 5 */
	  2108      "11010111" // /* MW 4 */
	  2109      "00000000" // /* MW 3 */
	  2110      "00000000" // /* MW 2 */
	  2111      "10000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  2112      "10111100" // 	VLDA wc0, [sp, #-96];VLDB.UNPACK.s8 xa, [p3], m0, cyc1;NOP;           NOP;                          VMOV wd0, wr3;                NOP;                                    VMAC.48.UPSB bm3, vdl0, s0, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  2113      "00010000" // /* MW 15 */
	  2114      "00000000" // /* MW 14 */
	  2115      "01000000" // /* MW 13 */
	  2116      "11000000" // /* MW 12 */
	  2117      "00000000" // /* MW 11 */
	  2118      "01000000" // /* MW 10 */
	  2119      "01110111" // /* MW 9 */
	  2120      "01100100" // /* MW 8 */
	  2121      "00000000" // /* MW 7 */
	  2122      "00000000" // /* MW 6 */
	  2123      "01110000" // /* MW 5 */
	  2124      "10001000" // /* MW 4 */
	  2125      "01000010" // /* MW 3 */
	  2126      "11111111" // /* MW 2 */
	  2127      "00010010" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2128      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc1, [sp, #-288];   NOP /* MW 8 */
	  2129      "00100111" // /* MW 7 */
	  2130      "11011100" // /* MW 6 */
	  2131      "10101011" // /* MW 5 */
	  2132      "11000111" // /* MW 4 */
	  2133      "00000000" // /* MW 3 */
	  2134      "00000000" // /* MW 2 */
	  2135      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  2136      "11101111" // 	NOP;                                    VST.48 aml3.lo, [sp, #-576];                                VMOV wc0, wr2;                NOP;                                    VMAC.48 bm3, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 12 */
	  2137      "10000100" // /* MW 11 */
	  2138      "00000000" // /* MW 10 */
	  2139      "00000000" // /* MW 9 */
	  2140      "11000010" // /* MW 8 */
	  2141      "00111110" // /* MW 7 */
	  2142      "00000000" // /* MW 6 */
	  2143      "10010001" // /* MW 5 */
	  2144      "00010101" // /* MW 4 */
	  2145      "11101001" // /* MW 3 */
	  2146      "11111110" // /* MW 2 */
	  2147      "01111000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2148      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.hi, [sp, #-608];NOP;                                 VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2149      "00010000" // /* MW 15 */
	  2150      "00000000" // /* MW 14 */
	  2151      "01000000" // /* MW 13 */
	  2152      "11011000" // /* MW 12 */
	  2153      "00000000" // /* MW 11 */
	  2154      "11011010" // /* MW 10 */
	  2155      "00111111" // /* MW 9 */
	  2156      "00001101" // /* MW 8 */
	  2157      "00000000" // /* MW 7 */
	  2158      "00000000" // /* MW 6 */
	  2159      "00010000" // /* MW 5 */
	  2160      "00000000" // /* MW 4 */
	  2161      "00000000" // /* MW 3 */
	  2162      "00000000" // /* MW 2 */
	  2163      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2164      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 amh3.lo, [sp, #-640];NOP;                                 VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2165      "00010000" // /* MW 15 */
	  2166      "00100000" // /* MW 14 */
	  2167      "01000000" // /* MW 13 */
	  2168      "11011000" // /* MW 12 */
	  2169      "00000000" // /* MW 11 */
	  2170      "11011000" // /* MW 10 */
	  2171      "01111111" // /* MW 9 */
	  2172      "00001100" // /* MW 8 */
	  2173      "00000000" // /* MW 7 */
	  2174      "00000000" // /* MW 6 */
	  2175      "00010000" // /* MW 5 */
	  2176      "00000000" // /* MW 4 */
	  2177      "00000000" // /* MW 3 */
	  2178      "00000000" // /* MW 2 */
	  2179      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2180      "10011000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 amh3.hi, [sp, #-672];NOP;                                 VMAC.48 bm2, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2181      "00010000" // /* MW 15 */
	  2182      "00000000" // /* MW 14 */
	  2183      "01000000" // /* MW 13 */
	  2184      "11011000" // /* MW 12 */
	  2185      "00000000" // /* MW 11 */
	  2186      "11010110" // /* MW 10 */
	  2187      "01111111" // /* MW 9 */
	  2188      "00001101" // /* MW 8 */
	  2189      "00000000" // /* MW 7 */
	  2190      "00000000" // /* MW 6 */
	  2191      "00010000" // /* MW 5 */
	  2192      "00000000" // /* MW 4 */
	  2193      "00000000" // /* MW 3 */
	  2194      "00000000" // /* MW 2 */
	  2195      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2196      "01000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm1, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  2197      "00001001" // /* MW 7 */
	  2198      "00000001" // /* MW 6 */
	  2199      "00000010" // /* MW 5 */
	  2200      "10000100" // /* MW 4 */
	  2201      "00000101" // /* MW 3 */
	  2202      "00000000" // /* MW 2 */
	  2203      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2204      "10000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  2205      "00001000" // /* MW 7 */
	  2206      "00000001" // /* MW 6 */
	  2207      "00000000" // /* MW 5 */
	  2208      "10000100" // /* MW 4 */
	  2209      "00000101" // /* MW 3 */
	  2210      "00000000" // /* MW 2 */
	  2211      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2212      "01000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  2213      "00001000" // /* MW 7 */
	  2214      "00000001" // /* MW 6 */
	  2215      "00000010" // /* MW 5 */
	  2216      "10000100" // /* MW 4 */
	  2217      "00000101" // /* MW 3 */
	  2218      "00000000" // /* MW 2 */
	  2219      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2220      "11000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm3, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  2221      "00001010" // /* MW 7 */
	  2222      "00000001" // /* MW 6 */
	  2223      "00000000" // /* MW 5 */
	  2224      "10000100" // /* MW 4 */
	  2225      "00000101" // /* MW 3 */
	  2226      "00000000" // /* MW 2 */
	  2227      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2228      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml2.lo, [sp, #-448];NOP /* MW 8 */
	  2229      "00100111" // /* MW 7 */
	  2230      "11001000" // /* MW 6 */
	  2231      "00001011" // /* MW 5 */
	  2232      "11000111" // /* MW 4 */
	  2233      "00000000" // /* MW 3 */
	  2234      "00000000" // /* MW 2 */
	  2235      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2236      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-224];   NOP /* MW 8 */
	  2237      "00100111" // /* MW 7 */
	  2238      "11100100" // /* MW 6 */
	  2239      "10100011" // /* MW 5 */
	  2240      "11000111" // /* MW 4 */
	  2241      "00000000" // /* MW 3 */
	  2242      "00000000" // /* MW 2 */
	  2243      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2244      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 amh2.lo, [sp, #-512];NOP /* MW 8 */
	  2245      "00100111" // /* MW 7 */
	  2246      "11000000" // /* MW 6 */
	  2247      "00011011" // /* MW 5 */
	  2248      "11000111" // /* MW 4 */
	  2249      "00000000" // /* MW 3 */
	  2250      "00000000" // /* MW 2 */
	  2251      "10000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 908 31 first
.nohwbrkpt
.noswbrkpt
	  2252      "11110111" // 	                                        VMOVS.48.SRSB vcl0, bm2, s1;                                VLDA.SPIL wc0, [sp, #-128];   NOP /* MW 8 */
	  2253      "00100111" // /* MW 7 */
	  2254      "11110000" // /* MW 6 */
	  2255      "10100011" // /* MW 5 */
	  2256      "11000111" // /* MW 4 */
	  2257      "01000000" // /* MW 3 */
	  2258      "01001010" // /* MW 2 */
	  2259      "10000011" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63
.src_ref 5 "vector.hpp" 908 31
.nohwbrkpt
.noswbrkpt
	  2260      "00111111" // 	NOP;                NOP;                VMOVS.48.SRSB vch0, bm1, s1;                                VLDA.SPIL.48 aml2.hi, [sp, #-480];NOP /* MW 12 */
	  2261      "01000010" // /* MW 11 */
	  2262      "10111100" // /* MW 10 */
	  2263      "01110100" // /* MW 9 */
	  2264      "00001100" // /* MW 8 */
	  2265      "01001001" // /* MW 7 */
	  2266      "01100101" // /* MW 6 */
	  2267      "00010000" // /* MW 5 */
	  2268      "00000000" // /* MW 4 */
	  2269      "00000000" // /* MW 3 */
	  2270      "00000000" // /* MW 2 */
	  2271      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2272      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 amh2.hi, [sp, #-544];NOP;                                NOP /* MW 16 */
	  2273      "00000000" // /* MW 15 */
	  2274      "00000000" // /* MW 14 */
	  2275      "00000000" // /* MW 13 */
	  2276      "10000000" // /* MW 12 */
	  2277      "11000010" // /* MW 11 */
	  2278      "10111011" // /* MW 10 */
	  2279      "01110101" // /* MW 9 */
	  2280      "00001100" // /* MW 8 */
	  2281      "00000000" // /* MW 7 */
	  2282      "00000000" // /* MW 6 */
	  2283      "00010000" // /* MW 5 */
	  2284      "00000000" // /* MW 4 */
	  2285      "00000000" // /* MW 3 */
	  2286      "00000000" // /* MW 2 */
	  2287      "00000000" // /* MW 1 */
.label ZLE_F_Z10filter_macP12input_windowIaEP13output_windowIaE_1376
.end_of_loop
.nohwbrkpt
.noswbrkpt
	  2288      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 amh3.hi, [sp, #-320];NOP;                                 NOP /* MW 16 */
	  2289      "00000000" // /* MW 15 */
	  2290      "00000000" // /* MW 14 */
	  2291      "00000000" // /* MW 13 */
	  2292      "10000000" // /* MW 12 */
	  2293      "00000000" // /* MW 11 */
	  2294      "11101100" // /* MW 10 */
	  2295      "01111111" // /* MW 9 */
	  2296      "00001101" // /* MW 8 */
	  2297      "00000000" // /* MW 7 */
	  2298      "00000000" // /* MW 6 */
	  2299      "00010000" // /* MW 5 */
	  2300      "00000000" // /* MW 4 */
	  2301      "00000000" // /* MW 3 */
	  2302      "00000000" // /* MW 2 */
	  2303      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 735 2 first
.src_ref 2 "window.h" 1021 2 first
.nohwbrkpt
.noswbrkpt
.loop_nesting 0
	  2304      "00000011" // 	NOP;                                    VST wc0, [p1], m0, cyc0 /* MW 4 */
	  2305      "00001000" // /* MW 3 */
	  2306      "00000000" // /* MW 2 */
	  2307      "10111011" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  2308      "10011000" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;            NOP;                          VLDA.SPIL.48 aml0.lo, [sp, #-576];NOP;                                VMAC.48 bm2, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2309      "00010000" // /* MW 15 */
	  2310      "00000000" // /* MW 14 */
	  2311      "01000000" // /* MW 13 */
	  2312      "11011000" // /* MW 12 */
	  2313      "10000010" // /* MW 11 */
	  2314      "00111011" // /* MW 10 */
	  2315      "01110000" // /* MW 9 */
	  2316      "00001100" // /* MW 8 */
	  2317      "00000000" // /* MW 7 */
	  2318      "00000000" // /* MW 6 */
	  2319      "01110000" // /* MW 5 */
	  2320      "10001000" // /* MW 4 */
	  2321      "00001110" // /* MW 3 */
	  2322      "00000000" // /* MW 2 */
	  2323      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2324      "10010100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wc0, [sp, #-256];   NOP;                                    VMAC.48 bm1, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2325      "00010000" // /* MW 15 */
	  2326      "00100000" // /* MW 14 */
	  2327      "01000000" // /* MW 13 */
	  2328      "11011000" // /* MW 12 */
	  2329      "00000010" // /* MW 11 */
	  2330      "00111110" // /* MW 10 */
	  2331      "01111010" // /* MW 9 */
	  2332      "00001100" // /* MW 8 */
	  2333      "00000000" // /* MW 7 */
	  2334      "00000000" // /* MW 6 */
	  2335      "00010000" // /* MW 5 */
	  2336      "00000000" // /* MW 4 */
	  2337      "00000000" // /* MW 3 */
	  2338      "00000000" // /* MW 2 */
	  2339      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  2340      "00111111" // 	NOP;                VLDB.UNPACK.s8 xa, [p3], m0, cyc1;NOP;                                          VLDA.SPIL wc1, [sp, #-224];   NOP /* MW 12 */
	  2341      "01000010" // /* MW 11 */
	  2342      "10111110" // /* MW 10 */
	  2343      "01111010" // /* MW 9 */
	  2344      "00001100" // /* MW 8 */
	  2345      "00000000" // /* MW 7 */
	  2346      "00000000" // /* MW 6 */
	  2347      "01110000" // /* MW 5 */
	  2348      "10001000" // /* MW 4 */
	  2349      "00000010" // /* MW 3 */
	  2350      "00000000" // /* MW 2 */
	  2351      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  2352      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 amh0.lo, [sp, #-640];NOP;                                VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2353      "00010000" // /* MW 15 */
	  2354      "00000000" // /* MW 14 */
	  2355      "01000000" // /* MW 13 */
	  2356      "11011000" // /* MW 12 */
	  2357      "00000010" // /* MW 11 */
	  2358      "00111011" // /* MW 10 */
	  2359      "01110001" // /* MW 9 */
	  2360      "00001100" // /* MW 8 */
	  2361      "00000000" // /* MW 7 */
	  2362      "00000000" // /* MW 6 */
	  2363      "00010000" // /* MW 5 */
	  2364      "00000000" // /* MW 4 */
	  2365      "00000000" // /* MW 3 */
	  2366      "00000000" // /* MW 2 */
	  2367      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2368      "10000100" // 	VLDA.48 aml0.hi, [sp, #-608];NOP;       NOP;                          NOP;                          VMOV aml1, aml0;              NOP;                                    VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2369      "00010000" // /* MW 15 */
	  2370      "00100000" // /* MW 14 */
	  2371      "01000000" // /* MW 13 */
	  2372      "11011000" // /* MW 12 */
	  2373      "00000000" // /* MW 11 */
	  2374      "01000000" // /* MW 10 */
	  2375      "00000000" // /* MW 9 */
	  2376      "01100001" // /* MW 8 */
	  2377      "00000000" // /* MW 7 */
	  2378      "00000000" // /* MW 6 */
	  2379      "00010000" // /* MW 5 */
	  2380      "00000000" // /* MW 4 */
	  2381      "01000000" // /* MW 3 */
	  2382      "11111011" // /* MW 2 */
	  2383      "11110000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2384      "01110111" // 	VLDA.48 amh0.hi, [sp, #-672];                                         NOP;                          VMOV amh1, amh0 /* MW 8 */
	  2385      "00000000" // /* MW 7 */
	  2386      "00000000" // /* MW 6 */
	  2387      "01000000" // /* MW 5 */
	  2388      "01000001" // /* MW 4 */
	  2389      "11100001" // /* MW 3 */
	  2390      "11111010" // /* MW 2 */
	  2391      "11110100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2392      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 aml3.lo, [sp, #-416];NOP /* MW 8 */
	  2393      "00000111" // /* MW 7 */
	  2394      "01100000" // /* MW 6 */
	  2395      "11111110" // /* MW 5 */
	  2396      "11000011" // /* MW 4 */
	  2397      "00000000" // /* MW 3 */
	  2398      "00000000" // /* MW 2 */
	  2399      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2400      "11110111" // 	                                        NOP;                                                        VST.SPIL.48 amh3.lo, [sp, #-352];NOP /* MW 8 */
	  2401      "00000111" // /* MW 7 */
	  2402      "10100000" // /* MW 6 */
	  2403      "11111110" // /* MW 5 */
	  2404      "11000111" // /* MW 4 */
	  2405      "00000000" // /* MW 3 */
	  2406      "00000000" // /* MW 2 */
	  2407      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2408      "10100000" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL.48 aml3.hi, [sp, #-384];NOP;                                 VMAC.48 bm0, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  2409      "00010000" // /* MW 15 */
	  2410      "00100000" // /* MW 14 */
	  2411      "01000000" // /* MW 13 */
	  2412      "11011000" // /* MW 12 */
	  2413      "00000000" // /* MW 11 */
	  2414      "11101000" // /* MW 10 */
	  2415      "00111111" // /* MW 9 */
	  2416      "00001101" // /* MW 8 */
	  2417      "00000000" // /* MW 7 */
	  2418      "00000000" // /* MW 6 */
	  2419      "00010000" // /* MW 5 */
	  2420      "00000000" // /* MW 4 */
	  2421      "00000000" // /* MW 3 */
	  2422      "00000000" // /* MW 2 */
	  2423      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  2424      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 aml3.lo, [sp, #-416];NOP;                                VMAC.48 bm0, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2425      "00010000" // /* MW 15 */
	  2426      "00100000" // /* MW 14 */
	  2427      "01000000" // /* MW 13 */
	  2428      "11011000" // /* MW 12 */
	  2429      "11000010" // /* MW 11 */
	  2430      "11111100" // /* MW 10 */
	  2431      "01110000" // /* MW 9 */
	  2432      "00001100" // /* MW 8 */
	  2433      "00000000" // /* MW 7 */
	  2434      "00000000" // /* MW 6 */
	  2435      "00010000" // /* MW 5 */
	  2436      "00000000" // /* MW 4 */
	  2437      "00000000" // /* MW 3 */
	  2438      "00000000" // /* MW 2 */
	  2439      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  2440      "10100000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL.48 amh3.lo, [sp, #-352];NOP;                                VMAC.48 bm0, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  2441      "00010000" // /* MW 15 */
	  2442      "00100000" // /* MW 14 */
	  2443      "01000000" // /* MW 13 */
	  2444      "11011000" // /* MW 12 */
	  2445      "01000010" // /* MW 11 */
	  2446      "11111101" // /* MW 10 */
	  2447      "01110001" // /* MW 9 */
	  2448      "00001100" // /* MW 8 */
	  2449      "00000000" // /* MW 7 */
	  2450      "00000000" // /* MW 6 */
	  2451      "00010000" // /* MW 5 */
	  2452      "00000000" // /* MW 4 */
	  2453      "00000000" // /* MW 3 */
	  2454      "00000000" // /* MW 2 */
	  2455      "00000000" // /* MW 1 */
	  2456      "11110111" // 	                                        NOP;                                                        VLDA.SPIL.48 aml3.hi, [sp, #-384];NOP /* MW 8 */
	  2457      "00100111" // /* MW 7 */
	  2458      "11010000" // /* MW 6 */
	  2459      "01001111" // /* MW 5 */
	  2460      "11000111" // /* MW 4 */
	  2461      "00000000" // /* MW 3 */
	  2462      "00000000" // /* MW 2 */
	  2463      "10000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "vector.hpp" 1111 23 first
.noswbrkpt
	  2464      "00111111" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;                                          VLDA.SPIL.48 amh3.hi, [sp, #-320];NOP /* MW 12 */
	  2465      "10000010" // /* MW 11 */
	  2466      "11111101" // /* MW 10 */
	  2467      "01110101" // /* MW 9 */
	  2468      "00001100" // /* MW 8 */
	  2469      "00000000" // /* MW 7 */
	  2470      "00000000" // /* MW 6 */
	  2471      "01110000" // /* MW 5 */
	  2472      "10001000" // /* MW 4 */
	  2473      "00001110" // /* MW 3 */
	  2474      "00000000" // /* MW 2 */
	  2475      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2476      "11110111" // 	                                        NOP;                                                        VLDA.SPIL wc0, [sp, #-128];   NOP /* MW 8 */
	  2477      "00100111" // /* MW 7 */
	  2478      "11110000" // /* MW 6 */
	  2479      "10100011" // /* MW 5 */
	  2480      "11000111" // /* MW 4 */
	  2481      "00000000" // /* MW 3 */
	  2482      "00000000" // /* MW 2 */
	  2483      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2484      "00000001" // 	NOP /* MW 2 */
	  2485      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  2486      "10011100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wc0, [sp, #-64];    NOP;                                    VMAC.48 bm3, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2487      "00010000" // /* MW 15 */
	  2488      "00000000" // /* MW 14 */
	  2489      "01000000" // /* MW 13 */
	  2490      "11011000" // /* MW 12 */
	  2491      "10000010" // /* MW 11 */
	  2492      "00111111" // /* MW 10 */
	  2493      "01111010" // /* MW 9 */
	  2494      "00001100" // /* MW 8 */
	  2495      "00000000" // /* MW 7 */
	  2496      "00000000" // /* MW 6 */
	  2497      "00010000" // /* MW 5 */
	  2498      "00000000" // /* MW 4 */
	  2499      "00000000" // /* MW 3 */
	  2500      "00000000" // /* MW 2 */
	  2501      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2502      "01101111" // 	NOP;                                    NOP;                                                        VMOV wc1, wr2;                NOP;                                    VMAC.48 bm3, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 12 */
	  2503      "10000101" // /* MW 11 */
	  2504      "00000000" // /* MW 10 */
	  2505      "00000000" // /* MW 9 */
	  2506      "11000010" // /* MW 8 */
	  2507      "00111110" // /* MW 7 */
	  2508      "00000000" // /* MW 6 */
	  2509      "10110001" // /* MW 5 */
	  2510      "00010101" // /* MW 4 */
	  2511      "00001001" // /* MW 3 */
	  2512      "00000000" // /* MW 2 */
	  2513      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  2514      "11001111" // 	VLDA.UNPACK.s8 xa, [p3], m0, cyc1;      NOP;                          NOP;                                                        NOP;                                    VMAC.48 bm2, yd.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 12 */
	  2515      "10000101" // /* MW 11 */
	  2516      "00000000" // /* MW 10 */
	  2517      "00000000" // /* MW 9 */
	  2518      "11000010" // /* MW 8 */
	  2519      "00000110" // /* MW 7 */
	  2520      "00000000" // /* MW 6 */
	  2521      "00000000" // /* MW 5 */
	  2522      "00000000" // /* MW 4 */
	  2523      "11100000" // /* MW 3 */
	  2524      "00010000" // /* MW 2 */
	  2525      "00000101" // /* MW 1 */
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "vector.hpp" 1111 23
.nohwbrkpt
.noswbrkpt
	  2526      "10110100" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;            NOP;                          NOP;                          NOP;                                    VMAC.48 bm1, yd.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  2527      "00010000" // /* MW 15 */
	  2528      "00100000" // /* MW 14 */
	  2529      "01000000" // /* MW 13 */
	  2530      "11011000" // /* MW 12 */
	  2531      "00000000" // /* MW 11 */
	  2532      "00000000" // /* MW 10 */
	  2533      "00000000" // /* MW 9 */
	  2534      "01000000" // /* MW 8 */
	  2535      "00000000" // /* MW 7 */
	  2536      "00000000" // /* MW 6 */
	  2537      "01110000" // /* MW 5 */
	  2538      "10001000" // /* MW 4 */
	  2539      "00001110" // /* MW 3 */
	  2540      "00000000" // /* MW 2 */
	  2541      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2542      "11110111" // 	                                        NOP;                                                        VST.SPIL wd0, [sp, #-32];     NOP /* MW 8 */
	  2543      "00000111" // /* MW 7 */
	  2544      "11100000" // /* MW 6 */
	  2545      "11111111" // /* MW 5 */
	  2546      "11101100" // /* MW 4 */
	  2547      "00000000" // /* MW 3 */
	  2548      "00000000" // /* MW 2 */
	  2549      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2550      "10011100" // 	NOP;                NOP;                NOP;                          NOP;                          VST.SPIL wd1, [sp, #-128];    NOP;                                    VMAC.48 bm3, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2551      "00010000" // /* MW 15 */
	  2552      "00000000" // /* MW 14 */
	  2553      "01000000" // /* MW 13 */
	  2554      "11011000" // /* MW 12 */
	  2555      "00000000" // /* MW 11 */
	  2556      "11111000" // /* MW 10 */
	  2557      "11101111" // /* MW 9 */
	  2558      "00001110" // /* MW 8 */
	  2559      "00000000" // /* MW 7 */
	  2560      "00000000" // /* MW 6 */
	  2561      "00010000" // /* MW 5 */
	  2562      "00000000" // /* MW 4 */
	  2563      "00000000" // /* MW 3 */
	  2564      "00000000" // /* MW 2 */
	  2565      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2566      "10010000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wc1, [sp, #-96];    NOP;                                    VMAC.48 bm0, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2567      "00010000" // /* MW 15 */
	  2568      "00100000" // /* MW 14 */
	  2569      "01000000" // /* MW 13 */
	  2570      "11011000" // /* MW 12 */
	  2571      "01000010" // /* MW 11 */
	  2572      "10111111" // /* MW 10 */
	  2573      "01111010" // /* MW 9 */
	  2574      "00001100" // /* MW 8 */
	  2575      "00000000" // /* MW 7 */
	  2576      "00000000" // /* MW 6 */
	  2577      "00010000" // /* MW 5 */
	  2578      "00000000" // /* MW 4 */
	  2579      "00000000" // /* MW 3 */
	  2580      "00000000" // /* MW 2 */
	  2581      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2582      "10001000" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd0, [sp, #-32];    NOP;                                    VMAC.48 bm2, ya.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2583      "00010000" // /* MW 15 */
	  2584      "00000000" // /* MW 14 */
	  2585      "01000000" // /* MW 13 */
	  2586      "11011000" // /* MW 12 */
	  2587      "11000010" // /* MW 11 */
	  2588      "00111111" // /* MW 10 */
	  2589      "01111011" // /* MW 9 */
	  2590      "00001100" // /* MW 8 */
	  2591      "00000000" // /* MW 7 */
	  2592      "00000000" // /* MW 6 */
	  2593      "00010000" // /* MW 5 */
	  2594      "00000000" // /* MW 4 */
	  2595      "00000000" // /* MW 3 */
	  2596      "00000000" // /* MW 2 */
	  2597      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2598      "10000100" // 	NOP;                NOP;                NOP;                          NOP;                          VLDA.SPIL wd1, [sp, #-128];   NOP;                                    VMAC.48 bm1, ya.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 16 */
	  2599      "00010000" // /* MW 15 */
	  2600      "00100000" // /* MW 14 */
	  2601      "01000000" // /* MW 13 */
	  2602      "11011000" // /* MW 12 */
	  2603      "00000010" // /* MW 11 */
	  2604      "10111111" // /* MW 10 */
	  2605      "01111011" // /* MW 9 */
	  2606      "00001100" // /* MW 8 */
	  2607      "00000000" // /* MW 7 */
	  2608      "00000000" // /* MW 6 */
	  2609      "00010000" // /* MW 5 */
	  2610      "00000000" // /* MW 4 */
	  2611      "00000000" // /* MW 3 */
	  2612      "00000000" // /* MW 2 */
	  2613      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2614      "00000001" // 	NOP /* MW 2 */
	  2615      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 1021 2 first
.src_ref 2 "window.h" 1021 2 first
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "vector.hpp" 1111 23 first
.nohwbrkpt
.noswbrkpt
	  2616      "10111100" // 	NOP;                VLDB.UNPACK.s8 xd, [p3], m0, cyc1;NOP;            NOP;                          NOP;                          NOP;                                    VMAC.48 bm3, yd.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 16 */
	  2617      "00010000" // /* MW 15 */
	  2618      "00000000" // /* MW 14 */
	  2619      "01000000" // /* MW 13 */
	  2620      "11011000" // /* MW 12 */
	  2621      "00000000" // /* MW 11 */
	  2622      "00000000" // /* MW 10 */
	  2623      "00000000" // /* MW 9 */
	  2624      "01000000" // /* MW 8 */
	  2625      "00000000" // /* MW 7 */
	  2626      "00000000" // /* MW 6 */
	  2627      "01110000" // /* MW 5 */
	  2628      "10001000" // /* MW 4 */
	  2629      "00001110" // /* MW 3 */
	  2630      "00000000" // /* MW 2 */
	  2631      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118 first
.src_ref 5 "mul_acc48.hpp" 130 118 first
.nohwbrkpt
.noswbrkpt
	  2632      "00000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm0, yd.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  2633      "00001011" // /* MW 7 */
	  2634      "00000001" // /* MW 6 */
	  2635      "00000010" // /* MW 5 */
	  2636      "10000100" // /* MW 4 */
	  2637      "00000101" // /* MW 3 */
	  2638      "00000000" // /* MW 2 */
	  2639      "10000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2640      "00000001" // 	NOP /* MW 2 */
	  2641      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2642      "00000001" // 	NOP /* MW 2 */
	  2643      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2644      "00000001" // 	NOP /* MW 2 */
	  2645      "00000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2646      "10000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm2, yd.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  2647      "00001011" // /* MW 7 */
	  2648      "00000001" // /* MW 6 */
	  2649      "00000000" // /* MW 5 */
	  2650      "10000100" // /* MW 4 */
	  2651      "00000101" // /* MW 3 */
	  2652      "00000000" // /* MW 2 */
	  2653      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
.nohwbrkpt
.noswbrkpt
	  2654      "01000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm1, yd.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  2655      "00001011" // /* MW 7 */
	  2656      "00000001" // /* MW 6 */
	  2657      "00000010" // /* MW 5 */
	  2658      "10000100" // /* MW 4 */
	  2659      "00000101" // /* MW 3 */
	  2660      "00000000" // /* MW 2 */
	  2661      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  2662      "11000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm3, yd.s16, r0, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  2663      "00001001" // /* MW 7 */
	  2664      "00000001" // /* MW 6 */
	  2665      "00000000" // /* MW 5 */
	  2666      "10000100" // /* MW 4 */
	  2667      "00000101" // /* MW 3 */
	  2668      "00000000" // /* MW 2 */
	  2669      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  2670      "11000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm3, ya.s16, r0, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  2671      "00001010" // /* MW 7 */
	  2672      "00000001" // /* MW 6 */
	  2673      "00000000" // /* MW 5 */
	  2674      "10000100" // /* MW 4 */
	  2675      "00000101" // /* MW 3 */
	  2676      "00000000" // /* MW 2 */
	  2677      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  2678      "00000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm0, yd.s16, r8, c1, r0, wc0.s32, #0, c0, c2 /* MW 8 */
	  2679      "00001001" // /* MW 7 */
	  2680      "00000001" // /* MW 6 */
	  2681      "00000010" // /* MW 5 */
	  2682      "10000100" // /* MW 4 */
	  2683      "00000101" // /* MW 3 */
	  2684      "00000000" // /* MW 2 */
	  2685      "10000000" // /* MW 1 */
.src_ref 5 "mul_acc48.hpp" 130 118
.src_ref 5 "mul_acc48.hpp" 130 118
	  2686      "00000111" // 	NOP;                                    NOP;                                                                                                                              VMAC.48 bm0, ya.s16, r8, c1, r0, wc1.s32, #0, c0, c2 /* MW 8 */
	  2687      "00001010" // /* MW 7 */
	  2688      "00000001" // /* MW 6 */
	  2689      "00000010" // /* MW 5 */
	  2690      "10000100" // /* MW 4 */
	  2691      "00000101" // /* MW 3 */
	  2692      "00000000" // /* MW 2 */
	  2693      "10000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63 first
.src_ref 5 "vector.hpp" 908 31 first
	  2694      "00000011" // 	NOP;                                    VMOVS.48.SRSB vcl0, bm2, s1 /* MW 4 */
	  2695      "01000000" // /* MW 3 */
	  2696      "01001010" // /* MW 2 */
	  2697      "10000011" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63
.src_ref 5 "vector.hpp" 908 31
	  2698      "00000011" // 	NOP;                                    VMOVS.48.SRSB vch0, bm1, s1 /* MW 4 */
	  2699      "01001000" // /* MW 3 */
	  2700      "00101010" // /* MW 2 */
	  2701      "10000011" // /* MW 1 */
	  2702      "00000001" // 	NOP /* MW 2 */
	  2703      "00000000" // /* MW 1 */
.src_ref 5 "accum.hpp" 1228 63
.src_ref 5 "vector.hpp" 908 31
	  2704      "00000011" // 	NOP;                                    VMOVS.48.SRSB vrl0, bm3, s1 /* MW 4 */
	  2705      "00000000" // /* MW 3 */
	  2706      "01101010" // /* MW 2 */
	  2707      "10000011" // /* MW 1 */
	  2708      "00000001" // 	NOP /* MW 2 */
	  2709      "00000000" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 80 first
.src_ref 5 "accum.hpp" 1228 63
.src_ref 5 "vector.hpp" 908 31
	  2710      "10110111" // 	NOP;                                    VMOVS.48.SRSB vrh0, bm0, s1;  RET lr /* MW 8 */
	  2711      "10100000" // /* MW 7 */
	  2712      "00110000" // /* MW 6 */
	  2713      "00000000" // /* MW 5 */
	  2714      "10000000" // /* MW 4 */
	  2715      "00000001" // /* MW 3 */
	  2716      "00000000" // /* MW 2 */
	  2717      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2718      "00000001" // 	NOP /* MW 2 */
	  2719      "00000000" // /* MW 1 */
.src_ref 2 "window.h" 735 2
.src_ref 2 "window.h" 735 2 first
.src_ref 2 "window.h" 1021 2
.src_ref 2 "window.h" 1021 2 first
.delay_slot
	  2720      "10110111" // 	NOP;                                    VST wc0, [p1], m0, cyc0;      MOV.s12 cs2, #-28 /* MW 8 */
	  2721      "00000000" // /* MW 7 */
	  2722      "10110000" // /* MW 6 */
	  2723      "01010011" // /* MW 5 */
	  2724      "11001000" // /* MW 4 */
	  2725      "00111111" // /* MW 3 */
	  2726      "00000000" // /* MW 2 */
	  2727      "00000000" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 80
.src_ref 2 "window.h" 735 2
.src_ref 2 "window.h" 1021 2
.delay_slot
	  2728      "10110111" // 	NOP;                                    VST wr0, [p1], m0, cyc0;      MOV.s12 m2, #-672 /* MW 8 */
	  2729      "00000000" // /* MW 7 */
	  2730      "10100000" // /* MW 6 */
	  2731      "00010011" // /* MW 5 */
	  2732      "11000001" // /* MW 4 */
	  2733      "00111010" // /* MW 3 */
	  2734      "00000000" // /* MW 2 */
	  2735      "00000000" // /* MW 1 */
.src_ref 4 "filter_mac.cpp" 80 first
.src_ref 2 "window.h" 1021 2
.delay_slot
	  2736      "00110111" // 	PADDA [sp], m2;                         ST p3, [p0, cs2];             NOP /* MW 8 */
	  2737      "10001000" // /* MW 7 */
	  2738      "11010111" // /* MW 6 */
	  2739      "00000010" // /* MW 5 */
	  2740      "00000000" // /* MW 4 */
	  2741      "00000000" // /* MW 3 */
	  2742      "10010100" // /* MW 2 */
	  2743      "00001000" // /* MW 1 */
.src_ref 2 "window.h" 735 2 first
.delay_slot
	  2744      "00000011" // 	NOP;                                    ST p1, [p2, cs2] /* MW 4 */
	  2745      "10010000" // /* MW 3 */
	  2746      "00111000" // /* MW 2 */
.label _Z10filter_macP12input_windowIaEP13output_windowIaE__end
.label __Z10filter_macP12input_windowIaEP13output_windowIaE___func_end0
	  2747      "10101101" // /* MW 1 */
.label _fini
.function _fini _fini
.src_ref 0 "me_basic.c" 73 4 first
.src_ref 0 "me_basic.c" 73 9
.function_start
	  2752      "01110111" // 	NOP;                                                                  MOV.s12 m0, #32;              MOV r5, r11 /* MW 8 */
	  2753      "01000000" // /* MW 7 */
	  2754      "00010000" // /* MW 6 */
	  2755      "01001000" // /* MW 5 */
	  2756      "10111101" // /* MW 4 */
	  2757      "00000111" // /* MW 3 */
	  2758      "00000000" // /* MW 2 */
	  2759      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 73 9
	  2760      "00111111" // 	PADDA [sp], m0;     NOP;                NOP;                                                        J #2864;                      NOP /* MW 12 */
	  2761      "00110000" // /* MW 11 */
	  2762      "00001011" // /* MW 10 */
	  2763      "00000000" // /* MW 9 */
	  2764      "00001010" // /* MW 8 */
	  2765      "00000000" // /* MW 7 */
	  2766      "00000000" // /* MW 6 */
	  2767      "00010000" // /* MW 5 */
	  2768      "00000000" // /* MW 4 */
	  2769      "00000000" // /* MW 3 */
	  2770      "10010000" // /* MW 2 */
	  2771      "00001000" // /* MW 1 */
.delay_slot
	  2772      "00000011" // 	NOP;                                                                                                MOV r0, r4 /* MW 4 */
	  2773      "00011000" // /* MW 3 */
	  2774      "10011000" // /* MW 2 */
	  2775      "00001110" // /* MW 1 */
.delay_slot
	  2776      "11110111" // 	                                        ST lr, [sp, #-16];            NOP;                          MOV p0, p7 /* MW 8 */
	  2777      "11010000" // /* MW 7 */
	  2778      "00110111" // /* MW 6 */
	  2779      "00000000" // /* MW 5 */
	  2780      "00000000" // /* MW 4 */
	  2781      "11000000" // /* MW 3 */
	  2782      "00111111" // /* MW 2 */
	  2783      "01010010" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 41
.delay_slot
	  2784      "11110111" // 	                                        ST p0, [sp, #-12];                                          MOV.u20 r4, #0;               NOP /* MW 8 */
	  2785      "00000111" // /* MW 7 */
	  2786      "00000000" // /* MW 6 */
	  2787      "11010000" // /* MW 5 */
	  2788      "01000000" // /* MW 4 */
	  2789      "11101000" // /* MW 3 */
	  2790      "00011111" // /* MW 2 */
	  2791      "10101101" // /* MW 1 */
.src_ref 0 "me_basic.c" 76 13
.delay_slot
	  2792      "11110111" // 	                                        ST r0, [sp, #-4];                                           MOV.u20 p7, #0;               NOP /* MW 8 */
	  2793      "00000111" // /* MW 7 */
	  2794      "00000000" // /* MW 6 */
	  2795      "10111100" // /* MW 5 */
	  2796      "01000000" // /* MW 4 */
	  2797      "11111000" // /* MW 3 */
	  2798      "00011111" // /* MW 2 */
	  2799      "10101110" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 41
.delay_slot
	  2800      "00000000" // 	NOP;                NOP;                ST r5, [sp, #-8];             NOP;                          MOV.u20 r11, #0;              NOP;                                    NOP /* MW 16 */
	  2801      "00000000" // /* MW 15 */
	  2802      "00000000" // /* MW 14 */
	  2803      "00000000" // /* MW 13 */
	  2804      "10000000" // /* MW 12 */
	  2805      "00000000" // /* MW 11 */
	  2806      "11000000" // /* MW 10 */
	  2807      "00001110" // /* MW 9 */
	  2808      "00000100" // /* MW 8 */
	  2809      "11111110" // /* MW 7 */
	  2810      "11010111" // /* MW 6 */
	  2811      "00010101" // /* MW 5 */
	  2812      "00000000" // /* MW 4 */
	  2813      "00000000" // /* MW 3 */
	  2814      "00000000" // /* MW 2 */
	  2815      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.src_ref 0 "me_basic.c" 76 13 first
.loop_nesting 1
	  2816      "00110111" // 	LDA cb0, [p7], #4;                      NOP;                          NOP /* MW 8 */
	  2817      "00000000" // /* MW 7 */
	  2818      "00000000" // /* MW 6 */
	  2819      "00000000" // /* MW 5 */
	  2820      "00000000" // /* MW 4 */
	  2821      "11000000" // /* MW 3 */
	  2822      "10100011" // /* MW 2 */
	  2823      "01000000" // /* MW 1 */
	  2824      "00000001" // 	NOP /* MW 2 */
	  2825      "00000000" // /* MW 1 */
	  2826      "00000001" // 	NOP /* MW 2 */
	  2827      "00000000" // /* MW 1 */
	  2828      "00000001" // 	NOP /* MW 2 */
	  2829      "00000000" // /* MW 1 */
	  2830      "00000001" // 	NOP /* MW 2 */
	  2831      "00000000" // /* MW 1 */
	  2832      "00000001" // 	NOP /* MW 2 */
	  2833      "00000000" // /* MW 1 */
	  2834      "00000001" // 	NOP /* MW 2 */
	  2835      "00000000" // /* MW 1 */
	  2836      "00000001" // 	NOP /* MW 2 */
	  2837      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 76 16
.no_stack_arguments
	  2838      "01000001" // 	JAL cb0 /* MW 2 */
	  2839      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 41
.delay_slot
	  2840      "10110101" // 	MOV r11, p7 /* MW 2 */
	  2841      "10111111" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2842      "00000001" // 	NOP /* MW 2 */
	  2843      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2844      "00000001" // 	NOP /* MW 2 */
	  2845      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2846      "00000001" // 	NOP /* MW 2 */
	  2847      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2848      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  2849      "00000000" // /* MW 15 */
	  2850      "00000000" // /* MW 14 */
	  2851      "00000000" // /* MW 13 */
	  2852      "00000000" // /* MW 12 */
	  2853      "00000000" // /* MW 11 */
	  2854      "00000000" // /* MW 10 */
	  2855      "00000000" // /* MW 9 */
	  2856      "00000000" // /* MW 8 */
	  2857      "00000000" // /* MW 7 */
	  2858      "00000000" // /* MW 6 */
	  2859      "00000000" // /* MW 5 */
	  2860      "00000000" // /* MW 4 */
	  2861      "00000000" // /* MW 3 */
	  2862      "00000000" // /* MW 2 */
	  2863      "00000000" // /* MW 1 */
.label __ll1__fini
.src_ref 0 "me_basic.c" 75 41 first
.return_address
	  2864      "00000011" // 	NOP;                                                                  NE r12, r4, r11 /* MW 4 */
	  2865      "11000000" // /* MW 3 */
	  2866      "10110100" // /* MW 2 */
	  2867      "00111001" // /* MW 1 */
.src_ref 0 "me_basic.c" 75 8
	  2868      "11110111" // 	                                        NOP;                                                        BNEZ r12,#2816;               NOP /* MW 8 */
	  2869      "00000111" // /* MW 7 */
	  2870      "10110000" // /* MW 6 */
	  2871      "10000000" // /* MW 5 */
	  2872      "10010001" // /* MW 4 */
	  2873      "00000000" // /* MW 3 */
	  2874      "00000000" // /* MW 2 */
	  2875      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2876      "00000001" // 	NOP /* MW 2 */
	  2877      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2878      "00000001" // 	NOP /* MW 2 */
	  2879      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2880      "00000001" // 	NOP /* MW 2 */
	  2881      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2882      "00000001" // 	NOP /* MW 2 */
	  2883      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2884      "00000001" // 	NOP /* MW 2 */
	  2885      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4
.loop_nesting 0
	  2886      "00000011" // 	NOP;                LDB lr, [sp, #-16] /* MW 4 */
	  2887      "00111000" // /* MW 3 */
	  2888      "11111111" // /* MW 2 */
	  2889      "01011000" // /* MW 1 */
	  2890      "11110111" // 	                                        NOP;                                                        LDA.SPIL r11, [sp, #-8];      NOP /* MW 8 */
	  2891      "01100111" // /* MW 7 */
	  2892      "11111111" // /* MW 6 */
	  2893      "11101111" // /* MW 5 */
	  2894      "11000111" // /* MW 4 */
	  2895      "00000000" // /* MW 3 */
	  2896      "00000000" // /* MW 2 */
	  2897      "10000000" // /* MW 1 */
	  2898      "11110111" // 	                                        NOP;                                                        LDA.SPIL r4, [sp, #-4];       NOP /* MW 8 */
	  2899      "11100111" // /* MW 7 */
	  2900      "11111111" // /* MW 6 */
	  2901      "11010011" // /* MW 5 */
	  2902      "11000111" // /* MW 4 */
	  2903      "00000000" // /* MW 3 */
	  2904      "00000000" // /* MW 2 */
	  2905      "10000000" // /* MW 1 */
	  2906      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-12];      NOP /* MW 8 */
	  2907      "11100111" // /* MW 7 */
	  2908      "11111110" // /* MW 6 */
	  2909      "10111111" // /* MW 5 */
	  2910      "11000111" // /* MW 4 */
	  2911      "00000000" // /* MW 3 */
	  2912      "00000000" // /* MW 2 */
	  2913      "10000000" // /* MW 1 */
	  2914      "00000001" // 	NOP /* MW 2 */
	  2915      "00000000" // /* MW 1 */
	  2916      "00000001" // 	NOP /* MW 2 */
	  2917      "00000000" // /* MW 1 */
	  2918      "00000001" // 	NOP /* MW 2 */
	  2919      "00000000" // /* MW 1 */
	  2920      "00000001" // 	NOP /* MW 2 */
	  2921      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4 first
	  2922      "00000001" // 	RET lr /* MW 2 */
	  2923      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2924      "00000001" // 	NOP /* MW 2 */
	  2925      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2926      "00000001" // 	NOP /* MW 2 */
	  2927      "00000000" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4
.delay_slot
	  2928      "00000011" // 	NOP;                                                                  MOV.s12 m0, #-32 /* MW 4 */
	  2929      "00000000" // /* MW 3 */
	  2930      "10000010" // /* MW 2 */
	  2931      "01111111" // /* MW 1 */
.src_ref 0 "me_basic.c" 77 4
.delay_slot
	  2932      "00110111" // 	PADDA [sp], m0;                         NOP;                          NOP /* MW 8 */
	  2933      "00000000" // /* MW 7 */
	  2934      "00000000" // /* MW 6 */
	  2935      "00000000" // /* MW 5 */
	  2936      "00000000" // /* MW 4 */
	  2937      "00000000" // /* MW 3 */
	  2938      "10010000" // /* MW 2 */
	  2939      "00001000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2940      "00000001" // 	NOP /* MW 2 */
.label _fini__end
	  2941      "00000000" // /* MW 1 */
.label __cxa_finalize
.function __cxa_finalize __cxa_finalize
.src_ref 7 "atexit.c" 47 first
.src_ref 7 "atexit.c" 52 14
.src_ref 7 "atexit.c" 53 4
.src_ref 7 "atexit.c" 53 4
.src_ref 7 "atexit.c" 55 15
.function_start
	  2944      "00111111" // 	NOP;                MOV.s9 r8, #-3;                                   MOV.s12 r12, #8;              MOV.u20 p0, #198640;          NOP /* MW 12 */
	  2945      "11110000" // /* MW 11 */
	  2946      "00000111" // /* MW 10 */
	  2947      "11001010" // /* MW 9 */
	  2948      "00000100" // /* MW 8 */
	  2949      "01111000" // /* MW 7 */
	  2950      "00000100" // /* MW 6 */
	  2951      "10101000" // /* MW 5 */
	  2952      "11111111" // /* MW 4 */
	  2953      "00011000" // /* MW 3 */
	  2954      "00000000" // /* MW 2 */
	  2955      "00000000" // /* MW 1 */
.src_ref 7 "atexit.c" 52 14 first
.src_ref 7 "atexit.c" 56 37
	  2956      "00111111" // 	LDA r9, [p0];       NOP;                NOP;                                                        MOV.u20 p6, #198688;          NOP /* MW 12 */
	  2957      "00100000" // /* MW 11 */
	  2958      "10001000" // /* MW 10 */
	  2959      "11001011" // /* MW 9 */
	  2960      "00000100" // /* MW 8 */
	  2961      "00000000" // /* MW 7 */
	  2962      "00000000" // /* MW 6 */
	  2963      "00010000" // /* MW 5 */
	  2964      "00000000" // /* MW 4 */
	  2965      "00000000" // /* MW 3 */
	  2966      "11010000" // /* MW 2 */
	  2967      "01111001" // /* MW 1 */
.src_ref 7 "atexit.c" 53 4 first
.src_ref 7 "atexit.c" 68
	  2968      "11110111" // 	                                        ST r12, [p0];                 NOP;                          MOV r10, lr /* MW 8 */
	  2969      "10110100" // /* MW 7 */
	  2970      "00000010" // /* MW 6 */
	  2971      "00000001" // /* MW 5 */
	  2972      "00000000" // /* MW 4 */
	  2973      "00000000" // /* MW 3 */
	  2974      "00110100" // /* MW 2 */
	  2975      "01011111" // /* MW 1 */
	  2976      "00000001" // 	NOP /* MW 2 */
	  2977      "00000000" // /* MW 1 */
	  2978      "00000001" // 	NOP /* MW 2 */
	  2979      "00000000" // /* MW 1 */
	  2980      "00000001" // 	NOP /* MW 2 */
	  2981      "00000000" // /* MW 1 */
	  2982      "00000001" // 	NOP /* MW 2 */
	  2983      "00000000" // /* MW 1 */
	  2984      "00000001" // 	NOP /* MW 2 */
	  2985      "00000000" // /* MW 1 */
	  2986      "00000001" // 	NOP /* MW 2 */
	  2987      "00000000" // /* MW 1 */
.src_ref 7 "atexit.c" 54 8 first
	  2988      "00000011" // 	NOP;                                                                  ADD r9, r9, #-8 /* MW 4 */
	  2989      "10010000" // /* MW 3 */
	  2990      "10001001" // /* MW 2 */
	  2991      "00100111" // /* MW 1 */
.src_ref 7 "atexit.c" 55 15 first
.src_ref 7 "atexit.c" 56 37
	  2992      "01110111" // 	NOP;                                                                  ASHL r11, r9, r8;             MOV m0, r9 /* MW 8 */
	  2993      "00110110" // /* MW 7 */
	  2994      "11110001" // /* MW 6 */
	  2995      "00000111" // /* MW 5 */
	  2996      "10011000" // /* MW 4 */
	  2997      "00000111" // /* MW 3 */
	  2998      "00000000" // /* MW 2 */
	  2999      "00000000" // /* MW 1 */
.src_ref 7 "atexit.c" 56 37 first
	  3000      "00000011" // 	NOP;                                    PADDS [p6], m0 /* MW 4 */
	  3001      "00110000" // /* MW 3 */
	  3002      "00010000" // /* MW 2 */
	  3003      "10100000" // /* MW 1 */
	  3004      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  3005      "00000000" // /* MW 3 */
	  3006      "00000000" // /* MW 2 */
	  3007      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.src_ref 7 "atexit.c" 65 18 first
.loop_nesting 1
	  3008      "00110111" // 	LDA cb0, [p6], #4;                      NOP;                          NOP /* MW 8 */
	  3009      "00000000" // /* MW 7 */
	  3010      "00000000" // /* MW 6 */
	  3011      "00000000" // /* MW 5 */
	  3012      "00000000" // /* MW 4 */
	  3013      "10000000" // /* MW 3 */
	  3014      "10100011" // /* MW 2 */
	  3015      "01000000" // /* MW 1 */
.src_ref 7 "atexit.c" 65 35
	  3016      "00110111" // 	LDA p0, [p6], #-12;                     NOP;                          NOP /* MW 8 */
	  3017      "00000000" // /* MW 7 */
	  3018      "00000000" // /* MW 6 */
	  3019      "00000000" // /* MW 5 */
	  3020      "00000000" // /* MW 4 */
	  3021      "10000000" // /* MW 3 */
	  3022      "10111011" // /* MW 2 */
	  3023      "01101000" // /* MW 1 */
	  3024      "00000001" // 	NOP /* MW 2 */
	  3025      "00000000" // /* MW 1 */
	  3026      "00000001" // 	NOP /* MW 2 */
	  3027      "00000000" // /* MW 1 */
	  3028      "00000001" // 	NOP /* MW 2 */
	  3029      "00000000" // /* MW 1 */
	  3030      "00000001" // 	NOP /* MW 2 */
	  3031      "00000000" // /* MW 1 */
	  3032      "00000001" // 	NOP /* MW 2 */
	  3033      "00000000" // /* MW 1 */
	  3034      "00000001" // 	NOP /* MW 2 */
	  3035      "00000000" // /* MW 1 */
.src_ref 7 "atexit.c" 65 24
.no_stack_arguments
	  3036      "01000001" // 	JAL cb0 /* MW 2 */
	  3037      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3038      "00000001" // 	NOP /* MW 2 */
	  3039      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3040      "00000001" // 	NOP /* MW 2 */
	  3041      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3042      "00000001" // 	NOP /* MW 2 */
	  3043      "00000000" // /* MW 1 */
.delay_slot
	  3044      "00000011" // 	NOP;                                                                                                MOV r4, r0 /* MW 4 */
	  3045      "00011000" // /* MW 3 */
	  3046      "00011010" // /* MW 2 */
	  3047      "00001110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3048      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	  3049      "00000000" // /* MW 7 */
	  3050      "00000000" // /* MW 6 */
	  3051      "00000000" // /* MW 5 */
	  3052      "00000000" // /* MW 4 */
	  3053      "00000000" // /* MW 3 */
	  3054      "00000000" // /* MW 2 */
	  3055      "00000000" // /* MW 1 */
.src_ref 7 "atexit.c" 62 4
.return_address
	  3056      "11110111" // 	                                        NOP;                                                        MOV.u20 cb0, #3008;           NOP /* MW 8 */
	  3057      "00000111" // /* MW 7 */
	  3058      "10111100" // /* MW 6 */
	  3059      "01000000" // /* MW 5 */
	  3060      "01000000" // /* MW 4 */
	  3061      "00000000" // /* MW 3 */
	  3062      "00000000" // /* MW 2 */
	  3063      "10000000" // /* MW 1 */
.src_ref 7 "atexit.c" 62 4 first
	  3064      "00000011" // 	NOP;                                                                  BDEC r11, r11, cb0 /* MW 4 */
	  3065      "10110000" // /* MW 3 */
	  3066      "10001011" // /* MW 2 */
	  3067      "00000011" // /* MW 1 */
.delay_slot
	  3068      "00000101" // 	MOV r0, r4 /* MW 2 */
	  3069      "11010011" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3070      "00000001" // 	NOP /* MW 2 */
	  3071      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3072      "00000001" // 	NOP /* MW 2 */
	  3073      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3074      "00000001" // 	NOP /* MW 2 */
	  3075      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3076      "00000001" // 	NOP /* MW 2 */
	  3077      "00000000" // /* MW 1 */
.src_ref 7 "atexit.c" 68
.loop_nesting 0
	  3078      "01100001" // 	MOV lr, r10 /* MW 2 */
	  3079      "10100001" // /* MW 1 */
.src_ref 7 "atexit.c" 68 first
	  3080      "00000001" // 	RET lr /* MW 2 */
	  3081      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3082      "00000001" // 	NOP /* MW 2 */
	  3083      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3084      "00000001" // 	NOP /* MW 2 */
	  3085      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3086      "00000001" // 	NOP /* MW 2 */
	  3087      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3088      "00000001" // 	NOP /* MW 2 */
	  3089      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3090      "00000001" // 	NOP /* MW 2 */
.label __cxa_finalize__end
	  3091      "00000000" // /* MW 1 */
.dir 0 "%PROCDIR%"
.dir 1 "%PROCDIR%/runtime/include"
.dir 2 "/tools/Xilinx/new/Vitis/2022.2/aietools/include/adf/window"
.dir 3 "/home/siyuangao/CCF2023-NameInvalid/build.xilinx_vck5000_gen4x8_xdma_2_202210_1.hw/work/aie/24_0/src"
.dir 4 "/home/siyuangao/CCF2023-NameInvalid/src/aie_kernels"
.dir 5 "/tools/Xilinx/new/Vitis/2022.2/aietools/include/aie_api/detail/aie1"
.dir 6 "/tools/Xilinx/new/Vitis/2022.2/aietools/include/aie_api/detail"
.dir 7 "%PROCDIR%/runtime/src"
